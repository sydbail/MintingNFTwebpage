{"ast":null,"code":"'use strict';\n\nvar _asyncToGenerator = require(\"/Users/sydneybailey/Internship/contract-testing/node_modules/@babel/runtime/helpers/asyncToGenerator\").default;\n\nconst toCamel = require('../lib/object-to-camel');\n\nconst configure = require('../lib/configure');\n\nconst toUrlSearchParams = require('../lib/to-url-search-params');\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/key').API<HTTPClientExtraOptions>} KeyAPI\n */\n\n\nmodule.exports = configure(api => {\n  /**\n   * @type {KeyAPI[\"import\"]}\n   */\n  function importKey(_x, _x2, _x3) {\n    return _importKey.apply(this, arguments);\n  }\n\n  function _importKey() {\n    _importKey = _asyncToGenerator(function* (name, pem, password, options = {}) {\n      const res = yield api.post('key/import', {\n        timeout: options.timeout,\n        signal: options.signal,\n        searchParams: toUrlSearchParams({\n          arg: name,\n          pem,\n          password,\n          ...options\n        }),\n        headers: options.headers\n      });\n      const data = yield res.json(); // @ts-ignore server output is not typed\n\n      return toCamel(data);\n    });\n    return _importKey.apply(this, arguments);\n  }\n\n  return importKey;\n});","map":null,"metadata":{},"sourceType":"script"}