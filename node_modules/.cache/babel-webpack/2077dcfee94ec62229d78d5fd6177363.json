{"ast":null,"code":"'use strict';\n\nvar _asyncToGenerator = require(\"/Users/sydneybailey/Internship/js-ipfs-examples/examples/browser-angular/node_modules/@babel/runtime/helpers/asyncToGenerator\").default;\n\nconst {\n  CID\n} = require('multiformats/cid');\n\nconst {\n  sha256\n} = require('multiformats/hashes/sha2');\n/**\n * Convert a namespace string into a cid.\n *\n * @param {string} namespace\n * @returns {Promise<CID>}\n */\n\n\nmodule.exports.namespaceToCid = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (namespace) {\n    const bytes = new TextEncoder().encode(namespace);\n    const hash = yield sha256.digest(bytes);\n    return CID.createV0(hash);\n  });\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/Users/sydneybailey/Internship/js-ipfs-examples/examples/browser-angular/node_modules/libp2p/src/circuit/utils.js"],"names":["CID","require","sha256","module","exports","namespaceToCid","namespace","bytes","TextEncoder","encode","hash","digest","createV0"],"mappings":"AAAA;;;;AAEA,MAAM;AAAEA,EAAAA;AAAF,IAAUC,OAAO,CAAC,kBAAD,CAAvB;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAaD,OAAO,CAAC,0BAAD,CAA1B;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACAE,MAAM,CAACC,OAAP,CAAeC,cAAf;AAAA,+BAAgC,WAAOC,SAAP,EAAqB;AACnD,UAAMC,KAAK,GAAG,IAAIC,WAAJ,GAAkBC,MAAlB,CAAyBH,SAAzB,CAAd;AACA,UAAMI,IAAI,SAASR,MAAM,CAACS,MAAP,CAAcJ,KAAd,CAAnB;AAEA,WAAOP,GAAG,CAACY,QAAJ,CAAaF,IAAb,CAAP;AACD,GALD;;AAAA;AAAA;AAAA;AAAA","sourcesContent":["'use strict'\n\nconst { CID } = require('multiformats/cid')\nconst { sha256 } = require('multiformats/hashes/sha2')\n\n/**\n * Convert a namespace string into a cid.\n *\n * @param {string} namespace\n * @returns {Promise<CID>}\n */\nmodule.exports.namespaceToCid = async (namespace) => {\n  const bytes = new TextEncoder().encode(namespace)\n  const hash = await sha256.digest(bytes)\n\n  return CID.createV0(hash)\n}\n"]},"metadata":{},"sourceType":"script"}