{"ast":null,"code":"'use strict';\n\nvar _asyncToGenerator = require(\"/Users/sydneybailey/Internship/contract-testing/node_modules/@babel/runtime/helpers/asyncToGenerator\").default;\n\nconst select = require('./select');\n\nconst handle = require('./handle');\n\nconst ls = require('./ls');\n\nconst {\n  PROTOCOL_ID\n} = require('./constants');\n\nexports.PROTOCOL_ID = PROTOCOL_ID;\n\nclass MultistreamSelect {\n  constructor(stream) {\n    this._stream = stream;\n    this._shaken = false;\n  } // Perform the multistream-select handshake\n\n\n  _handshake() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this._shaken) return;\n      const {\n        stream\n      } = yield select(_this._stream, PROTOCOL_ID);\n      _this._stream = stream;\n      _this._shaken = true;\n    })();\n  }\n\n}\n\nclass Dialer extends MultistreamSelect {\n  select(protocols) {\n    return select(this._stream, protocols, this._shaken ? null : PROTOCOL_ID);\n  }\n\n  ls() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this2._handshake();\n      const {\n        stream,\n        protocols\n      } = yield ls(_this2._stream);\n      _this2._stream = stream;\n      return protocols;\n    })();\n  }\n\n}\n\nexports.Dialer = Dialer;\n\nclass Listener extends MultistreamSelect {\n  handle(protocols) {\n    return handle(this._stream, protocols);\n  }\n\n}\n\nexports.Listener = Listener;","map":{"version":3,"sources":["/Users/sydneybailey/Internship/contract-testing/node_modules/multistream-select/src/index.js"],"names":["select","require","handle","ls","PROTOCOL_ID","exports","MultistreamSelect","constructor","stream","_stream","_shaken","_handshake","Dialer","protocols","Listener"],"mappings":"AAAA;;;;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAME,EAAE,GAAGF,OAAO,CAAC,MAAD,CAAlB;;AACA,MAAM;AAAEG,EAAAA;AAAF,IAAkBH,OAAO,CAAC,aAAD,CAA/B;;AAEAI,OAAO,CAACD,WAAR,GAAsBA,WAAtB;;AAEA,MAAME,iBAAN,CAAwB;AACtBC,EAAAA,WAAW,CAAEC,MAAF,EAAU;AACnB,SAAKC,OAAL,GAAeD,MAAf;AACA,SAAKE,OAAL,GAAe,KAAf;AACD,GAJqB,CAMtB;;;AACMC,EAAAA,UAAU,GAAI;AAAA;;AAAA;AAClB,UAAI,KAAI,CAACD,OAAT,EAAkB;AAClB,YAAM;AAAEF,QAAAA;AAAF,gBAAmBR,MAAM,CAAC,KAAI,CAACS,OAAN,EAAeL,WAAf,CAA/B;AACA,MAAA,KAAI,CAACK,OAAL,GAAeD,MAAf;AACA,MAAA,KAAI,CAACE,OAAL,GAAe,IAAf;AAJkB;AAKnB;;AAZqB;;AAexB,MAAME,MAAN,SAAqBN,iBAArB,CAAuC;AACrCN,EAAAA,MAAM,CAAEa,SAAF,EAAa;AACjB,WAAOb,MAAM,CAAC,KAAKS,OAAN,EAAeI,SAAf,EAA0B,KAAKH,OAAL,GAAe,IAAf,GAAsBN,WAAhD,CAAb;AACD;;AAEKD,EAAAA,EAAE,GAAI;AAAA;;AAAA;AACV,YAAM,MAAI,CAACQ,UAAL,EAAN;AACA,YAAM;AAAEH,QAAAA,MAAF;AAAUK,QAAAA;AAAV,gBAA8BV,EAAE,CAAC,MAAI,CAACM,OAAN,CAAtC;AACA,MAAA,MAAI,CAACA,OAAL,GAAeD,MAAf;AACA,aAAOK,SAAP;AAJU;AAKX;;AAVoC;;AAavCR,OAAO,CAACO,MAAR,GAAiBA,MAAjB;;AAEA,MAAME,QAAN,SAAuBR,iBAAvB,CAAyC;AACvCJ,EAAAA,MAAM,CAAEW,SAAF,EAAa;AACjB,WAAOX,MAAM,CAAC,KAAKO,OAAN,EAAeI,SAAf,CAAb;AACD;;AAHsC;;AAMzCR,OAAO,CAACS,QAAR,GAAmBA,QAAnB","sourcesContent":["'use strict'\n\nconst select = require('./select')\nconst handle = require('./handle')\nconst ls = require('./ls')\nconst { PROTOCOL_ID } = require('./constants')\n\nexports.PROTOCOL_ID = PROTOCOL_ID\n\nclass MultistreamSelect {\n  constructor (stream) {\n    this._stream = stream\n    this._shaken = false\n  }\n\n  // Perform the multistream-select handshake\n  async _handshake () {\n    if (this._shaken) return\n    const { stream } = await select(this._stream, PROTOCOL_ID)\n    this._stream = stream\n    this._shaken = true\n  }\n}\n\nclass Dialer extends MultistreamSelect {\n  select (protocols) {\n    return select(this._stream, protocols, this._shaken ? null : PROTOCOL_ID)\n  }\n\n  async ls () {\n    await this._handshake()\n    const { stream, protocols } = await ls(this._stream)\n    this._stream = stream\n    return protocols\n  }\n}\n\nexports.Dialer = Dialer\n\nclass Listener extends MultistreamSelect {\n  handle (protocols) {\n    return handle(this._stream, protocols)\n  }\n}\n\nexports.Listener = Listener\n"]},"metadata":{},"sourceType":"script"}