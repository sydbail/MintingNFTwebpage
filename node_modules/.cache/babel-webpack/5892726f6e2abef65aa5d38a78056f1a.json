{"ast":null,"code":"'use strict';\n\nvar _asyncToGenerator = require(\"/Users/sydneybailey/Internship/contract-testing/node_modules/@babel/runtime/helpers/asyncToGenerator\").default;\n\nconst {\n  CID\n} = require('multiformats/cid');\n\nconst configure = require('../lib/configure');\n\nconst toUrlSearchParams = require('../lib/to-url-search-params');\n\nconst {\n  fromString: uint8ArrayFromString\n} = require('uint8arrays/from-string');\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/object').API<HTTPClientExtraOptions>} ObjectAPI\n */\n\n\nmodule.exports = configure(api => {\n  /**\n   * @type {ObjectAPI[\"get\"]}\n   */\n  function get(_x) {\n    return _get.apply(this, arguments);\n  }\n\n  function _get() {\n    _get = _asyncToGenerator(function* (cid, options = {}) {\n      const res = yield api.post('object/get', {\n        timeout: options.timeout,\n        signal: options.signal,\n        searchParams: toUrlSearchParams({\n          arg: `${cid instanceof Uint8Array ? CID.decode(cid) : cid}`,\n          dataEncoding: 'base64',\n          ...options\n        }),\n        headers: options.headers\n      });\n      const data = yield res.json();\n      return {\n        Data: uint8ArrayFromString(data.Data, 'base64pad'),\n        Links: (data.Links || []).map((\n        /** @type {any} */\n        link) => ({\n          Name: link.Name,\n          Hash: CID.parse(link.Hash),\n          Tsize: link.Size\n        }))\n      };\n    });\n    return _get.apply(this, arguments);\n  }\n\n  return get;\n});","map":null,"metadata":{},"sourceType":"script"}