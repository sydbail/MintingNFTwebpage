{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"/Users/sydneybailey/Internship/contract-testing/node_modules/@babel/runtime/helpers/asyncToGenerator\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.scheduledModelRun = exports.asyncModelRun = exports.modelRun = void 0;\n\nconst ScheduledCommand_1 = require(\"./commands/ScheduledCommand\");\n\nconst genericModelRun = (s, cmds, initialValue, runCmd, then) => {\n  return s.then(o => {\n    const {\n      model,\n      real\n    } = o;\n    let state = initialValue;\n\n    for (const c of cmds) {\n      state = then(state, () => {\n        return runCmd(c, model, real);\n      });\n    }\n\n    return state;\n  });\n};\n\nconst internalModelRun = (s, cmds) => {\n  const then = (_p, c) => c();\n\n  const setupProducer = {\n    then: fun => {\n      fun(s());\n      return undefined;\n    }\n  };\n\n  const runSync = (cmd, m, r) => {\n    if (cmd.check(m)) cmd.run(m, r);\n    return undefined;\n  };\n\n  return genericModelRun(setupProducer, cmds, undefined, runSync, then);\n};\n\nconst isAsyncSetup = s => {\n  return typeof s.then === 'function';\n};\n\nconst internalAsyncModelRun = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (s, cmds, defaultPromise = Promise.resolve()) {\n    const then = (p, c) => p.then(c);\n\n    const setupProducer = {\n      then: fun => {\n        const out = s();\n        if (isAsyncSetup(out)) return out.then(fun);else return fun(out);\n      }\n    };\n\n    const runAsync = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(function* (cmd, m, r) {\n        if (yield cmd.check(m)) yield cmd.run(m, r);\n      });\n\n      return function runAsync(_x3, _x4, _x5) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    return yield genericModelRun(setupProducer, cmds, defaultPromise, runAsync, then);\n  });\n\n  return function internalAsyncModelRun(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nfunction modelRun(s, cmds) {\n  internalModelRun(s, cmds);\n}\n\nexports.modelRun = modelRun;\n\nfunction asyncModelRun(_x6, _x7) {\n  return _asyncModelRun.apply(this, arguments);\n}\n\nfunction _asyncModelRun() {\n  _asyncModelRun = _asyncToGenerator(function* (s, cmds) {\n    yield internalAsyncModelRun(s, cmds);\n  });\n  return _asyncModelRun.apply(this, arguments);\n}\n\nexports.asyncModelRun = asyncModelRun;\n\nfunction scheduledModelRun(_x8, _x9, _x10) {\n  return _scheduledModelRun.apply(this, arguments);\n}\n\nfunction _scheduledModelRun() {\n  _scheduledModelRun = _asyncToGenerator(function* (scheduler, s, cmds) {\n    const scheduledCommands = ScheduledCommand_1.scheduleCommands(scheduler, cmds);\n    const out = internalAsyncModelRun(s, scheduledCommands, scheduler.schedule(Promise.resolve(), 'startModel'));\n    yield scheduler.waitAll();\n    yield out;\n  });\n  return _scheduledModelRun.apply(this, arguments);\n}\n\nexports.scheduledModelRun = scheduledModelRun;","map":null,"metadata":{},"sourceType":"script"}