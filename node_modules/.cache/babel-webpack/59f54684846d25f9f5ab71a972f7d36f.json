{"ast":null,"code":"'use strict';\n\nvar _asyncToGenerator = require(\"/Users/sydneybailey/Internship/contract-testing/node_modules/@babel/runtime/helpers/asyncToGenerator\").default;\n\nconst {\n  CID\n} = require('multiformats/cid');\n\nconst configure = require('../lib/configure');\n\nconst toUrlSearchParams = require('../lib/to-url-search-params');\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\n\nmodule.exports = configure(api => {\n  /**\n   * @type {FilesAPI[\"flush\"]}\n   */\n  function flush(_x) {\n    return _flush.apply(this, arguments);\n  }\n\n  function _flush() {\n    _flush = _asyncToGenerator(function* (path, options = {}) {\n      if (!path || typeof path !== 'string') {\n        throw new Error('ipfs.files.flush requires a path');\n      }\n\n      const res = yield api.post('files/flush', {\n        timeout: options.timeout,\n        signal: options.signal,\n        searchParams: toUrlSearchParams({\n          arg: path,\n          ...options\n        }),\n        headers: options.headers\n      });\n      const data = yield res.json();\n      return CID.parse(data.Cid);\n    });\n    return _flush.apply(this, arguments);\n  }\n\n  return flush;\n});","map":null,"metadata":{},"sourceType":"script"}