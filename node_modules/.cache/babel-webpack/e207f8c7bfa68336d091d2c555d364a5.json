{"ast":null,"code":"'use strict';\n\nvar _asyncToGenerator = require(\"/Users/sydneybailey/Internship/Demo/node_modules/@babel/runtime/helpers/asyncToGenerator\").default;\n\nconst toCamel = require('../../lib/object-to-camel');\n\nconst configure = require('../../lib/configure');\n\nconst toUrlSearchParams = require('../../lib/to-url-search-params');\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/config/profiles').API<HTTPClientExtraOptions>} ConfigProfilesAPI\n */\n\n\nmodule.exports = configure(api => {\n  /**\n   * @type {ConfigProfilesAPI[\"list\"]}\n   */\n  function list() {\n    return _list.apply(this, arguments);\n  }\n\n  function _list() {\n    _list = _asyncToGenerator(function* (options = {}) {\n      const res = yield api.post('config/profile/list', {\n        timeout: options.timeout,\n        signal: options.signal,\n        searchParams: toUrlSearchParams(options),\n        headers: options.headers\n      });\n      const data = yield res.json();\n      return data.map((\n      /** @type {Record<string, any>} */\n      profile) => toCamel(profile));\n    });\n    return _list.apply(this, arguments);\n  }\n\n  return list;\n});","map":{"version":3,"sources":["/Users/sydneybailey/Internship/Demo/node_modules/ipfs-http-client/src/config/profiles/list.js"],"names":["toCamel","require","configure","toUrlSearchParams","module","exports","api","list","options","res","post","timeout","signal","searchParams","headers","data","json","map","profile"],"mappings":"AAAA;;;;AAEA,MAAMA,OAAO,GAAGC,OAAO,CAAC,2BAAD,CAAvB;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,qBAAD,CAAzB;;AACA,MAAME,iBAAiB,GAAGF,OAAO,CAAC,gCAAD,CAAjC;AAEA;AACA;AACA;AACA;;;AAEAG,MAAM,CAACC,OAAP,GAAiBH,SAAS,CAACI,GAAG,IAAI;AAChC;AACF;AACA;AAHkC,WAIjBC,IAJiB;AAAA;AAAA;;AAAA;AAAA,8BAIhC,WAAqBC,OAAO,GAAG,EAA/B,EAAmC;AACjC,YAAMC,GAAG,SAASH,GAAG,CAACI,IAAJ,CAAS,qBAAT,EAAgC;AAChDC,QAAAA,OAAO,EAAEH,OAAO,CAACG,OAD+B;AAEhDC,QAAAA,MAAM,EAAEJ,OAAO,CAACI,MAFgC;AAGhDC,QAAAA,YAAY,EAAEV,iBAAiB,CAACK,OAAD,CAHiB;AAIhDM,QAAAA,OAAO,EAAEN,OAAO,CAACM;AAJ+B,OAAhC,CAAlB;AAOA,YAAMC,IAAI,SAASN,GAAG,CAACO,IAAJ,EAAnB;AAEA,aAAOD,IAAI,CAACE,GAAL,CAAS;AAAC;AAAmCC,MAAAA,OAApC,KAAgDlB,OAAO,CAACkB,OAAD,CAAhE,CAAP;AACD,KAf+B;AAAA;AAAA;;AAgBhC,SAAOX,IAAP;AACD,CAjByB,CAA1B","sourcesContent":["'use strict'\n\nconst toCamel = require('../../lib/object-to-camel')\nconst configure = require('../../lib/configure')\nconst toUrlSearchParams = require('../../lib/to-url-search-params')\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/config/profiles').API<HTTPClientExtraOptions>} ConfigProfilesAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {ConfigProfilesAPI[\"list\"]}\n   */\n  async function list (options = {}) {\n    const res = await api.post('config/profile/list', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    const data = await res.json()\n\n    return data.map((/** @type {Record<string, any>} */ profile) => toCamel(profile))\n  }\n  return list\n})\n"]},"metadata":{},"sourceType":"script"}