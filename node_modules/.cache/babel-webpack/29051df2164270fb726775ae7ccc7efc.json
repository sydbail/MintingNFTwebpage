{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.convertToNext = exports.convertFromNextWithShrunkOnce = exports.convertFromNext = void 0;\n\nconst Arbitrary_1 = require(\"./Arbitrary\");\n\nconst ConverterFromNext_1 = require(\"./ConverterFromNext\");\n\nconst ConverterToNext_1 = require(\"./ConverterToNext\");\n\nconst NextArbitrary_1 = require(\"./NextArbitrary\");\n\nfunction convertFromNext(arb) {\n  if (ConverterToNext_1.ConverterToNext.isConverterToNext(arb)) {\n    return arb.arb;\n  }\n\n  NextArbitrary_1.assertIsNextArbitrary(arb);\n  return new ConverterFromNext_1.ConverterFromNext(arb);\n}\n\nexports.convertFromNext = convertFromNext;\n\nfunction convertFromNextWithShrunkOnce(arb, legacyShrunkOnceContext) {\n  if (ConverterToNext_1.ConverterToNext.isConverterToNext(arb)) {\n    if (!('contextualShrink' in arb.arb) || !('contextualShrinkableFor' in arb.arb) || !('shrunkOnceContext' in arb.arb) || !('shrink' in arb.arb) || !('shrinkableFor' in arb.arb)) {\n      throw new Error('Conversion rejected: Underlying arbitrary is not compatible with ArbitraryWithContextualShrink');\n    }\n\n    return arb.arb;\n  }\n\n  NextArbitrary_1.assertIsNextArbitrary(arb);\n  return new ConverterFromNext_1.ConverterFromNext(arb, legacyShrunkOnceContext);\n}\n\nexports.convertFromNextWithShrunkOnce = convertFromNextWithShrunkOnce;\n\nfunction convertToNext(arb) {\n  if (ConverterFromNext_1.ConverterFromNext.isConverterFromNext(arb)) {\n    return arb.arb;\n  }\n\n  Arbitrary_1.assertIsArbitrary(arb);\n  return new ConverterToNext_1.ConverterToNext(arb);\n}\n\nexports.convertToNext = convertToNext;","map":null,"metadata":{},"sourceType":"script"}