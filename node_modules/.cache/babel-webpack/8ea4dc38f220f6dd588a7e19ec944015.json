{"ast":null,"code":"'use strict';\n\nvar _asyncToGenerator = require(\"/Users/sydneybailey/Internship/contract-testing/node_modules/@babel/runtime/helpers/asyncToGenerator\").default;\n\nconst Key = require('interface-datastore').Key;\n\nconst sortKeys = require('sort-keys');\n\nconst {\n  toString: uint8ArrayToString\n} = require('uint8arrays/to-string');\n\nconst {\n  fromString: uint8ArrayFromString\n} = require('uint8arrays/from-string');\n\nconst specKey = new Key('datastore_spec');\n/**\n *\n * @param {import('interface-datastore').Datastore} store\n */\n\nmodule.exports = store => {\n  return {\n    /**\n     * Check if a datastore spec file exists.\n     *\n     */\n    exists() {\n      return store.has(specKey);\n    },\n\n    /**\n     * Get the current datastore spec.\n     *\n     * @returns {Promise<Uint8Array>}\n     */\n    get() {\n      return _asyncToGenerator(function* () {\n        const buf = yield store.get(specKey);\n        return JSON.parse(uint8ArrayToString(buf));\n      })();\n    },\n\n    /**\n     * Set the datastore spec of the repo, writing it to the underlying store.\n     * TODO unclear on what the type should be or if it's required\n     *\n     * @param {any} spec\n     * @returns {Promise<void>}\n     */\n    set(spec) {\n      return _asyncToGenerator(function* () {\n        return store.put(specKey, uint8ArrayFromString(JSON.stringify(sortKeys(spec, {\n          deep: true\n        }))));\n      })();\n    }\n\n  };\n};","map":null,"metadata":{},"sourceType":"script"}