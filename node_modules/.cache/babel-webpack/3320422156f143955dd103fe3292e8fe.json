{"ast":null,"code":"'use strict'; // @ts-ignore no types\n\nvar _wrapAsyncGenerator = require(\"/Users/sydneybailey/Internship/contract-testing/node_modules/@babel/runtime/helpers/wrapAsyncGenerator\").default;\n\nvar _awaitAsyncGenerator = require(\"/Users/sydneybailey/Internship/contract-testing/node_modules/@babel/runtime/helpers/awaitAsyncGenerator\").default;\n\nvar _asyncIterator = require(\"/Users/sydneybailey/Internship/contract-testing/node_modules/@babel/runtime/helpers/asyncIterator\").default;\n\nvar _asyncGeneratorDelegate = require(\"/Users/sydneybailey/Internship/contract-testing/node_modules/@babel/runtime/helpers/asyncGeneratorDelegate\").default;\n\nconst toIterable = require('stream-to-it/source');\n\nconst configure = require('../lib/configure');\n\nconst toUrlSearchParams = require('../lib/to-url-search-params');\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\n\nmodule.exports = configure(api => {\n  /**\n   * @type {FilesAPI[\"read\"]}\n   */\n  function read(_x) {\n    return _read.apply(this, arguments);\n  }\n\n  function _read() {\n    _read = _wrapAsyncGenerator(function* (path, options = {}) {\n      const res = yield _awaitAsyncGenerator(api.post('files/read', {\n        timeout: options.timeout,\n        signal: options.signal,\n        searchParams: toUrlSearchParams({\n          arg: path,\n          count: options.length,\n          ...options\n        }),\n        headers: options.headers\n      }));\n      yield* _asyncGeneratorDelegate(_asyncIterator(toIterable(res.body)), _awaitAsyncGenerator);\n    });\n    return _read.apply(this, arguments);\n  }\n\n  return read;\n});","map":null,"metadata":{},"sourceType":"script"}