{"ast":null,"code":"'use strict'; // @ts-ignore no types\n\nvar _wrapAsyncGenerator = require(\"/Users/sydneybailey/Internship/Dapp/node_modules/@babel/runtime/helpers/wrapAsyncGenerator\").default;\n\nvar _awaitAsyncGenerator = require(\"/Users/sydneybailey/Internship/Dapp/node_modules/@babel/runtime/helpers/awaitAsyncGenerator\").default;\n\nvar _asyncIterator = require(\"/Users/sydneybailey/Internship/Dapp/node_modules/@babel/runtime/helpers/asyncIterator\").default;\n\nvar _asyncGeneratorDelegate = require(\"/Users/sydneybailey/Internship/Dapp/node_modules/@babel/runtime/helpers/asyncGeneratorDelegate\").default;\n\nconst toIterable = require('stream-to-it/source');\n\nconst configure = require('../lib/configure');\n\nconst toUrlSearchParams = require('../lib/to-url-search-params');\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\n\nmodule.exports = configure(api => {\n  /**\n   * @type {FilesAPI[\"read\"]}\n   */\n  function read(_x) {\n    return _read.apply(this, arguments);\n  }\n\n  function _read() {\n    _read = _wrapAsyncGenerator(function* (path, options = {}) {\n      const res = yield _awaitAsyncGenerator(api.post('files/read', {\n        timeout: options.timeout,\n        signal: options.signal,\n        searchParams: toUrlSearchParams({\n          arg: path,\n          count: options.length,\n          ...options\n        }),\n        headers: options.headers\n      }));\n      yield* _asyncGeneratorDelegate(_asyncIterator(toIterable(res.body)), _awaitAsyncGenerator);\n    });\n    return _read.apply(this, arguments);\n  }\n\n  return read;\n});","map":{"version":3,"sources":["/Users/sydneybailey/Internship/Dapp/node_modules/ipfs-http-client/src/files/read.js"],"names":["toIterable","require","configure","toUrlSearchParams","module","exports","api","read","path","options","res","post","timeout","signal","searchParams","arg","count","length","headers","body"],"mappings":"AAAA,a,CAEA;;;;;;;;;;AACA,MAAMA,UAAU,GAAGC,OAAO,CAAC,qBAAD,CAA1B;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,kBAAD,CAAzB;;AACA,MAAME,iBAAiB,GAAGF,OAAO,CAAC,6BAAD,CAAjC;AAEA;AACA;AACA;AACA;;;AAEAG,MAAM,CAACC,OAAP,GAAiBH,SAAS,CAACI,GAAG,IAAI;AAChC;AACF;AACA;AAHkC,WAIfC,IAJe;AAAA;AAAA;;AAAA;AAAA,gCAIhC,WAAuBC,IAAvB,EAA6BC,OAAO,GAAG,EAAvC,EAA2C;AACzC,YAAMC,GAAG,8BAASJ,GAAG,CAACK,IAAJ,CAAS,YAAT,EAAuB;AACvCC,QAAAA,OAAO,EAAEH,OAAO,CAACG,OADsB;AAEvCC,QAAAA,MAAM,EAAEJ,OAAO,CAACI,MAFuB;AAGvCC,QAAAA,YAAY,EAAEX,iBAAiB,CAAC;AAC9BY,UAAAA,GAAG,EAAEP,IADyB;AAE9BQ,UAAAA,KAAK,EAAEP,OAAO,CAACQ,MAFe;AAG9B,aAAGR;AAH2B,SAAD,CAHQ;AAQvCS,QAAAA,OAAO,EAAET,OAAO,CAACS;AARsB,OAAvB,CAAT,CAAT;AAWA,oDAAQlB,UAAU,CAACU,GAAG,CAACS,IAAL,CAAlB;AACD,KAjB+B;AAAA;AAAA;;AAkBhC,SAAOZ,IAAP;AACD,CAnByB,CAA1B","sourcesContent":["'use strict'\n\n// @ts-ignore no types\nconst toIterable = require('stream-to-it/source')\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {FilesAPI[\"read\"]}\n   */\n  async function * read (path, options = {}) {\n    const res = await api.post('files/read', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        count: options.length,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    yield * toIterable(res.body)\n  }\n  return read\n})\n"]},"metadata":{},"sourceType":"script"}