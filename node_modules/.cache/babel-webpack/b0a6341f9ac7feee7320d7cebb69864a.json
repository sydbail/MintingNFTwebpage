{"ast":null,"code":"'use strict';\n\nvar _asyncToGenerator = require(\"/Users/sydneybailey/Internship/contract-testing/node_modules/@babel/runtime/helpers/asyncToGenerator\").default;\n\nconst configure = require('../lib/configure');\n\nconst toUrlSearchParams = require('../lib/to-url-search-params');\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/repo').API<HTTPClientExtraOptions>} RepoAPI\n */\n\n\nmodule.exports = configure(api => {\n  /**\n   * @type {RepoAPI[\"stat\"]}\n   */\n  function stat() {\n    return _stat.apply(this, arguments);\n  }\n\n  function _stat() {\n    _stat = _asyncToGenerator(function* (options = {}) {\n      const res = yield api.post('repo/stat', {\n        timeout: options.timeout,\n        signal: options.signal,\n        searchParams: toUrlSearchParams(options),\n        headers: options.headers\n      });\n      const data = yield res.json();\n      return {\n        numObjects: BigInt(data.NumObjects),\n        repoSize: BigInt(data.RepoSize),\n        repoPath: data.RepoPath,\n        version: data.Version,\n        storageMax: BigInt(data.StorageMax)\n      };\n    });\n    return _stat.apply(this, arguments);\n  }\n\n  return stat;\n});","map":{"version":3,"sources":["/Users/sydneybailey/Internship/contract-testing/node_modules/ipfs-http-client/src/repo/stat.js"],"names":["configure","require","toUrlSearchParams","module","exports","api","stat","options","res","post","timeout","signal","searchParams","headers","data","json","numObjects","BigInt","NumObjects","repoSize","RepoSize","repoPath","RepoPath","version","Version","storageMax","StorageMax"],"mappings":"AAAA;;;;AAEA,MAAMA,SAAS,GAAGC,OAAO,CAAC,kBAAD,CAAzB;;AACA,MAAMC,iBAAiB,GAAGD,OAAO,CAAC,6BAAD,CAAjC;AAEA;AACA;AACA;AACA;;;AAEAE,MAAM,CAACC,OAAP,GAAiBJ,SAAS,CAACK,GAAG,IAAI;AAChC;AACF;AACA;AAHkC,WAIjBC,IAJiB;AAAA;AAAA;;AAAA;AAAA,8BAIhC,WAAqBC,OAAO,GAAG,EAA/B,EAAmC;AACjC,YAAMC,GAAG,SAASH,GAAG,CAACI,IAAJ,CAAS,WAAT,EAAsB;AACtCC,QAAAA,OAAO,EAAEH,OAAO,CAACG,OADqB;AAEtCC,QAAAA,MAAM,EAAEJ,OAAO,CAACI,MAFsB;AAGtCC,QAAAA,YAAY,EAAEV,iBAAiB,CAACK,OAAD,CAHO;AAItCM,QAAAA,OAAO,EAAEN,OAAO,CAACM;AAJqB,OAAtB,CAAlB;AAMA,YAAMC,IAAI,SAASN,GAAG,CAACO,IAAJ,EAAnB;AAEA,aAAO;AACLC,QAAAA,UAAU,EAAEC,MAAM,CAACH,IAAI,CAACI,UAAN,CADb;AAELC,QAAAA,QAAQ,EAAEF,MAAM,CAACH,IAAI,CAACM,QAAN,CAFX;AAGLC,QAAAA,QAAQ,EAAEP,IAAI,CAACQ,QAHV;AAILC,QAAAA,OAAO,EAAET,IAAI,CAACU,OAJT;AAKLC,QAAAA,UAAU,EAAER,MAAM,CAACH,IAAI,CAACY,UAAN;AALb,OAAP;AAOD,KApB+B;AAAA;AAAA;;AAqBhC,SAAOpB,IAAP;AACD,CAtByB,CAA1B","sourcesContent":["'use strict'\n\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/repo').API<HTTPClientExtraOptions>} RepoAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {RepoAPI[\"stat\"]}\n   */\n  async function stat (options = {}) {\n    const res = await api.post('repo/stat', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return {\n      numObjects: BigInt(data.NumObjects),\n      repoSize: BigInt(data.RepoSize),\n      repoPath: data.RepoPath,\n      version: data.Version,\n      storageMax: BigInt(data.StorageMax)\n    }\n  }\n  return stat\n})\n"]},"metadata":{},"sourceType":"script"}