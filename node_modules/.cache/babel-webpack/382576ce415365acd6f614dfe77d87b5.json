{"ast":null,"code":"var _asyncToGenerator = require(\"/Users/sydneybailey/Internship/contract-testing/node_modules/@babel/runtime/helpers/asyncToGenerator\").default;\n\nmodule.exports = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (socket) {\n    // if the socket is closing or closed, return end\n    if (socket.readyState >= 2) {\n      throw new Error('socket closed');\n    } // if open, return\n\n\n    if (socket.readyState === 1) {\n      return;\n    }\n\n    return new Promise((resolve, reject) => {\n      const remove = socket && (socket.removeEventListener || socket.removeListener);\n\n      function cleanup() {\n        if (typeof remove === 'function') {\n          remove.call(socket, 'open', handleOpen);\n          remove.call(socket, 'error', handleErr);\n        }\n      }\n\n      function handleOpen() {\n        cleanup();\n        resolve();\n      }\n\n      function handleErr(evt) {\n        cleanup();\n        reject(evt);\n      }\n\n      socket.addEventListener('open', handleOpen);\n      socket.addEventListener('error', handleErr);\n    });\n  });\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":null,"metadata":{},"sourceType":"script"}