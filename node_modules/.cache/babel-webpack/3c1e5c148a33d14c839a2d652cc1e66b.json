{"ast":null,"code":"'use strict';\n\nvar _asyncToGenerator = require(\"/Users/sydneybailey/Internship/Demo/node_modules/@babel/runtime/helpers/asyncToGenerator\").default;\n\nconst dagPb = require('@ipld/dag-pb');\n\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option');\n/**\n * @param {Object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('../../types').Preload} config.preload\n */\n\n\nmodule.exports = ({\n  repo,\n  preload\n}) => {\n  /**\n   * @type {import('ipfs-core-types/src/object').API[\"get\"]}\n   */\n  function get(_x) {\n    return _get.apply(this, arguments);\n  }\n\n  function _get() {\n    _get = _asyncToGenerator(function* (cid, options = {}) {\n      // eslint-disable-line require-await\n      if (options.preload !== false) {\n        preload(cid);\n      }\n\n      const block = yield repo.blocks.get(cid, options);\n      return dagPb.decode(block);\n    });\n    return _get.apply(this, arguments);\n  }\n\n  return withTimeoutOption(get);\n};","map":{"version":3,"sources":["/Users/sydneybailey/Internship/Demo/node_modules/ipfs-core/src/components/object/get.js"],"names":["dagPb","require","withTimeoutOption","module","exports","repo","preload","get","cid","options","block","blocks","decode"],"mappings":"AAAA;;;;AAEA,MAAMA,KAAK,GAAGC,OAAO,CAAC,cAAD,CAArB;;AACA,MAAMC,iBAAiB,GAAGD,OAAO,CAAC,yCAAD,CAAjC;AAEA;AACA;AACA;AACA;AACA;;;AACAE,MAAM,CAACC,OAAP,GAAiB,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAuB;AACtC;AACF;AACA;AAHwC,WAIvBC,GAJuB;AAAA;AAAA;;AAAA;AAAA,6BAItC,WAAoBC,GAApB,EAAyBC,OAAO,GAAG,EAAnC,EAAuC;AAAE;AACvC,UAAIA,OAAO,CAACH,OAAR,KAAoB,KAAxB,EAA+B;AAC7BA,QAAAA,OAAO,CAACE,GAAD,CAAP;AACD;;AAED,YAAME,KAAK,SAASL,IAAI,CAACM,MAAL,CAAYJ,GAAZ,CAAgBC,GAAhB,EAAqBC,OAArB,CAApB;AAEA,aAAOT,KAAK,CAACY,MAAN,CAAaF,KAAb,CAAP;AACD,KAZqC;AAAA;AAAA;;AActC,SAAOR,iBAAiB,CAACK,GAAD,CAAxB;AACD,CAfD","sourcesContent":["'use strict'\n\nconst dagPb = require('@ipld/dag-pb')\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option')\n\n/**\n * @param {Object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('../../types').Preload} config.preload\n */\nmodule.exports = ({ repo, preload }) => {\n  /**\n   * @type {import('ipfs-core-types/src/object').API[\"get\"]}\n   */\n  async function get (cid, options = {}) { // eslint-disable-line require-await\n    if (options.preload !== false) {\n      preload(cid)\n    }\n\n    const block = await repo.blocks.get(cid, options)\n\n    return dagPb.decode(block)\n  }\n\n  return withTimeoutOption(get)\n}\n"]},"metadata":{},"sourceType":"script"}