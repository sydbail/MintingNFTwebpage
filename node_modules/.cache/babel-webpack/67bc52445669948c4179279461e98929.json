{"ast":null,"code":"'use strict';\n\nvar _asyncToGenerator = require(\"/Users/sydneybailey/Internship/Demo/node_modules/@babel/runtime/helpers/asyncToGenerator\").default;\n\nconst Client = require('../../lib/core');\n\nconst toUrlSearchParams = require('../../lib/to-url-search-params');\n/**\n * @typedef {import('../../types').Options} Options\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n * @typedef {import('ipfs-core-types/src/pin/remote/service').Credentials} Credentials\n * @typedef {import('ipfs-core-types/src/pin/remote/service').RemotePinService} RemotePinService\n * @typedef {import('ipfs-core-types/src/pin/remote/service').RemotePinServiceWithStat} RemotePinServiceWithStat\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin/remote/service').API<HTTPClientExtraOptions>} RemotePiningServiceAPI\n * @typedef {import('ipfs-core-types/src/pin/remote/service').Stat} Stat\n */\n\n\nclass Service {\n  /**\n   * @param {Options} options\n   */\n  constructor(options) {\n    this.client = new Client(options);\n  }\n  /**\n   * @param {URL} url\n   */\n\n\n  static encodeEndpoint(url) {\n    const href = String(url);\n\n    if (href === 'undefined') {\n      throw Error('endpoint is required');\n    } // Workaround trailing `/` issue in go-ipfs\n    // @see https://github.com/ipfs/go-ipfs/issues/7826\n\n\n    return href[href.length - 1] === '/' ? href.slice(0, -1) : href;\n  }\n  /**\n   * @param {any} json\n   * @returns {RemotePinServiceWithStat}\n   */\n\n\n  static decodeRemoteService(json) {\n    return {\n      service: json.Service,\n      endpoint: new URL(json.ApiEndpoint),\n      ...(json.Stat && {\n        stat: Service.decodeStat(json.Stat)\n      })\n    };\n  }\n  /**\n   * @param {any} json\n   * @returns {import('ipfs-core-types/src/pin/remote/service').Stat}\n   */\n\n\n  static decodeStat(json) {\n    switch (json.Status) {\n      case 'valid':\n        {\n          const {\n            Pinning,\n            Pinned,\n            Queued,\n            Failed\n          } = json.PinCount;\n          return {\n            status: 'valid',\n            pinCount: {\n              queued: Queued,\n              pinning: Pinning,\n              pinned: Pinned,\n              failed: Failed\n            }\n          };\n        }\n\n      case 'invalid':\n        {\n          return {\n            status: 'invalid'\n          };\n        }\n\n      default:\n        {\n          return {\n            status: json.Status\n          };\n        }\n    }\n  }\n\n}\n/**\n * @type {RemotePiningServiceAPI[\"add\"]}\n */\n\n\nService.prototype.add = /*#__PURE__*/function () {\n  var _add = _asyncToGenerator(function* (name, options) {\n    const {\n      endpoint,\n      key,\n      headers,\n      timeout,\n      signal\n    } = options;\n    yield this.client.post('pin/remote/service/add', {\n      timeout,\n      signal,\n      searchParams: toUrlSearchParams({\n        arg: [name, Service.encodeEndpoint(endpoint), key]\n      }),\n      headers\n    });\n  });\n\n  function add(_x, _x2) {\n    return _add.apply(this, arguments);\n  }\n\n  return add;\n}();\n/**\n * @type {RemotePiningServiceAPI[\"rm\"]}\n */\n\n\nService.prototype.rm = /*#__PURE__*/function () {\n  var _rm = _asyncToGenerator(function* (name, options = {}) {\n    yield this.client.post('pin/remote/service/rm', {\n      timeout: options.timeout,\n      signal: options.signal,\n      headers: options.headers,\n      searchParams: toUrlSearchParams({\n        arg: name\n      })\n    });\n  });\n\n  function rm(_x3) {\n    return _rm.apply(this, arguments);\n  }\n\n  return rm;\n}();\n/**\n * @type {RemotePiningServiceAPI[\"ls\"]}\n */\n\n\nService.prototype.ls = /*#__PURE__*/function () {\n  var _ls = _asyncToGenerator(function* (options = {}) {\n    // @ts-ignore cannot derive option type from typedef\n    const {\n      stat,\n      headers,\n      timeout,\n      signal\n    } = options;\n    const response = yield this.client.post('pin/remote/service/ls', {\n      timeout,\n      signal,\n      headers,\n      searchParams: stat === true ? toUrlSearchParams({\n        stat\n      }) : undefined\n    });\n    /** @type {{RemoteServices: Object[]}} */\n\n    const {\n      RemoteServices\n    } = yield response.json();\n    return RemoteServices.map(Service.decodeRemoteService);\n  });\n\n  function ls() {\n    return _ls.apply(this, arguments);\n  }\n\n  return ls;\n}();\n\nmodule.exports = Service;","map":{"version":3,"sources":["/Users/sydneybailey/Internship/Demo/node_modules/ipfs-http-client/src/pin/remote/service.js"],"names":["Client","require","toUrlSearchParams","Service","constructor","options","client","encodeEndpoint","url","href","String","Error","length","slice","decodeRemoteService","json","service","endpoint","URL","ApiEndpoint","Stat","stat","decodeStat","Status","Pinning","Pinned","Queued","Failed","PinCount","status","pinCount","queued","pinning","pinned","failed","prototype","add","name","key","headers","timeout","signal","post","searchParams","arg","rm","ls","response","undefined","RemoteServices","map","module","exports"],"mappings":"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","sourcesContent":["'use strict'\n\nconst Client = require('../../lib/core')\nconst toUrlSearchParams = require('../../lib/to-url-search-params')\n\n/**\n * @typedef {import('../../types').Options} Options\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n * @typedef {import('ipfs-core-types/src/pin/remote/service').Credentials} Credentials\n * @typedef {import('ipfs-core-types/src/pin/remote/service').RemotePinService} RemotePinService\n * @typedef {import('ipfs-core-types/src/pin/remote/service').RemotePinServiceWithStat} RemotePinServiceWithStat\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin/remote/service').API<HTTPClientExtraOptions>} RemotePiningServiceAPI\n * @typedef {import('ipfs-core-types/src/pin/remote/service').Stat} Stat\n */\nclass Service {\n  /**\n   * @param {Options} options\n   */\n  constructor (options) {\n    this.client = new Client(options)\n  }\n\n  /**\n   * @param {URL} url\n   */\n  static encodeEndpoint (url) {\n    const href = String(url)\n    if (href === 'undefined') {\n      throw Error('endpoint is required')\n    }\n    // Workaround trailing `/` issue in go-ipfs\n    // @see https://github.com/ipfs/go-ipfs/issues/7826\n    return href[href.length - 1] === '/' ? href.slice(0, -1) : href\n  }\n\n  /**\n   * @param {any} json\n   * @returns {RemotePinServiceWithStat}\n   */\n  static decodeRemoteService (json) {\n    return {\n      service: json.Service,\n      endpoint: new URL(json.ApiEndpoint),\n      ...(json.Stat && { stat: Service.decodeStat(json.Stat) })\n    }\n  }\n\n  /**\n   * @param {any} json\n   * @returns {import('ipfs-core-types/src/pin/remote/service').Stat}\n   */\n  static decodeStat (json) {\n    switch (json.Status) {\n      case 'valid': {\n        const { Pinning, Pinned, Queued, Failed } = json.PinCount\n        return {\n          status: 'valid',\n          pinCount: {\n            queued: Queued,\n            pinning: Pinning,\n            pinned: Pinned,\n            failed: Failed\n          }\n        }\n      }\n      case 'invalid': {\n        return { status: 'invalid' }\n      }\n      default: {\n        return { status: json.Status }\n      }\n    }\n  }\n}\n\n/**\n * @type {RemotePiningServiceAPI[\"add\"]}\n */\nService.prototype.add = async function add (name, options) {\n  const { endpoint, key, headers, timeout, signal } = options\n\n  await this.client.post('pin/remote/service/add', {\n    timeout,\n    signal,\n    searchParams: toUrlSearchParams({\n      arg: [name, Service.encodeEndpoint(endpoint), key]\n    }),\n    headers\n  })\n}\n\n/**\n * @type {RemotePiningServiceAPI[\"rm\"]}\n */\nService.prototype.rm = async function rm (name, options = {}) {\n  await this.client.post('pin/remote/service/rm', {\n    timeout: options.timeout,\n    signal: options.signal,\n    headers: options.headers,\n    searchParams: toUrlSearchParams({\n      arg: name\n    })\n  })\n}\n\n/**\n * @type {RemotePiningServiceAPI[\"ls\"]}\n */\nService.prototype.ls = async function ls (options = {}) {\n  // @ts-ignore cannot derive option type from typedef\n  const { stat, headers, timeout, signal } = options\n\n  const response = await this.client.post('pin/remote/service/ls', {\n    timeout,\n    signal,\n    headers,\n    searchParams: stat === true ? toUrlSearchParams({ stat }) : undefined\n  })\n\n  /** @type {{RemoteServices: Object[]}} */\n  const { RemoteServices } = await response.json()\n\n  return RemoteServices.map(Service.decodeRemoteService)\n}\n\nmodule.exports = Service\n"]},"metadata":{},"sourceType":"script"}