{"ast":null,"code":"'use strict';\n\nvar _wrapAsyncGenerator = require(\"/Users/sydneybailey/Internship/Demo/node_modules/@babel/runtime/helpers/wrapAsyncGenerator\").default;\n\nvar _awaitAsyncGenerator = require(\"/Users/sydneybailey/Internship/Demo/node_modules/@babel/runtime/helpers/awaitAsyncGenerator\").default;\n\nvar _asyncIterator = require(\"/Users/sydneybailey/Internship/Demo/node_modules/@babel/runtime/helpers/asyncIterator\").default;\n\nvar _asyncGeneratorDelegate = require(\"/Users/sydneybailey/Internship/Demo/node_modules/@babel/runtime/helpers/asyncGeneratorDelegate\").default;\n\nconst configure = require('../lib/configure');\n\nconst toUrlSearchParams = require('../lib/to-url-search-params');\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/stats').API<HTTPClientExtraOptions>} StatsAPI\n */\n\n\nmodule.exports = configure(api => {\n  /**\n   * @type {StatsAPI[\"bw\"]}\n   */\n  function bw() {\n    return _bw.apply(this, arguments);\n  }\n\n  function _bw() {\n    _bw = _wrapAsyncGenerator(function* (options = {}) {\n      const res = yield _awaitAsyncGenerator(api.post('stats/bw', {\n        timeout: options.timeout,\n        signal: options.signal,\n        searchParams: toUrlSearchParams(options),\n        headers: options.headers,\n        transform: stats => ({\n          totalIn: BigInt(stats.TotalIn),\n          totalOut: BigInt(stats.TotalOut),\n          rateIn: parseFloat(stats.RateIn),\n          rateOut: parseFloat(stats.RateOut)\n        })\n      }));\n      yield* _asyncGeneratorDelegate(_asyncIterator(res.ndjson()), _awaitAsyncGenerator);\n    });\n    return _bw.apply(this, arguments);\n  }\n\n  return bw;\n});","map":{"version":3,"sources":["/Users/sydneybailey/Internship/Demo/node_modules/ipfs-http-client/src/stats/bw.js"],"names":["configure","require","toUrlSearchParams","module","exports","api","bw","options","res","post","timeout","signal","searchParams","headers","transform","stats","totalIn","BigInt","TotalIn","totalOut","TotalOut","rateIn","parseFloat","RateIn","rateOut","RateOut","ndjson"],"mappings":"AAAA;;;;;;;;;;AAEA,MAAMA,SAAS,GAAGC,OAAO,CAAC,kBAAD,CAAzB;;AACA,MAAMC,iBAAiB,GAAGD,OAAO,CAAC,6BAAD,CAAjC;AAEA;AACA;AACA;AACA;;;AAEAE,MAAM,CAACC,OAAP,GAAiBJ,SAAS,CAACK,GAAG,IAAI;AAChC;AACF;AACA;AAHkC,WAIfC,EAJe;AAAA;AAAA;;AAAA;AAAA,8BAIhC,WAAqBC,OAAO,GAAG,EAA/B,EAAmC;AACjC,YAAMC,GAAG,8BAASH,GAAG,CAACI,IAAJ,CAAS,UAAT,EAAqB;AACrCC,QAAAA,OAAO,EAAEH,OAAO,CAACG,OADoB;AAErCC,QAAAA,MAAM,EAAEJ,OAAO,CAACI,MAFqB;AAGrCC,QAAAA,YAAY,EAAEV,iBAAiB,CAACK,OAAD,CAHM;AAIrCM,QAAAA,OAAO,EAAEN,OAAO,CAACM,OAJoB;AAKrCC,QAAAA,SAAS,EAAGC,KAAD,KAAY;AACrBC,UAAAA,OAAO,EAAEC,MAAM,CAACF,KAAK,CAACG,OAAP,CADM;AAErBC,UAAAA,QAAQ,EAAEF,MAAM,CAACF,KAAK,CAACK,QAAP,CAFK;AAGrBC,UAAAA,MAAM,EAAEC,UAAU,CAACP,KAAK,CAACQ,MAAP,CAHG;AAIrBC,UAAAA,OAAO,EAAEF,UAAU,CAACP,KAAK,CAACU,OAAP;AAJE,SAAZ;AAL0B,OAArB,CAAT,CAAT;AAaA,oDAAQjB,GAAG,CAACkB,MAAJ,EAAR;AACD,KAnB+B;AAAA;AAAA;;AAoBhC,SAAOpB,EAAP;AACD,CArByB,CAA1B","sourcesContent":["'use strict'\n\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/stats').API<HTTPClientExtraOptions>} StatsAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {StatsAPI[\"bw\"]}\n   */\n  async function * bw (options = {}) {\n    const res = await api.post('stats/bw', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers,\n      transform: (stats) => ({\n        totalIn: BigInt(stats.TotalIn),\n        totalOut: BigInt(stats.TotalOut),\n        rateIn: parseFloat(stats.RateIn),\n        rateOut: parseFloat(stats.RateOut)\n      })\n    })\n\n    yield * res.ndjson()\n  }\n  return bw\n})\n"]},"metadata":{},"sourceType":"script"}