{"ast":null,"code":"'use strict';\n\nconst {\n  base58btc\n} = require('multiformats/bases/base58');\n\nclass WantListEntry {\n  /**\n   * @param {import('multiformats').CID} cid\n   * @param {number} priority\n   * @param {import('../message/message').Message.Wantlist.WantType} wantType\n   */\n  constructor(cid, priority, wantType) {\n    // Keep track of how many requests we have for this key\n    this._refCounter = 1;\n    this.cid = cid;\n    this.priority = priority || 1;\n    this.wantType = wantType;\n  }\n\n  inc() {\n    this._refCounter += 1;\n  }\n\n  dec() {\n    this._refCounter = Math.max(0, this._refCounter - 1);\n  }\n\n  hasRefs() {\n    return this._refCounter > 0;\n  } // So that console.log prints a nice description of this object\n\n\n  get [Symbol.toStringTag]() {\n    const cidStr = this.cid.toString(base58btc);\n    return `WantlistEntry <key: ${cidStr}, priority: ${this.priority}, refs: ${this._refCounter}>`;\n  }\n  /**\n   * @param {any} other\n   */\n\n\n  equals(other) {\n    return this._refCounter === other._refCounter && this.cid.equals(other.cid) && this.priority === other.priority && this.wantType === other.wantType;\n  }\n\n}\n\nmodule.exports = WantListEntry;","map":null,"metadata":{},"sourceType":"script"}