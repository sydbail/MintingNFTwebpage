{"ast":null,"code":"'use strict';\n\nvar _asyncToGenerator = require(\"/Users/sydneybailey/Internship/Dapp/node_modules/@babel/runtime/helpers/asyncToGenerator\").default;\n\nconst {\n  cleanCid\n} = require('./utils');\n\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option');\n/**\n * @param {Object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('../../types').Preload} config.preload\n */\n\n\nmodule.exports = ({\n  repo,\n  preload\n}) => {\n  /**\n   * @type {import('ipfs-core-types/src/block').API[\"stat\"]}\n   */\n  function stat(_x) {\n    return _stat.apply(this, arguments);\n  }\n\n  function _stat() {\n    _stat = _asyncToGenerator(function* (cid, options = {}) {\n      cid = cleanCid(cid);\n\n      if (options.preload !== false) {\n        preload(cid);\n      }\n\n      const block = yield repo.blocks.get(cid);\n      return {\n        cid,\n        size: block.length\n      };\n    });\n    return _stat.apply(this, arguments);\n  }\n\n  return withTimeoutOption(stat);\n};","map":{"version":3,"sources":["/Users/sydneybailey/Internship/Dapp/node_modules/ipfs-core/src/components/block/stat.js"],"names":["cleanCid","require","withTimeoutOption","module","exports","repo","preload","stat","cid","options","block","blocks","get","size","length"],"mappings":"AAAA;;;;AAEA,MAAM;AAAEA,EAAAA;AAAF,IAAeC,OAAO,CAAC,SAAD,CAA5B;;AACA,MAAMC,iBAAiB,GAAGD,OAAO,CAAC,yCAAD,CAAjC;AAEA;AACA;AACA;AACA;AACA;;;AAEAE,MAAM,CAACC,OAAP,GAAiB,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAuB;AACtC;AACF;AACA;AAHwC,WAIvBC,IAJuB;AAAA;AAAA;;AAAA;AAAA,8BAItC,WAAqBC,GAArB,EAA0BC,OAAO,GAAG,EAApC,EAAwC;AACtCD,MAAAA,GAAG,GAAGR,QAAQ,CAACQ,GAAD,CAAd;;AAEA,UAAIC,OAAO,CAACH,OAAR,KAAoB,KAAxB,EAA+B;AAC7BA,QAAAA,OAAO,CAACE,GAAD,CAAP;AACD;;AAED,YAAME,KAAK,SAASL,IAAI,CAACM,MAAL,CAAYC,GAAZ,CAAgBJ,GAAhB,CAApB;AAEA,aAAO;AAAEA,QAAAA,GAAF;AAAOK,QAAAA,IAAI,EAAEH,KAAK,CAACI;AAAnB,OAAP;AACD,KAdqC;AAAA;AAAA;;AAgBtC,SAAOZ,iBAAiB,CAACK,IAAD,CAAxB;AACD,CAjBD","sourcesContent":["'use strict'\n\nconst { cleanCid } = require('./utils')\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option')\n\n/**\n * @param {Object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('../../types').Preload} config.preload\n */\n\nmodule.exports = ({ repo, preload }) => {\n  /**\n   * @type {import('ipfs-core-types/src/block').API[\"stat\"]}\n   */\n  async function stat (cid, options = {}) {\n    cid = cleanCid(cid)\n\n    if (options.preload !== false) {\n      preload(cid)\n    }\n\n    const block = await repo.blocks.get(cid)\n\n    return { cid, size: block.length }\n  }\n\n  return withTimeoutOption(stat)\n}\n"]},"metadata":{},"sourceType":"script"}