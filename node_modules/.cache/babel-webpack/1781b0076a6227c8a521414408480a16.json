{"ast":null,"code":"'use strict';\n\nvar _asyncToGenerator = require(\"/Users/sydneybailey/Internship/Dapp/node_modules/@babel/runtime/helpers/asyncToGenerator\").default;\n\nconst configure = require('../lib/configure');\n\nconst toUrlSearchParams = require('../lib/to-url-search-params');\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pubsub').API<HTTPClientExtraOptions>} PubsubAPI\n */\n\n\nmodule.exports = configure(api => {\n  /**\n   * @type {PubsubAPI[\"peers\"]}\n   */\n  function peers(_x) {\n    return _peers.apply(this, arguments);\n  }\n\n  function _peers() {\n    _peers = _asyncToGenerator(function* (topic, options = {}) {\n      const res = yield api.post('pubsub/peers', {\n        timeout: options.timeout,\n        signal: options.signal,\n        searchParams: toUrlSearchParams({\n          arg: topic,\n          ...options\n        }),\n        headers: options.headers\n      });\n      const {\n        Strings\n      } = yield res.json();\n      return Strings || [];\n    });\n    return _peers.apply(this, arguments);\n  }\n\n  return peers;\n});","map":{"version":3,"sources":["/Users/sydneybailey/Internship/Dapp/node_modules/ipfs-http-client/src/pubsub/peers.js"],"names":["configure","require","toUrlSearchParams","module","exports","api","peers","topic","options","res","post","timeout","signal","searchParams","arg","headers","Strings","json"],"mappings":"AAAA;;;;AAEA,MAAMA,SAAS,GAAGC,OAAO,CAAC,kBAAD,CAAzB;;AACA,MAAMC,iBAAiB,GAAGD,OAAO,CAAC,6BAAD,CAAjC;AAEA;AACA;AACA;AACA;;;AAEAE,MAAM,CAACC,OAAP,GAAiBJ,SAAS,CAACK,GAAG,IAAI;AAChC;AACF;AACA;AAHkC,WAIjBC,KAJiB;AAAA;AAAA;;AAAA;AAAA,+BAIhC,WAAsBC,KAAtB,EAA6BC,OAAO,GAAG,EAAvC,EAA2C;AACzC,YAAMC,GAAG,SAASJ,GAAG,CAACK,IAAJ,CAAS,cAAT,EAAyB;AACzCC,QAAAA,OAAO,EAAEH,OAAO,CAACG,OADwB;AAEzCC,QAAAA,MAAM,EAAEJ,OAAO,CAACI,MAFyB;AAGzCC,QAAAA,YAAY,EAAEX,iBAAiB,CAAC;AAC9BY,UAAAA,GAAG,EAAEP,KADyB;AAE9B,aAAGC;AAF2B,SAAD,CAHU;AAOzCO,QAAAA,OAAO,EAAEP,OAAO,CAACO;AAPwB,OAAzB,CAAlB;AAUA,YAAM;AAAEC,QAAAA;AAAF,gBAAoBP,GAAG,CAACQ,IAAJ,EAA1B;AAEA,aAAOD,OAAO,IAAI,EAAlB;AACD,KAlB+B;AAAA;AAAA;;AAmBhC,SAAOV,KAAP;AACD,CApByB,CAA1B","sourcesContent":["'use strict'\n\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pubsub').API<HTTPClientExtraOptions>} PubsubAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {PubsubAPI[\"peers\"]}\n   */\n  async function peers (topic, options = {}) {\n    const res = await api.post('pubsub/peers', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: topic,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    const { Strings } = await res.json()\n\n    return Strings || []\n  }\n  return peers\n})\n"]},"metadata":{},"sourceType":"script"}