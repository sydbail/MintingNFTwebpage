{"ast":null,"code":"'use strict';\n\nconst Bitswap = require('./bitswap');\n/**\n * @typedef {import('./types').IPFSBitswap} IPFSBitswap\n * @typedef {import('peer-id')} PeerId\n * @typedef {import('./types/message')} BitswapMessage\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n * @typedef {import('interface-blockstore').Pair} Pair\n * @typedef {import('interface-blockstore').Options} Options\n * @typedef {import('multiformats/hashes/interface').MultihashHasher} MultihashHasher\n */\n\n/**\n * @param {import('libp2p')} libp2p\n * @param {Blockstore} blockstore\n * @param {Object} [options]\n * @param {boolean} [options.statsEnabled=false]\n * @param {number} [options.statsComputeThrottleTimeout=1000]\n * @param {number} [options.statsComputeThrottleMaxQueueSize=1000]\n * @param {Record<number, MultihashHasher>} [options.hashers]\n * @returns {IPFSBitswap}\n */\n\n\nconst createBitswap = (libp2p, blockstore, options = {}) => {\n  return new Bitswap(libp2p, blockstore, options);\n};\n\nmodule.exports = {\n  createBitswap\n};","map":null,"metadata":{},"sourceType":"script"}