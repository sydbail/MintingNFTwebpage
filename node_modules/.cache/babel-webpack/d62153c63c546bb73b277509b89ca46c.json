{"ast":null,"code":"'use strict';\n\nvar _asyncToGenerator = require(\"/Users/sydneybailey/Internship/contract-testing/node_modules/@babel/runtime/helpers/asyncToGenerator\").default;\n\nconst select = require('./select');\n\nconst handle = require('./handle');\n\nconst ls = require('./ls');\n\nconst {\n  PROTOCOL_ID\n} = require('./constants');\n\nexports.PROTOCOL_ID = PROTOCOL_ID;\n\nclass MultistreamSelect {\n  constructor(stream) {\n    this._stream = stream;\n    this._shaken = false;\n  } // Perform the multistream-select handshake\n\n\n  _handshake() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this._shaken) return;\n      const {\n        stream\n      } = yield select(_this._stream, PROTOCOL_ID);\n      _this._stream = stream;\n      _this._shaken = true;\n    })();\n  }\n\n}\n\nclass Dialer extends MultistreamSelect {\n  select(protocols) {\n    return select(this._stream, protocols, this._shaken ? null : PROTOCOL_ID);\n  }\n\n  ls() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this2._handshake();\n      const {\n        stream,\n        protocols\n      } = yield ls(_this2._stream);\n      _this2._stream = stream;\n      return protocols;\n    })();\n  }\n\n}\n\nexports.Dialer = Dialer;\n\nclass Listener extends MultistreamSelect {\n  handle(protocols) {\n    return handle(this._stream, protocols);\n  }\n\n}\n\nexports.Listener = Listener;","map":null,"metadata":{},"sourceType":"script"}