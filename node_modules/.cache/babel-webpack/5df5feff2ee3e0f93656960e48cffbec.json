{"ast":null,"code":"import _asyncToGenerator from \"/Users/sydneybailey/Internship/Dapp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../ipfs.service\";\nimport * as i2 from \"@angular/common\";\n\nfunction UploadComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵtext(1, \" Upload Successful \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UploadComponent_div_8_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵelement(1, \"hr\");\n    i0.ɵɵelement(2, \"img\", 11);\n    i0.ɵɵelementStart(3, \"span\", 12);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function UploadComponent_div_8_div_3_Template_button_click_5_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const file_r4 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext(2);\n      return ctx_r6.onRemove(file_r4);\n    });\n    i0.ɵɵtext(6, \" X \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const file_r4 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", file_r4.url, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", file_r4.name, \" \");\n  }\n}\n\nfunction UploadComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵelementStart(1, \"h2\");\n    i0.ɵɵtext(2, \" Uploaded Files \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, UploadComponent_div_8_div_3_Template, 7, 2, \"div\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.FileInfos);\n  }\n}\n\nfunction UploadComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵelementStart(1, \"h1\", 15);\n    i0.ɵɵtext(2, \"Enter Minting Information:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"form\");\n    i0.ɵɵelementStart(4, \"label\", 16);\n    i0.ɵɵtext(5, \" Select Contract: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"select\", 17);\n    i0.ɵɵelementStart(7, \"option\", 18);\n    i0.ɵɵtext(8, \"NFT Tokens with no metdata\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"option\", 19);\n    i0.ɵɵtext(10, \"NFT Tokens with IPFS metadata\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"option\", 20);\n    i0.ɵɵtext(12, \"Non Transferrable NFT Tokens with no metadata\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"option\", 21);\n    i0.ɵɵtext(14, \"Non Transferrable NFT Tokens with IPFS metadata\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport class UploadComponent {\n  IPFSService;\n  selectedFiles; //files selected by user with file broswer\n\n  msg; // holds message associated with upload\n\n  FileInfos = []; // list of all files uploaded\n\n  reUploads = []; // files in selected files that are already uploaded\n\n  hash;\n  id = null;\n  version = null;\n  status = null;\n\n  constructor(IPFSService) {\n    this.IPFSService = IPFSService;\n  }\n\n  ngOnInit() {\n    this.start();\n  }\n\n  start() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const id = yield _this.IPFSService.getId();\n      _this.id = id.id;\n\n      if (_this.id == null) {\n        console.log(\"IPFS start up FAILED\");\n      }\n    })();\n  } //on click of choose files button\n\n\n  onChange(event) {\n    this.selectedFiles = event.target.files;\n  } //on click of upload button\n\n\n  onClick() {\n    this.msg = \"\";\n    this.reUploads = [];\n\n    if (this.selectedFiles && this.selectedFiles[0]) {\n      //if user has selected a file\n      const numOfFiles = this.selectedFiles.length; //gets length of selected files list\n\n      for (let i = 0; i < numOfFiles; i++) {\n        //for files selected\n        let name = this.selectedFiles[i].name;\n        let match = false;\n\n        for (var t in this.FileInfos) {\n          //check if file has already been uploaded\n          if (this.FileInfos[t].name == name) {\n            //console.log(\"new file's name: \" + name + \"MATCHED with file IN checking LOOP\" + this.FileInfos[t].name);\n            match = true;\n          }\n        }\n\n        if (match) {\n          this.reUploads.push(name); //this.msg = \"matched\";\n\n          continue; //skip to next iteration\n        }\n\n        const reader = new FileReader();\n        reader.readAsDataURL(this.selectedFiles[i]); //read file content\n\n        reader.onload = event => {\n          var image = reader.result;\n\n          if (image) {\n            let imageInfo = {\n              name: name,\n              url: image\n            };\n            this.FileInfos.push(imageInfo);\n            this.msg = \"Success\"; //sort alphabetically by name\n\n            const sorted = this.FileInfos.sort((t1, t2) => {\n              const name1 = t1.name.toLowerCase();\n              const name2 = t2.name.toLowerCase();\n\n              if (name1 > name2) {\n                return 1;\n              }\n\n              if (name1 < name2) {\n                return -1;\n              }\n\n              return 0;\n            });\n          } else {\n            //FileReader returned no url\n            console.log(\"FAIL: File could not be read\");\n            this.msg = \"Fail\";\n          }\n        }; //end onload event\n\n      } //end for\n\n    } //end if\n\n  } // end onClick()\n\n\n  onRemove(imageObj) {\n    this.msg = \"\";\n    var index = this.FileInfos.indexOf(imageObj);\n    this.FileInfos.splice(index, 1);\n  }\n\n  static ɵfac = function UploadComponent_Factory(t) {\n    return new (t || UploadComponent)(i0.ɵɵdirectiveInject(i1.IpfsService));\n  };\n  static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UploadComponent,\n    selectors: [[\"app-upload\"]],\n    decls: 10,\n    vars: 3,\n    consts: [[1, \"all\"], [1, \"upload\"], [\"type\", \"file\", \"multiple\", \"multiple\", \"accept\", \"image/*\", 1, \"form-control\", 3, \"change\"], [1, \"btn-btn-success\", 3, \"click\"], [\"class\", \"successBox\", 4, \"ngIf\"], [\"class\", \"preview\", 4, \"ngIf\"], [\"class\", \"dropdown\", 4, \"ngIf\"], [1, \"successBox\"], [1, \"preview\"], [\"class\", \"file-list\", 4, \"ngFor\", \"ngForOf\"], [1, \"file-list\"], [\"height\", \"50px\", \"width\", \"50px\", 3, \"src\"], [1, \"name\"], [1, \"remove\", 3, \"click\"], [1, \"dropdown\"], [1, \"menuTitle\"], [\"for\", \"contract\"], [\"name\", \"contract\", \"id\", \"contract\"], [\"value\", \"BasicNFT\"], [\"value\", \"IPFSNFT\"], [\"value\", \"nonTransferbasicNFT\"], [\"value\", \"noTransferIPFSNFT\"]],\n    template: function UploadComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"h1\");\n        i0.ɵɵtext(3, \" Upload Imagery\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"input\", 2);\n        i0.ɵɵlistener(\"change\", function UploadComponent_Template_input_change_4_listener($event) {\n          return ctx.onChange($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function UploadComponent_Template_button_click_5_listener() {\n          return ctx.onClick();\n        });\n        i0.ɵɵtext(6, \" Upload \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(7, UploadComponent_div_7_Template, 2, 0, \"div\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(8, UploadComponent_div_8_Template, 4, 1, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(9, UploadComponent_div_9_Template, 15, 0, \"div\", 6);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.msg === \"Success\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.FileInfos[0]);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.FileInfos[0]);\n      }\n    },\n    directives: [i2.NgIf, i2.NgForOf],\n    styles: [\".upload[_ngcontent-%COMP%] {\\n  background-color: whitesmoke;\\n  width: 450px;\\n  border: 2px solid lightgrey;\\n  border-radius: 4px;\\n  padding: 10px;\\n  position: absolute;\\n  top: 150px;\\n  left: 100px;\\n}\\nh1[_ngcontent-%COMP%] {\\n  color: black;\\n  font-family: 'Lato', sans-serif;\\n  font-size: 150%;\\n}\\n.form-control[_ngcontent-%COMP%] {\\n  width: 300px;\\n  background-color: white;\\n  border: 1px solid black;\\n  border-radius: 4px;\\n  padding: 5px\\n}\\n.btn-btn-success[_ngcontent-%COMP%] {\\n  font-size: 0.875rem;\\n  width: 75px;\\n  border: 2px solid #2196F3;\\n  color: #2196F3;\\n  background-color: whitesmoke;\\n  border-radius: 3px;\\n  padding: 5px;\\n  vertical-align: middle;\\n  position: relative;\\n  left: 3px;\\n }\\n.btn-btn-success[_ngcontent-%COMP%]:hover {\\n  background-color: #2196F3;\\n  color: white;\\n  border-color: #2196F3;\\n}\\nh2[_ngcontent-%COMP%] {\\n  color: black;\\n  font-family: 'Lato', sans-serif;\\n  font-size: 100%;\\n  width: 470px;\\n  position: relative;\\n  left: 5px;\\n}\\n.preview[_ngcontent-%COMP%] {\\n  background-color: whitesmoke;\\n  width: 450px;\\n  border: 2px solid lightgrey;\\n  border-radius: 4px;\\n  padding: 10px;\\n  position: relative;\\n  top: 225px;\\n  left: 100px;\\n}\\nhr[_ngcontent-%COMP%] {\\n  border-top: 2px solid #ddd;\\n}\\n.file-list[_ngcontent-%COMP%] {\\n  position: relative;\\n  right: 10px;\\n  width: 470px;\\n  text-align: left;\\n}\\nimg[_ngcontent-%COMP%] {\\n  border: 1px solid #ddd;\\n  border-radius: 4px;\\n  padding: 5px;\\n  margin-left: 5px;\\n}\\n.name[_ngcontent-%COMP%] {\\n  text-align: center;\\n  position: relative;\\n  top: -25px;\\n}\\n.remove[_ngcontent-%COMP%] {\\n  background-color: red;\\n  color: white;\\n  padding: 5px;\\n  border: 2px solid red;\\n  border-color: red;\\n  font-size: 0.875rem;\\n  margin-left: 10px;\\n  position: absolute;\\n  left: 400px;\\n  top: 25px;\\n}\\n.successBox[_ngcontent-%COMP%] {\\n  margin-top: 5px;\\n  padding-top: 5px;\\n  height: 20px;\\n  width: 200px;\\n  border: 2px solid green;\\n  font-size: 12px;\\n  text-align: center;\\n  vertical-align: center;\\n  color: darkgreen;\\n  background: rgba(0, 128, 0, 0.2);\\n}\\n.fail[_ngcontent-%COMP%] {\\n  color: white;\\n  width: 300px;\\n  border: 2px solid white;\\n  border-radius: 4px;\\n  padding: 5px;\\n  background-color: red;\\n  display: inline;\\n}\\n.failed[_ngcontent-%COMP%] {\\n  color: white;\\n  display: inline;\\n}\\n.dropdown[_ngcontent-%COMP%] {\\n  text-align: left;\\n  background-color: whitesmoke;\\n  \\n  width: 450px;\\n  border: 2px solid lightgrey;\\n  border-radius: 4px;\\n  padding: 10px;\\n  position: absolute;\\n  left: 800px;\\n  top: 150px;\\n}\\n.contracts[_ngcontent-%COMP%] {\\n  position: relative;\\n  left: 105px;\\n  top: -36px;\\n}\\n.btn-btn-next[_ngcontent-%COMP%] {\\n  font-size: 0.875rem;\\n  width: 75px;\\n  border: 2px solid #2196F3;\\n  color: #2196F3;\\n  background-color: whitesmoke;\\n  border-radius: 3px;\\n  padding: 5px;\\n  position: relative;\\n  left: 300px;\\n  top: -30px;\\n}\\n.ipfsinfo[_ngcontent-%COMP%] {\\n\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVwbG9hZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsNEJBQTRCO0VBQzVCLFlBQVk7RUFDWiwyQkFBMkI7RUFDM0Isa0JBQWtCO0VBQ2xCLGFBQWE7RUFDYixrQkFBa0I7RUFDbEIsVUFBVTtFQUNWLFdBQVc7QUFDYjtBQUNBO0VBQ0UsWUFBWTtFQUNaLCtCQUErQjtFQUMvQixlQUFlO0FBQ2pCO0FBQ0E7RUFDRSxZQUFZO0VBQ1osdUJBQXVCO0VBQ3ZCLHVCQUF1QjtFQUN2QixrQkFBa0I7RUFDbEI7QUFDRjtBQUNBO0VBQ0UsbUJBQW1CO0VBQ25CLFdBQVc7RUFDWCx5QkFBeUI7RUFDekIsY0FBYztFQUNkLDRCQUE0QjtFQUM1QixrQkFBa0I7RUFDbEIsWUFBWTtFQUNaLHNCQUFzQjtFQUN0QixrQkFBa0I7RUFDbEIsU0FBUztDQUNWO0FBQ0Q7RUFDRSx5QkFBeUI7RUFDekIsWUFBWTtFQUNaLHFCQUFxQjtBQUN2QjtBQUNBO0VBQ0UsWUFBWTtFQUNaLCtCQUErQjtFQUMvQixlQUFlO0VBQ2YsWUFBWTtFQUNaLGtCQUFrQjtFQUNsQixTQUFTO0FBQ1g7QUFDQTtFQUNFLDRCQUE0QjtFQUM1QixZQUFZO0VBQ1osMkJBQTJCO0VBQzNCLGtCQUFrQjtFQUNsQixhQUFhO0VBQ2Isa0JBQWtCO0VBQ2xCLFVBQVU7RUFDVixXQUFXO0FBQ2I7QUFDQTtFQUNFLDBCQUEwQjtBQUM1QjtBQUNBO0VBQ0Usa0JBQWtCO0VBQ2xCLFdBQVc7RUFDWCxZQUFZO0VBQ1osZ0JBQWdCO0FBQ2xCO0FBQ0E7RUFDRSxzQkFBc0I7RUFDdEIsa0JBQWtCO0VBQ2xCLFlBQVk7RUFDWixnQkFBZ0I7QUFDbEI7QUFDQTtFQUNFLGtCQUFrQjtFQUNsQixrQkFBa0I7RUFDbEIsVUFBVTtBQUNaO0FBQ0E7RUFDRSxxQkFBcUI7RUFDckIsWUFBWTtFQUNaLFlBQVk7RUFDWixxQkFBcUI7RUFDckIsaUJBQWlCO0VBQ2pCLG1CQUFtQjtFQUNuQixpQkFBaUI7RUFDakIsa0JBQWtCO0VBQ2xCLFdBQVc7RUFDWCxTQUFTO0FBQ1g7QUFDQTtFQUNFLGVBQWU7RUFDZixnQkFBZ0I7RUFDaEIsWUFBWTtFQUNaLFlBQVk7RUFDWix1QkFBdUI7RUFDdkIsZUFBZTtFQUNmLGtCQUFrQjtFQUNsQixzQkFBc0I7RUFDdEIsZ0JBQWdCO0VBQ2hCLGdDQUFnQztBQUNsQztBQUNBO0VBQ0UsWUFBWTtFQUNaLFlBQVk7RUFDWix1QkFBdUI7RUFDdkIsa0JBQWtCO0VBQ2xCLFlBQVk7RUFDWixxQkFBcUI7RUFDckIsZUFBZTtBQUNqQjtBQUNBO0VBQ0UsWUFBWTtFQUNaLGVBQWU7QUFDakI7QUFDQTtFQUNFLGdCQUFnQjtFQUNoQiw0QkFBNEI7RUFDNUIsa0JBQWtCO0VBQ2xCLFlBQVk7RUFDWiwyQkFBMkI7RUFDM0Isa0JBQWtCO0VBQ2xCLGFBQWE7RUFDYixrQkFBa0I7RUFDbEIsV0FBVztFQUNYLFVBQVU7QUFDWjtBQUNBO0VBQ0Usa0JBQWtCO0VBQ2xCLFdBQVc7RUFDWCxVQUFVO0FBQ1o7QUFDQTtFQUNFLG1CQUFtQjtFQUNuQixXQUFXO0VBQ1gseUJBQXlCO0VBQ3pCLGNBQWM7RUFDZCw0QkFBNEI7RUFDNUIsa0JBQWtCO0VBQ2xCLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsV0FBVztFQUNYLFVBQVU7QUFDWjtBQUNBOztBQUVBIiwiZmlsZSI6InVwbG9hZC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnVwbG9hZCB7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlc21va2U7XG4gIHdpZHRoOiA0NTBweDtcbiAgYm9yZGVyOiAycHggc29saWQgbGlnaHRncmV5O1xuICBib3JkZXItcmFkaXVzOiA0cHg7XG4gIHBhZGRpbmc6IDEwcHg7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAxNTBweDtcbiAgbGVmdDogMTAwcHg7XG59XG5oMSB7XG4gIGNvbG9yOiBibGFjaztcbiAgZm9udC1mYW1pbHk6ICdMYXRvJywgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAxNTAlO1xufVxuLmZvcm0tY29udHJvbCB7XG4gIHdpZHRoOiAzMDBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrO1xuICBib3JkZXItcmFkaXVzOiA0cHg7XG4gIHBhZGRpbmc6IDVweFxufVxuLmJ0bi1idG4tc3VjY2VzcyB7XG4gIGZvbnQtc2l6ZTogMC44NzVyZW07XG4gIHdpZHRoOiA3NXB4O1xuICBib3JkZXI6IDJweCBzb2xpZCAjMjE5NkYzO1xuICBjb2xvcjogIzIxOTZGMztcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGVzbW9rZTtcbiAgYm9yZGVyLXJhZGl1czogM3B4O1xuICBwYWRkaW5nOiA1cHg7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbGVmdDogM3B4O1xuIH1cbi5idG4tYnRuLXN1Y2Nlc3M6aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjE5NkYzO1xuICBjb2xvcjogd2hpdGU7XG4gIGJvcmRlci1jb2xvcjogIzIxOTZGMztcbn1cbmgyIHtcbiAgY29sb3I6IGJsYWNrO1xuICBmb250LWZhbWlseTogJ0xhdG8nLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDEwMCU7XG4gIHdpZHRoOiA0NzBweDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBsZWZ0OiA1cHg7XG59XG4ucHJldmlldyB7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlc21va2U7XG4gIHdpZHRoOiA0NTBweDtcbiAgYm9yZGVyOiAycHggc29saWQgbGlnaHRncmV5O1xuICBib3JkZXItcmFkaXVzOiA0cHg7XG4gIHBhZGRpbmc6IDEwcHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdG9wOiAyMjVweDtcbiAgbGVmdDogMTAwcHg7XG59XG5ociB7XG4gIGJvcmRlci10b3A6IDJweCBzb2xpZCAjZGRkO1xufVxuLmZpbGUtbGlzdCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgcmlnaHQ6IDEwcHg7XG4gIHdpZHRoOiA0NzBweDtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbn1cbmltZyB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNkZGQ7XG4gIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgcGFkZGluZzogNXB4O1xuICBtYXJnaW4tbGVmdDogNXB4O1xufVxuLm5hbWUge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdG9wOiAtMjVweDtcbn1cbi5yZW1vdmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgcGFkZGluZzogNXB4O1xuICBib3JkZXI6IDJweCBzb2xpZCByZWQ7XG4gIGJvcmRlci1jb2xvcjogcmVkO1xuICBmb250LXNpemU6IDAuODc1cmVtO1xuICBtYXJnaW4tbGVmdDogMTBweDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiA0MDBweDtcbiAgdG9wOiAyNXB4O1xufVxuLnN1Y2Nlc3NCb3gge1xuICBtYXJnaW4tdG9wOiA1cHg7XG4gIHBhZGRpbmctdG9wOiA1cHg7XG4gIGhlaWdodDogMjBweDtcbiAgd2lkdGg6IDIwMHB4O1xuICBib3JkZXI6IDJweCBzb2xpZCBncmVlbjtcbiAgZm9udC1zaXplOiAxMnB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7XG4gIGNvbG9yOiBkYXJrZ3JlZW47XG4gIGJhY2tncm91bmQ6IHJnYmEoMCwgMTI4LCAwLCAwLjIpO1xufVxuLmZhaWwge1xuICBjb2xvcjogd2hpdGU7XG4gIHdpZHRoOiAzMDBweDtcbiAgYm9yZGVyOiAycHggc29saWQgd2hpdGU7XG4gIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgcGFkZGluZzogNXB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XG4gIGRpc3BsYXk6IGlubGluZTtcbn1cbi5mYWlsZWQge1xuICBjb2xvcjogd2hpdGU7XG4gIGRpc3BsYXk6IGlubGluZTtcbn1cbi5kcm9wZG93biB7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlc21va2U7XG4gIC8qaGVpZ2h0OiAxMTVweDsgKi9cbiAgd2lkdGg6IDQ1MHB4O1xuICBib3JkZXI6IDJweCBzb2xpZCBsaWdodGdyZXk7XG4gIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgcGFkZGluZzogMTBweDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiA4MDBweDtcbiAgdG9wOiAxNTBweDtcbn1cbi5jb250cmFjdHMge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGxlZnQ6IDEwNXB4O1xuICB0b3A6IC0zNnB4O1xufVxuLmJ0bi1idG4tbmV4dCB7XG4gIGZvbnQtc2l6ZTogMC44NzVyZW07XG4gIHdpZHRoOiA3NXB4O1xuICBib3JkZXI6IDJweCBzb2xpZCAjMjE5NkYzO1xuICBjb2xvcjogIzIxOTZGMztcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGVzbW9rZTtcbiAgYm9yZGVyLXJhZGl1czogM3B4O1xuICBwYWRkaW5nOiA1cHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbGVmdDogMzAwcHg7XG4gIHRvcDogLTMwcHg7XG59XG4uaXBmc2luZm8ge1xuXG59XG4iXX0= */\"]\n  });\n}","map":{"version":3,"sources":["/Users/sydneybailey/Internship/Dapp/src/app/upload/upload.component.ts","/Users/sydneybailey/Internship/Dapp/src/app/upload/upload.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { IpfsService } from \"../ipfs.service\";\n\n@Component({\n  selector: 'app-upload',\n  templateUrl: './upload.component.html',\n  styleUrls: ['./upload.component.css']\n})\nexport class UploadComponent implements OnInit {\n  selectedFiles?: FileList;         //files selected by user with file broswer\n  msg?: string;                    // holds message associated with upload\n  FileInfos: any[] = [];          // list of all files uploaded\n  reUploads: string[] = [];      // files in selected files that are already uploaded\n  hash?: string;\n  id: string | null = null;\n  version: string | null  = null;\n  status: string | null  = null;\n\n\n  constructor(private IPFSService: IpfsService) { }\n\n  ngOnInit(): void {\n    this.start();\n  }\n\n  async start() {\n    const id = await this.IPFSService.getId();\n    this.id = id.id;\n    if(this.id == null){\n      console.log(\"IPFS start up FAILED\");\n    }\n  }\n\n  //on click of choose files button\n  onChange(event: any) {\n    this.selectedFiles = event.target.files;\n  }\n  //on click of upload button\n  onClick() {\n    this.msg = \"\";\n    this.reUploads = [];\n    if(this.selectedFiles && this.selectedFiles[0]) { //if user has selected a file\n      const numOfFiles = this.selectedFiles.length;  //gets length of selected files list\n\n      for (let i = 0; i < numOfFiles; i++) { //for files selected\n        let name = this.selectedFiles[i].name;\n\n        let match = false;\n        for (var t in this.FileInfos) {  //check if file has already been uploaded\n            if (this.FileInfos[t].name == name) {\n              //console.log(\"new file's name: \" + name + \"MATCHED with file IN checking LOOP\" + this.FileInfos[t].name);\n              match = true;\n            }\n          }\n\n      if(match){\n        this.reUploads.push(name);\n        //this.msg = \"matched\";\n        continue;  //skip to next iteration\n      }\n\n      const reader = new FileReader();\n      reader.readAsDataURL(this.selectedFiles[i]); //read file content\n      reader.onload = (event) => {                //when image is loaded\n        var image = reader.result as string;\n        if(image){\n          let imageInfo = {\n            name: name,\n            url: image\n          };\n          this.FileInfos.push(imageInfo);\n          this.msg = \"Success\";\n\n          //sort alphabetically by name\n          const sorted = this.FileInfos.sort((t1, t2) => {\n          const name1 = t1.name.toLowerCase();\n          const name2 = t2.name.toLowerCase();\n          if (name1 > name2) { return 1; }\n          if (name1 < name2) { return -1; }\n          return 0;\n        })\n      } else { //FileReader returned no url\n          console.log(\"FAIL: File could not be read\");\n          this.msg = \"Fail\";\n          }\n        }; //end onload event\n      } //end for\n    } //end if\n  } // end onClick()\n\n  onRemove(imageObj: any) {\n    this.msg = \"\";\n    var index = this.FileInfos.indexOf(imageObj);\n    this.FileInfos.splice(index,1);\n  }\n\n/*  async ipfsUpload() {\n  if(this.file) { //if user has selected a file\n\n    //upload image\n    console.log(this.file instanceof Blob);\n    this.hash = await this.IPFSService.addFile(this.file);\n    console.log(\"File Added with hash: \", this.hash);\n\n    const fileContents = await this.IPFSService.getFile(this.hash);\n    const blob = new Blob(fileContents, {type: \"image/pngs\"});\n    this.url = URL.createObjectURL(blob);\n    console.log(\"File url found using hash: \", this.url);\n    this.msg = \"File Found\";\n\n} //end if\n} */\n\n}\n","<div class=\"all\">\n<div class=\"upload\">\n\t<h1> Upload Imagery</h1>\n\t<!-- name input bar-->\n\t<!-- <input class=\"form-control\" placeholder=\"Name\" formControlName=\"name\"> -->\n\t<input class=\"form-control\" type=\"file\" multiple= \"multiple\" accept=\"image/*\"\n\t\t(change)=\"onChange($event)\">\n\t<button (click)=\"onClick()\" class=\"btn-btn-success\">\n\t\tUpload\n\t</button>\n\t<div class=\"successBox\" *ngIf=\"msg==='Success'\">\n\t\t\tUpload Successful\n\t</div>\n</div>\n\n<div class=\"preview\" *ngIf=\"FileInfos[0]\">\n\t<h2> Uploaded Files </h2>\n\t<div class=\"file-list\" *ngFor=\"let file of FileInfos; index as i\">\n\t\t<hr>\n\t\t<img [src]=\"file.url\" height=\"50px\" width=\"50px\">\n\t\t<span class=\"name\"> {{file.name}} </span>\n\t\t<button class=\"remove\" (click)=\"onRemove(file)\"> X </button>\n\t</div>\n</div>\n\n<!--\n<div class=\"fail\" *ngIf=\"reUploads[0]\">\n\tFile already uploaded:\n\t<div class=\"failed\" *ngFor=\"let file of reUploads\">\n\t\t{{file}}\n\t</div>\n</div>\n-->\n</div>\n\n<div class=\"dropdown\" *ngIf=\"FileInfos[0]\">\n\t<h1 class=\"menuTitle\">Enter Minting Information:</h1>\n\t<form>\n\t<label for=\"contract\"> Select Contract: </label>\n\t<select name=\"contract\" id=\"contract\">\n    <option value=\"BasicNFT\">NFT Tokens with no metdata</option>\n\t\t<option value=\"IPFSNFT\">NFT Tokens with IPFS metadata</option>\n\t\t<option value=\"nonTransferbasicNFT\">Non Transferrable NFT Tokens with no metadata</option>\n\t\t<option value=\"noTransferIPFSNFT\">Non Transferrable NFT Tokens with IPFS metadata</option>\n\t</select>\n\n\t</form>\n</div>\n\n<!-- <div *ngIf=\"id != null; else loading\"  class=\"ipfsinfo\">\n\t<p>\n\t\t<b>IPFS:</b><span>{{ id }}</span>\n\t</p>\n\t<p>\n\t\t<b>Version:</b><span>{{ version }}</span>\n\t</p>\n\t<p>\n\t\t<b>Status:</b><span>{{ status }}</span>\n\t</p>\n</div>\n<ng-template #loading>\n\t<p>\n\t\t<b>Loading...</b>\n\t</p>\n</ng-template>\n-->\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}