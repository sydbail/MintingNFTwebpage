{"ast":null,"code":"'use strict';\n\nvar _asyncToGenerator = require(\"/Users/sydneybailey/Internship/contract-testing/node_modules/@babel/runtime/helpers/asyncToGenerator\").default;\n\nconst configure = require('../lib/configure');\n\nconst toUrlSearchParams = require('../lib/to-url-search-params');\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/config').API<HTTPClientExtraOptions>} ConfigAPI\n */\n\n\nmodule.exports = configure(api => {\n  /**\n   * @type {ConfigAPI[\"get\"]}\n   */\n  const get = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator(function* (key, options = {}) {\n      if (!key) {\n        throw new Error('key argument is required');\n      }\n\n      const res = yield api.post('config', {\n        timeout: options.timeout,\n        signal: options.signal,\n        searchParams: toUrlSearchParams({\n          arg: key,\n          ...options\n        }),\n        headers: options.headers\n      });\n      const data = yield res.json();\n      return data.Value;\n    });\n\n    return function get(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return get;\n});","map":{"version":3,"sources":["/Users/sydneybailey/Internship/contract-testing/node_modules/ipfs-http-client/src/config/get.js"],"names":["configure","require","toUrlSearchParams","module","exports","api","get","key","options","Error","res","post","timeout","signal","searchParams","arg","headers","data","json","Value"],"mappings":"AAAA;;;;AAEA,MAAMA,SAAS,GAAGC,OAAO,CAAC,kBAAD,CAAzB;;AACA,MAAMC,iBAAiB,GAAGD,OAAO,CAAC,6BAAD,CAAjC;AAEA;AACA;AACA;AACA;;;AAEAE,MAAM,CAACC,OAAP,GAAiBJ,SAAS,CAACK,GAAG,IAAI;AAChC;AACF;AACA;AACE,QAAMC,GAAG;AAAA,iCAAG,WAAOC,GAAP,EAAYC,OAAO,GAAG,EAAtB,EAA6B;AACvC,UAAI,CAACD,GAAL,EAAU;AACR,cAAM,IAAIE,KAAJ,CAAU,0BAAV,CAAN;AACD;;AAED,YAAMC,GAAG,SAASL,GAAG,CAACM,IAAJ,CAAS,QAAT,EAAmB;AACnCC,QAAAA,OAAO,EAAEJ,OAAO,CAACI,OADkB;AAEnCC,QAAAA,MAAM,EAAEL,OAAO,CAACK,MAFmB;AAGnCC,QAAAA,YAAY,EAAEZ,iBAAiB,CAAC;AAC9Ba,UAAAA,GAAG,EAAER,GADyB;AAE9B,aAAGC;AAF2B,SAAD,CAHI;AAOnCQ,QAAAA,OAAO,EAAER,OAAO,CAACQ;AAPkB,OAAnB,CAAlB;AASA,YAAMC,IAAI,SAASP,GAAG,CAACQ,IAAJ,EAAnB;AAEA,aAAOD,IAAI,CAACE,KAAZ;AACD,KAjBQ;;AAAA,oBAAHb,GAAG;AAAA;AAAA;AAAA,KAAT;;AAmBA,SAAOA,GAAP;AACD,CAxByB,CAA1B","sourcesContent":["'use strict'\n\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/config').API<HTTPClientExtraOptions>} ConfigAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {ConfigAPI[\"get\"]}\n   */\n  const get = async (key, options = {}) => {\n    if (!key) {\n      throw new Error('key argument is required')\n    }\n\n    const res = await api.post('config', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: key,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return data.Value\n  }\n\n  return get\n})\n"]},"metadata":{},"sourceType":"script"}