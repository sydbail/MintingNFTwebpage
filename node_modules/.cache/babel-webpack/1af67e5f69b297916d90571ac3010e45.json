{"ast":null,"code":"'use strict';\n\nvar _asyncToGenerator = require(\"/Users/sydneybailey/Internship/contract-testing/node_modules/@babel/runtime/helpers/asyncToGenerator\").default;\n\nconst {\n  CID\n} = require('multiformats/cid');\n\nconst configure = require('../lib/configure');\n\nconst toUrlSearchParams = require('../lib/to-url-search-params');\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/bitswap').API<HTTPClientExtraOptions>} BitswapAPI\n */\n\n\nmodule.exports = configure(api => {\n  /**\n   * @type {BitswapAPI[\"wantlistForPeer\"]}\n   */\n  function wantlistForPeer(_x) {\n    return _wantlistForPeer.apply(this, arguments);\n  }\n\n  function _wantlistForPeer() {\n    _wantlistForPeer = _asyncToGenerator(function* (peerId, options = {}) {\n      const res = yield (yield api.post('bitswap/wantlist', {\n        timeout: options.timeout,\n        signal: options.signal,\n        searchParams: toUrlSearchParams({ ...options,\n          peer: peerId.toString()\n        }),\n        headers: options.headers\n      })).json();\n      return (res.Keys || []).map((\n      /** @type {{ '/': string }} */\n      k) => CID.parse(k['/']));\n    });\n    return _wantlistForPeer.apply(this, arguments);\n  }\n\n  return wantlistForPeer;\n});","map":null,"metadata":{},"sourceType":"script"}