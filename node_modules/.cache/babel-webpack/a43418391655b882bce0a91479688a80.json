{"ast":null,"code":"'use strict';\n\nvar _asyncToGenerator = require(\"/Users/sydneybailey/Internship/js-ipfs-examples/examples/browser-angular/node_modules/@babel/runtime/helpers/asyncToGenerator\").default;\n\nconst configure = require('./lib/configure');\n\nconst toUrlSearchParams = require('./lib/to-url-search-params');\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\n\nmodule.exports = configure(api => {\n  /**\n   * @type {RootAPI[\"dns\"]}\n   */\n  const dns = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator(function* (domain, options = {}) {\n      const res = yield api.post('dns', {\n        timeout: options.timeout,\n        signal: options.signal,\n        searchParams: toUrlSearchParams({\n          arg: domain,\n          ...options\n        }),\n        headers: options.headers\n      });\n      const data = yield res.json();\n      return data.Path;\n    });\n\n    return function dns(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return dns;\n});","map":{"version":3,"sources":["/Users/sydneybailey/Internship/js-ipfs-examples/examples/browser-angular/node_modules/ipfs-http-client/src/dns.js"],"names":["configure","require","toUrlSearchParams","module","exports","api","dns","domain","options","res","post","timeout","signal","searchParams","arg","headers","data","json","Path"],"mappings":"AAAA;;;;AAEA,MAAMA,SAAS,GAAGC,OAAO,CAAC,iBAAD,CAAzB;;AACA,MAAMC,iBAAiB,GAAGD,OAAO,CAAC,4BAAD,CAAjC;AAEA;AACA;AACA;AACA;;;AAEAE,MAAM,CAACC,OAAP,GAAiBJ,SAAS,CAACK,GAAG,IAAI;AAChC;AACF;AACA;AACE,QAAMC,GAAG;AAAA,iCAAG,WAAOC,MAAP,EAAeC,OAAO,GAAG,EAAzB,EAAgC;AAC1C,YAAMC,GAAG,SAASJ,GAAG,CAACK,IAAJ,CAAS,KAAT,EAAgB;AAChCC,QAAAA,OAAO,EAAEH,OAAO,CAACG,OADe;AAEhCC,QAAAA,MAAM,EAAEJ,OAAO,CAACI,MAFgB;AAGhCC,QAAAA,YAAY,EAAEX,iBAAiB,CAAC;AAC9BY,UAAAA,GAAG,EAAEP,MADyB;AAE9B,aAAGC;AAF2B,SAAD,CAHC;AAOhCO,QAAAA,OAAO,EAAEP,OAAO,CAACO;AAPe,OAAhB,CAAlB;AASA,YAAMC,IAAI,SAASP,GAAG,CAACQ,IAAJ,EAAnB;AAEA,aAAOD,IAAI,CAACE,IAAZ;AACD,KAbQ;;AAAA,oBAAHZ,GAAG;AAAA;AAAA;AAAA,KAAT;;AAeA,SAAOA,GAAP;AACD,CApByB,CAA1B","sourcesContent":["'use strict'\n\nconst configure = require('./lib/configure')\nconst toUrlSearchParams = require('./lib/to-url-search-params')\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {RootAPI[\"dns\"]}\n   */\n  const dns = async (domain, options = {}) => {\n    const res = await api.post('dns', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: domain,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return data.Path\n  }\n\n  return dns\n})\n"]},"metadata":{},"sourceType":"script"}