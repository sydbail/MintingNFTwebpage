{"ast":null,"code":"import _asyncToGenerator from \"/Users/sydneybailey/Internship/contract-testing/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _awaitAsyncGenerator from \"/Users/sydneybailey/Internship/contract-testing/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator\";\nimport _wrapAsyncGenerator from \"/Users/sydneybailey/Internship/contract-testing/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator\";\nimport errCode from 'err-code';\nimport extractDataFromBlock from '../utils/extract-data-from-block.js';\nimport validateOffsetAndLength from '../utils/validate-offset-and-length.js';\n\nconst rawContent = node => {\n  function contentGenerator() {\n    return _contentGenerator.apply(this, arguments);\n  }\n\n  function _contentGenerator() {\n    _contentGenerator = _wrapAsyncGenerator(function* (options = {}) {\n      const {\n        offset,\n        length\n      } = validateOffsetAndLength(node.length, options.offset, options.length);\n      yield extractDataFromBlock(node, 0, offset, offset + length);\n    });\n    return _contentGenerator.apply(this, arguments);\n  }\n\n  return contentGenerator;\n};\n\nconst resolve = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (cid, name, path, toResolve, _resolve, depth, blockstore, options) {\n    if (toResolve.length) {\n      throw errCode(new Error(`No link named ${path} found in raw node ${cid}`), 'ERR_NOT_FOUND');\n    }\n\n    const block = yield blockstore.get(cid, options);\n    return {\n      entry: {\n        type: 'raw',\n        name,\n        path,\n        cid,\n        content: rawContent(block),\n        depth,\n        size: block.length,\n        node: block\n      }\n    };\n  });\n\n  return function resolve(_x, _x2, _x3, _x4, _x5, _x6, _x7, _x8) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default resolve;","map":null,"metadata":{},"sourceType":"module"}