{"ast":null,"code":"'use strict';\n\nvar _asyncToGenerator = require(\"/Users/sydneybailey/Internship/Demo/node_modules/@babel/runtime/helpers/asyncToGenerator\").default;\n\nconst Key = require('interface-datastore').Key;\n\nconst sortKeys = require('sort-keys');\n\nconst {\n  toString: uint8ArrayToString\n} = require('uint8arrays/to-string');\n\nconst {\n  fromString: uint8ArrayFromString\n} = require('uint8arrays/from-string');\n\nconst specKey = new Key('datastore_spec');\n/**\n *\n * @param {import('interface-datastore').Datastore} store\n */\n\nmodule.exports = store => {\n  return {\n    /**\n     * Check if a datastore spec file exists.\n     *\n     */\n    exists() {\n      return store.has(specKey);\n    },\n\n    /**\n     * Get the current datastore spec.\n     *\n     * @returns {Promise<Uint8Array>}\n     */\n    get() {\n      return _asyncToGenerator(function* () {\n        const buf = yield store.get(specKey);\n        return JSON.parse(uint8ArrayToString(buf));\n      })();\n    },\n\n    /**\n     * Set the datastore spec of the repo, writing it to the underlying store.\n     * TODO unclear on what the type should be or if it's required\n     *\n     * @param {any} spec\n     * @returns {Promise<void>}\n     */\n    set(spec) {\n      return _asyncToGenerator(function* () {\n        return store.put(specKey, uint8ArrayFromString(JSON.stringify(sortKeys(spec, {\n          deep: true\n        }))));\n      })();\n    }\n\n  };\n};","map":{"version":3,"sources":["/Users/sydneybailey/Internship/Demo/node_modules/ipfs-repo/src/spec.js"],"names":["Key","require","sortKeys","toString","uint8ArrayToString","fromString","uint8ArrayFromString","specKey","module","exports","store","exists","has","get","buf","JSON","parse","set","spec","put","stringify","deep"],"mappings":"AAAA;;;;AAEA,MAAMA,GAAG,GAAGC,OAAO,CAAC,qBAAD,CAAP,CAA+BD,GAA3C;;AACA,MAAME,QAAQ,GAAGD,OAAO,CAAC,WAAD,CAAxB;;AACA,MAAM;AAAEE,EAAAA,QAAQ,EAAEC;AAAZ,IAAmCH,OAAO,CAAC,uBAAD,CAAhD;;AACA,MAAM;AAAEI,EAAAA,UAAU,EAAEC;AAAd,IAAuCL,OAAO,CAAC,yBAAD,CAApD;;AAEA,MAAMM,OAAO,GAAG,IAAIP,GAAJ,CAAQ,gBAAR,CAAhB;AAEA;AACA;AACA;AACA;;AACAQ,MAAM,CAACC,OAAP,GAAkBC,KAAD,IAAW;AAC1B,SAAO;AACL;AACJ;AACA;AACA;AACIC,IAAAA,MAAM,GAAI;AACR,aAAOD,KAAK,CAACE,GAAN,CAAUL,OAAV,CAAP;AACD,KAPI;;AAQL;AACJ;AACA;AACA;AACA;AACUM,IAAAA,GAAN,GAAa;AAAA;AACX,cAAMC,GAAG,SAASJ,KAAK,CAACG,GAAN,CAAUN,OAAV,CAAlB;AACA,eAAOQ,IAAI,CAACC,KAAL,CAAWZ,kBAAkB,CAACU,GAAD,CAA7B,CAAP;AAFW;AAGZ,KAhBI;;AAiBL;AACJ;AACA;AACA;AACA;AACA;AACA;AACUG,IAAAA,GAAN,CAAWC,IAAX,EAAiB;AAAA;AACf,eAAOR,KAAK,CAACS,GAAN,CAAUZ,OAAV,EAAmBD,oBAAoB,CAACS,IAAI,CAACK,SAAL,CAAelB,QAAQ,CAACgB,IAAD,EAAO;AAAEG,UAAAA,IAAI,EAAE;AAAR,SAAP,CAAvB,CAAD,CAAvC,CAAP;AADe;AAEhB;;AA1BI,GAAP;AA4BD,CA7BD","sourcesContent":["'use strict'\n\nconst Key = require('interface-datastore').Key\nconst sortKeys = require('sort-keys')\nconst { toString: uint8ArrayToString } = require('uint8arrays/to-string')\nconst { fromString: uint8ArrayFromString } = require('uint8arrays/from-string')\n\nconst specKey = new Key('datastore_spec')\n\n/**\n *\n * @param {import('interface-datastore').Datastore} store\n */\nmodule.exports = (store) => {\n  return {\n    /**\n     * Check if a datastore spec file exists.\n     *\n     */\n    exists () {\n      return store.has(specKey)\n    },\n    /**\n     * Get the current datastore spec.\n     *\n     * @returns {Promise<Uint8Array>}\n     */\n    async get () {\n      const buf = await store.get(specKey)\n      return JSON.parse(uint8ArrayToString(buf))\n    },\n    /**\n     * Set the datastore spec of the repo, writing it to the underlying store.\n     * TODO unclear on what the type should be or if it's required\n     *\n     * @param {any} spec\n     * @returns {Promise<void>}\n     */\n    async set (spec) {\n      return store.put(specKey, uint8ArrayFromString(JSON.stringify(sortKeys(spec, { deep: true }))))\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"script"}