{"ast":null,"code":"'use strict';\n\nvar _asyncToGenerator = require(\"/Users/sydneybailey/Internship/contract-testing/node_modules/@babel/runtime/helpers/asyncToGenerator\").default;\n\nconst Service = require('../utils/service');\n/**\n * @param {Object} config\n * @param {import('../types').NetworkService} config.network\n * @param {import('../types').Preload} config.preload\n * @param {import('./ipns')} config.ipns\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('../types').MfsPreload} config.mfsPreload\n */\n\n\nmodule.exports = ({\n  network,\n  preload,\n  ipns,\n  repo,\n  mfsPreload\n}) => {\n  /**\n   * @type {import('ipfs-core-types/src/root').API[\"stop\"]}\n   */\n  const stop = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator(function* () {\n      yield Promise.all([preload.stop(), ipns.stop(), mfsPreload.stop(), Service.stop(network), repo.close()]);\n    });\n\n    return function stop() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return stop;\n};","map":null,"metadata":{},"sourceType":"script"}