{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RunnerIterator = void 0;\n\nconst RunExecution_1 = require(\"./reporter/RunExecution\");\n\nclass RunnerIterator {\n  constructor(sourceValues, verbose, interruptedAsFailure) {\n    this.sourceValues = sourceValues;\n    this.runExecution = new RunExecution_1.RunExecution(verbose, interruptedAsFailure);\n    this.currentIdx = -1;\n    this.nextValues = sourceValues;\n  }\n\n  [Symbol.iterator]() {\n    return this;\n  }\n\n  next() {\n    const nextValue = this.nextValues.next();\n\n    if (nextValue.done || this.runExecution.interrupted) {\n      return {\n        done: true,\n        value: undefined\n      };\n    }\n\n    this.currentShrinkable = nextValue.value;\n    ++this.currentIdx;\n    return {\n      done: false,\n      value: nextValue.value.value_\n    };\n  }\n\n  handleResult(result) {\n    if (result != null && typeof result === 'string') {\n      this.runExecution.fail(this.currentShrinkable.value_, this.currentIdx, result);\n      this.currentIdx = -1;\n      this.nextValues = this.currentShrinkable.shrink();\n    } else if (result != null) {\n      if (!result.interruptExecution) {\n        this.runExecution.skip(this.currentShrinkable.value_);\n        this.sourceValues.skippedOne();\n      } else {\n        this.runExecution.interrupt();\n      }\n    } else {\n      this.runExecution.success(this.currentShrinkable.value_);\n    }\n  }\n\n}\n\nexports.RunnerIterator = RunnerIterator;","map":null,"metadata":{},"sourceType":"script"}