{"ast":null,"code":"'use strict';\n\nvar _asyncToGenerator = require(\"/Users/sydneybailey/Internship/contract-testing/node_modules/@babel/runtime/helpers/asyncToGenerator\").default;\n\nconst Key = require('interface-datastore').Key;\n\nconst {\n  fromString: uint8ArrayFromString\n} = require('uint8arrays/from-string');\n\nconst apiFile = new Key('api');\n/**\n *\n * @param {import('interface-datastore').Datastore} store\n */\n\nmodule.exports = store => {\n  return {\n    /**\n     * Get the current configuration from the repo.\n     *\n     * @returns {Promise<string>}\n     */\n    get() {\n      return _asyncToGenerator(function* () {\n        const value = yield store.get(apiFile);\n        return value && value.toString();\n      })();\n    },\n\n    /**\n     * Set the current configuration for this repo.\n     * TODO: fix find the proper type or remove this API\n     *\n     * @param {string} value - the api address to be written\n     */\n    set(value) {\n      return store.put(apiFile, uint8ArrayFromString(value.toString()));\n    },\n\n    /**\n     * Deletes api file\n     */\n    delete() {\n      return store.delete(apiFile);\n    }\n\n  };\n};","map":{"version":3,"sources":["/Users/sydneybailey/Internship/contract-testing/node_modules/ipfs-repo/src/api-addr.js"],"names":["Key","require","fromString","uint8ArrayFromString","apiFile","module","exports","store","get","value","toString","set","put","delete"],"mappings":"AAAA;;;;AAEA,MAAMA,GAAG,GAAGC,OAAO,CAAC,qBAAD,CAAP,CAA+BD,GAA3C;;AACA,MAAM;AAAEE,EAAAA,UAAU,EAAEC;AAAd,IAAuCF,OAAO,CAAC,yBAAD,CAApD;;AAEA,MAAMG,OAAO,GAAG,IAAIJ,GAAJ,CAAQ,KAAR,CAAhB;AAEA;AACA;AACA;AACA;;AACAK,MAAM,CAACC,OAAP,GAAkBC,KAAD,IAAW;AAC1B,SAAO;AACL;AACJ;AACA;AACA;AACA;AACUC,IAAAA,GAAN,GAAa;AAAA;AACX,cAAMC,KAAK,SAASF,KAAK,CAACC,GAAN,CAAUJ,OAAV,CAApB;AACA,eAAOK,KAAK,IAAIA,KAAK,CAACC,QAAN,EAAhB;AAFW;AAGZ,KATI;;AAUL;AACJ;AACA;AACA;AACA;AACA;AACIC,IAAAA,GAAG,CAAEF,KAAF,EAAS;AACV,aAAOF,KAAK,CAACK,GAAN,CAAUR,OAAV,EAAmBD,oBAAoB,CAACM,KAAK,CAACC,QAAN,EAAD,CAAvC,CAAP;AACD,KAlBI;;AAmBL;AACJ;AACA;AACIG,IAAAA,MAAM,GAAI;AACR,aAAON,KAAK,CAACM,MAAN,CAAaT,OAAb,CAAP;AACD;;AAxBI,GAAP;AA0BD,CA3BD","sourcesContent":["'use strict'\n\nconst Key = require('interface-datastore').Key\nconst { fromString: uint8ArrayFromString } = require('uint8arrays/from-string')\n\nconst apiFile = new Key('api')\n\n/**\n *\n * @param {import('interface-datastore').Datastore} store\n */\nmodule.exports = (store) => {\n  return {\n    /**\n     * Get the current configuration from the repo.\n     *\n     * @returns {Promise<string>}\n     */\n    async get () {\n      const value = await store.get(apiFile)\n      return value && value.toString()\n    },\n    /**\n     * Set the current configuration for this repo.\n     * TODO: fix find the proper type or remove this API\n     *\n     * @param {string} value - the api address to be written\n     */\n    set (value) {\n      return store.put(apiFile, uint8ArrayFromString(value.toString()))\n    },\n    /**\n     * Deletes api file\n     */\n    delete () {\n      return store.delete(apiFile)\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"script"}