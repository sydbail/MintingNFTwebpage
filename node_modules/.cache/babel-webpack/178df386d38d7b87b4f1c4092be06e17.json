{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.set = void 0;\n\nconst ArrayArbitrary_1 = require(\"./_internals/ArrayArbitrary\");\n\nconst Converters_1 = require(\"../check/arbitrary/definition/Converters\");\n\nconst MaxLengthFromMinLength_1 = require(\"./_internals/helpers/MaxLengthFromMinLength\");\n\nfunction buildCompleteSetConstraints(constraints) {\n  const minLength = constraints.minLength !== undefined ? constraints.minLength : 0;\n  const maxLength = constraints.maxLength !== undefined ? constraints.maxLength : MaxLengthFromMinLength_1.maxLengthFromMinLength(minLength);\n  const compare = constraints.compare !== undefined ? constraints.compare : (a, b) => a === b;\n  return {\n    minLength,\n    maxLength,\n    compare\n  };\n}\n\nfunction extractSetConstraints(args) {\n  if (args[0] === undefined) {\n    return {};\n  }\n\n  if (args[1] === undefined) {\n    const sargs = args;\n    if (typeof sargs[0] === 'number') return {\n      maxLength: sargs[0]\n    };\n    if (typeof sargs[0] === 'function') return {\n      compare: sargs[0]\n    };\n    return sargs[0];\n  }\n\n  if (args[2] === undefined) {\n    const sargs = args;\n    if (typeof sargs[1] === 'number') return {\n      minLength: sargs[0],\n      maxLength: sargs[1]\n    };\n    return {\n      maxLength: sargs[0],\n      compare: sargs[1]\n    };\n  }\n\n  const sargs = args;\n  return {\n    minLength: sargs[0],\n    maxLength: sargs[1],\n    compare: sargs[2]\n  };\n}\n\nfunction set(arb, ...args) {\n  const constraints = buildCompleteSetConstraints(extractSetConstraints(args));\n  const minLength = constraints.minLength;\n  const maxLength = constraints.maxLength;\n  const compare = constraints.compare;\n  const nextArb = Converters_1.convertToNext(arb);\n  const arrayArb = Converters_1.convertFromNext(new ArrayArbitrary_1.ArrayArbitrary(nextArb, minLength, maxLength, compare));\n  if (minLength === 0) return arrayArb;\n  return arrayArb.filter(tab => tab.length >= minLength);\n}\n\nexports.set = set;","map":null,"metadata":{},"sourceType":"script"}