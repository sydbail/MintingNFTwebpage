{"ast":null,"code":"'use strict';\n\nvar _asyncToGenerator = require(\"/Users/sydneybailey/Internship/contract-testing/node_modules/@babel/runtime/helpers/asyncToGenerator\").default;\n\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option');\n/**\n * @param {Object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('../../../types').Preload} config.preload\n */\n\n\nmodule.exports = ({\n  repo,\n  preload\n}) => {\n  const get = require('../get')({\n    repo,\n    preload\n  });\n\n  const put = require('../put')({\n    repo,\n    preload\n  });\n  /**\n   * @type {import('ipfs-core-types/src/object/patch').API[\"setData\"]}\n   */\n\n\n  function setData(_x, _x2) {\n    return _setData.apply(this, arguments);\n  }\n\n  function _setData() {\n    _setData = _asyncToGenerator(function* (cid, data, options = {}) {\n      const node = yield get(cid, options);\n      return put({ ...node,\n        Data: data\n      }, options);\n    });\n    return _setData.apply(this, arguments);\n  }\n\n  return withTimeoutOption(setData);\n};","map":{"version":3,"sources":["/Users/sydneybailey/Internship/contract-testing/node_modules/ipfs-core/src/components/object/patch/set-data.js"],"names":["withTimeoutOption","require","module","exports","repo","preload","get","put","setData","cid","data","options","node","Data"],"mappings":"AAAA;;;;AAEA,MAAMA,iBAAiB,GAAGC,OAAO,CAAC,yCAAD,CAAjC;AAEA;AACA;AACA;AACA;AACA;;;AACAC,MAAM,CAACC,OAAP,GAAiB,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAuB;AACtC,QAAMC,GAAG,GAAGL,OAAO,CAAC,QAAD,CAAP,CAAkB;AAAEG,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAlB,CAAZ;;AACA,QAAME,GAAG,GAAGN,OAAO,CAAC,QAAD,CAAP,CAAkB;AAAEG,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAlB,CAAZ;AAEA;AACF;AACA;;;AANwC,WAOvBG,OAPuB;AAAA;AAAA;;AAAA;AAAA,iCAOtC,WAAwBC,GAAxB,EAA6BC,IAA7B,EAAmCC,OAAO,GAAG,EAA7C,EAAiD;AAC/C,YAAMC,IAAI,SAASN,GAAG,CAACG,GAAD,EAAME,OAAN,CAAtB;AAEA,aAAOJ,GAAG,CAAC,EACT,GAAGK,IADM;AAETC,QAAAA,IAAI,EAAEH;AAFG,OAAD,EAGPC,OAHO,CAAV;AAID,KAdqC;AAAA;AAAA;;AAgBtC,SAAOX,iBAAiB,CAACQ,OAAD,CAAxB;AACD,CAjBD","sourcesContent":["'use strict'\n\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option')\n\n/**\n * @param {Object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('../../../types').Preload} config.preload\n */\nmodule.exports = ({ repo, preload }) => {\n  const get = require('../get')({ repo, preload })\n  const put = require('../put')({ repo, preload })\n\n  /**\n   * @type {import('ipfs-core-types/src/object/patch').API[\"setData\"]}\n   */\n  async function setData (cid, data, options = {}) {\n    const node = await get(cid, options)\n\n    return put({\n      ...node,\n      Data: data\n    }, options)\n  }\n\n  return withTimeoutOption(setData)\n}\n"]},"metadata":{},"sourceType":"script"}