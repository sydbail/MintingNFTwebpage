{"ast":null,"code":"'use strict';\n\nvar _asyncToGenerator = require(\"/Users/sydneybailey/Internship/contract-testing/node_modules/@babel/runtime/helpers/asyncToGenerator\").default;\n\nconst webcrypto = require('../webcrypto');\n\nconst lengths = require('./lengths');\n\nconst hashTypes = {\n  SHA1: 'SHA-1',\n  SHA256: 'SHA-256',\n  SHA512: 'SHA-512'\n};\n\nconst sign = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (key, data) {\n    const buf = yield webcrypto.get().subtle.sign({\n      name: 'HMAC'\n    }, key, data);\n    return new Uint8Array(buf, buf.byteOffset, buf.byteLength);\n  });\n\n  return function sign(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexports.create = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator(function* (hashType, secret) {\n    const hash = hashTypes[hashType];\n    const key = yield webcrypto.get().subtle.importKey('raw', secret, {\n      name: 'HMAC',\n      hash: {\n        name: hash\n      }\n    }, false, ['sign']);\n    return {\n      digest(data) {\n        return _asyncToGenerator(function* () {\n          // eslint-disable-line require-await\n          return sign(key, data);\n        })();\n      },\n\n      length: lengths[hashType]\n    };\n  });\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();","map":null,"metadata":{},"sourceType":"script"}