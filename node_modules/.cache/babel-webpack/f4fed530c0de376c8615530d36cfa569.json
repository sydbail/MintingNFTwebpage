{"ast":null,"code":"'use strict';\n\nvar _wrapAsyncGenerator = require(\"/Users/sydneybailey/Internship/contract-testing/node_modules/@babel/runtime/helpers/wrapAsyncGenerator\").default;\n\nvar _awaitAsyncGenerator = require(\"/Users/sydneybailey/Internship/contract-testing/node_modules/@babel/runtime/helpers/awaitAsyncGenerator\").default;\n\nvar _asyncIterator = require(\"/Users/sydneybailey/Internship/contract-testing/node_modules/@babel/runtime/helpers/asyncIterator\").default;\n\nvar _asyncGeneratorDelegate = require(\"/Users/sydneybailey/Internship/contract-testing/node_modules/@babel/runtime/helpers/asyncGeneratorDelegate\").default;\n\nconst {\n  CID\n} = require('multiformats/cid');\n\nconst configure = require('./lib/configure');\n\nconst toUrlSearchParams = require('./lib/to-url-search-params');\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\n\nmodule.exports = configure(api => {\n  /**\n   * @type {RootAPI[\"get\"]}\n   */\n  function get(_x) {\n    return _get.apply(this, arguments);\n  }\n\n  function _get() {\n    _get = _wrapAsyncGenerator(function* (path, options = {}) {\n      /** @type {Record<string, any>} */\n      const opts = {\n        arg: `${path instanceof Uint8Array ? CID.decode(path) : path}`,\n        ...options\n      };\n\n      if (opts.compressionLevel) {\n        opts['compression-level'] = opts.compressionLevel;\n        delete opts.compressionLevel;\n      }\n\n      const res = yield _awaitAsyncGenerator(api.post('get', {\n        timeout: options.timeout,\n        signal: options.signal,\n        searchParams: toUrlSearchParams(opts),\n        headers: options.headers\n      }));\n      yield* _asyncGeneratorDelegate(_asyncIterator(res.iterator()), _awaitAsyncGenerator);\n    });\n    return _get.apply(this, arguments);\n  }\n\n  return get;\n});","map":null,"metadata":{},"sourceType":"script"}