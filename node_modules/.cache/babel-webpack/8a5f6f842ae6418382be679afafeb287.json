{"ast":null,"code":"'use strict';\n\nvar _asyncToGenerator = require(\"/Users/sydneybailey/Internship/contract-testing/node_modules/@babel/runtime/helpers/asyncToGenerator\").default;\n\nconst {\n  getPubsubRouting\n} = require('./utils');\n\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option');\n/**\n * @param {Object} config\n * @param {import('../../ipns')} config.ipns\n * @param {import('../../../types').Options} config.options\n */\n\n\nmodule.exports = ({\n  ipns,\n  options\n}) => {\n  const experimental = options.EXPERIMENTAL;\n  /**\n   * @type {import('ipfs-core-types/src/name/pubsub').API[\"state\"]}\n   */\n\n  function state() {\n    return _state.apply(this, arguments);\n  }\n\n  function _state() {\n    _state = _asyncToGenerator(function* (_options = {}) {\n      // eslint-disable-line require-await\n      try {\n        return {\n          enabled: Boolean(getPubsubRouting(ipns, experimental))\n        };\n      } catch (err) {\n        return {\n          enabled: false\n        };\n      }\n    });\n    return _state.apply(this, arguments);\n  }\n\n  return withTimeoutOption(state);\n};","map":{"version":3,"sources":["/Users/sydneybailey/Internship/contract-testing/node_modules/ipfs-core/src/components/name/pubsub/state.js"],"names":["getPubsubRouting","require","withTimeoutOption","module","exports","ipns","options","experimental","EXPERIMENTAL","state","_options","enabled","Boolean","err"],"mappings":"AAAA;;;;AAEA,MAAM;AAAEA,EAAAA;AAAF,IAAuBC,OAAO,CAAC,SAAD,CAApC;;AACA,MAAMC,iBAAiB,GAAGD,OAAO,CAAC,yCAAD,CAAjC;AAEA;AACA;AACA;AACA;AACA;;;AACAE,MAAM,CAACC,OAAP,GAAiB,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAuB;AACtC,QAAMC,YAAY,GAAGD,OAAO,CAACE,YAA7B;AAEA;AACF;AACA;;AALwC,WAMvBC,KANuB;AAAA;AAAA;;AAAA;AAAA,+BAMtC,WAAsBC,QAAQ,GAAG,EAAjC,EAAqC;AAAE;AACrC,UAAI;AACF,eAAO;AAAEC,UAAAA,OAAO,EAAEC,OAAO,CAACZ,gBAAgB,CAACK,IAAD,EAAOE,YAAP,CAAjB;AAAlB,SAAP;AACD,OAFD,CAEE,OAAOM,GAAP,EAAY;AACZ,eAAO;AAAEF,UAAAA,OAAO,EAAE;AAAX,SAAP;AACD;AACF,KAZqC;AAAA;AAAA;;AActC,SAAOT,iBAAiB,CAACO,KAAD,CAAxB;AACD,CAfD","sourcesContent":["'use strict'\n\nconst { getPubsubRouting } = require('./utils')\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option')\n\n/**\n * @param {Object} config\n * @param {import('../../ipns')} config.ipns\n * @param {import('../../../types').Options} config.options\n */\nmodule.exports = ({ ipns, options }) => {\n  const experimental = options.EXPERIMENTAL\n\n  /**\n   * @type {import('ipfs-core-types/src/name/pubsub').API[\"state\"]}\n   */\n  async function state (_options = {}) { // eslint-disable-line require-await\n    try {\n      return { enabled: Boolean(getPubsubRouting(ipns, experimental)) }\n    } catch (err) {\n      return { enabled: false }\n    }\n  }\n\n  return withTimeoutOption(state)\n}\n"]},"metadata":{},"sourceType":"script"}