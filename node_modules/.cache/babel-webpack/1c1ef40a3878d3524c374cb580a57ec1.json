{"ast":null,"code":"'use strict';\n\nconst modeToString = require('./mode-to-string');\n\nconst parseMtime = require('../lib/parse-mtime');\n/**\n * @param {*} params\n * @returns {URLSearchParams}\n */\n\n\nmodule.exports = ({\n  arg,\n  searchParams,\n  hashAlg,\n  mtime,\n  mode,\n  ...options\n} = {}) => {\n  if (searchParams) {\n    options = { ...options,\n      ...searchParams\n    };\n  }\n\n  if (hashAlg) {\n    options.hash = hashAlg;\n  }\n\n  if (mtime != null) {\n    mtime = parseMtime(mtime);\n    options.mtime = mtime.secs;\n    options.mtimeNsecs = mtime.nsecs;\n  }\n\n  if (mode != null) {\n    options.mode = modeToString(mode);\n  }\n\n  if (options.timeout && !isNaN(options.timeout)) {\n    // server API expects timeouts as strings\n    options.timeout = `${options.timeout}ms`;\n  }\n\n  if (arg === undefined || arg === null) {\n    arg = [];\n  } else if (!Array.isArray(arg)) {\n    arg = [arg];\n  }\n\n  const urlSearchParams = new URLSearchParams(options);\n  arg.forEach((\n  /** @type {any} */\n  arg) => urlSearchParams.append('arg', arg));\n  return urlSearchParams;\n};","map":null,"metadata":{},"sourceType":"script"}