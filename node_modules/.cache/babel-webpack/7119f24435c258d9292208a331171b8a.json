{"ast":null,"code":"var _awaitAsyncGenerator = require(\"/Users/sydneybailey/Internship/Demo/node_modules/@babel/runtime/helpers/awaitAsyncGenerator\").default;\n\nvar _wrapAsyncGenerator = require(\"/Users/sydneybailey/Internship/Demo/node_modules/@babel/runtime/helpers/wrapAsyncGenerator\").default;\n\nmodule.exports = readable => {\n  // Node.js stream\n  if (readable[Symbol.asyncIterator]) return readable; // Browser ReadableStream\n\n  if (readable.getReader) {\n    return _wrapAsyncGenerator(function* () {\n      const reader = readable.getReader();\n\n      try {\n        while (true) {\n          const {\n            done,\n            value\n          } = yield _awaitAsyncGenerator(reader.read());\n          if (done) return;\n          yield value;\n        }\n      } finally {\n        reader.releaseLock();\n      }\n    })();\n  }\n\n  throw new Error('unknown stream');\n};","map":{"version":3,"sources":["/Users/sydneybailey/Internship/Demo/node_modules/stream-to-it/source.js"],"names":["module","exports","readable","Symbol","asyncIterator","getReader","reader","done","value","read","releaseLock","Error"],"mappings":";;;;AAAAA,MAAM,CAACC,OAAP,GAAiBC,QAAQ,IAAI;AAC3B;AACA,MAAIA,QAAQ,CAACC,MAAM,CAACC,aAAR,CAAZ,EAAoC,OAAOF,QAAP,CAFT,CAI3B;;AACA,MAAIA,QAAQ,CAACG,SAAb,EAAwB;AACtB,WAAO,oBAAC,aAAoB;AAC1B,YAAMC,MAAM,GAAGJ,QAAQ,CAACG,SAAT,EAAf;;AAEA,UAAI;AACF,eAAO,IAAP,EAAa;AACX,gBAAM;AAAEE,YAAAA,IAAF;AAAQC,YAAAA;AAAR,yCAAwBF,MAAM,CAACG,IAAP,EAAxB,CAAN;AACA,cAAIF,IAAJ,EAAU;AACV,gBAAMC,KAAN;AACD;AACF,OAND,SAMU;AACRF,QAAAA,MAAM,CAACI,WAAP;AACD;AACF,KAZM,GAAP;AAaD;;AAED,QAAM,IAAIC,KAAJ,CAAU,gBAAV,CAAN;AACD,CAtBD","sourcesContent":["module.exports = readable => {\n  // Node.js stream\n  if (readable[Symbol.asyncIterator]) return readable\n\n  // Browser ReadableStream\n  if (readable.getReader) {\n    return (async function * () {\n      const reader = readable.getReader()\n\n      try {\n        while (true) {\n          const { done, value } = await reader.read()\n          if (done) return\n          yield value\n        }\n      } finally {\n        reader.releaseLock()\n      }\n    })()\n  }\n\n  throw new Error('unknown stream')\n}\n"]},"metadata":{},"sourceType":"script"}