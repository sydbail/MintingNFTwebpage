{"ast":null,"code":"'use strict';\n\nvar _asyncToGenerator = require(\"/Users/sydneybailey/Internship/contract-testing/node_modules/@babel/runtime/helpers/asyncToGenerator\").default;\n\nconst {\n  CID\n} = require('multiformats/cid');\n\nconst dagPb = require('@ipld/dag-pb');\n\nconst {\n  sha256\n} = require('multiformats/hashes/sha2');\n/**\n * @typedef {object} PersistOptions\n * @property {import('multiformats/codecs/interface').BlockCodec<any, any>} [codec]\n * @property {import('multiformats/hashes/interface').MultihashHasher} [hasher]\n * @property {import('multiformats/cid').CIDVersion} [cidVersion]\n * @property {boolean} [onlyHash]\n * @property {AbortSignal} [signal]\n */\n\n/**\n * @param {Uint8Array} buffer\n * @param {import('interface-blockstore').Blockstore} blockstore\n * @param {PersistOptions} options\n */\n\n\nconst persist = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (buffer, blockstore, options) {\n    if (!options.codec) {\n      options.codec = dagPb;\n    }\n\n    if (!options.hasher) {\n      options.hasher = sha256;\n    }\n\n    if (options.cidVersion === undefined) {\n      options.cidVersion = 1;\n    }\n\n    if (options.codec === dagPb && options.hasher !== sha256) {\n      options.cidVersion = 1;\n    }\n\n    const multihash = yield options.hasher.digest(buffer);\n    const cid = CID.create(options.cidVersion, options.codec.code, multihash);\n\n    if (!options.onlyHash) {\n      yield blockstore.put(cid, buffer, {\n        signal: options.signal\n      });\n    }\n\n    return cid;\n  });\n\n  return function persist(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nmodule.exports = persist;","map":null,"metadata":{},"sourceType":"script"}