{"ast":null,"code":"'use strict';\n\nvar _wrapAsyncGenerator = require(\"/Users/sydneybailey/Internship/contract-testing/node_modules/@babel/runtime/helpers/wrapAsyncGenerator\").default;\n\nvar _awaitAsyncGenerator = require(\"/Users/sydneybailey/Internship/contract-testing/node_modules/@babel/runtime/helpers/awaitAsyncGenerator\").default;\n\nvar _asyncIterator = require(\"/Users/sydneybailey/Internship/contract-testing/node_modules/@babel/runtime/helpers/asyncIterator\").default;\n\nvar _asyncGeneratorDelegate = require(\"/Users/sydneybailey/Internship/contract-testing/node_modules/@babel/runtime/helpers/asyncGeneratorDelegate\").default;\n\nconst toCamel = require('./lib/object-to-camel');\n\nconst configure = require('./lib/configure');\n\nconst toUrlSearchParams = require('./lib/to-url-search-params');\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\n\nmodule.exports = configure(api => {\n  /**\n   * @type {RootAPI[\"ping\"]}\n   */\n  function ping(_x) {\n    return _ping.apply(this, arguments);\n  }\n\n  function _ping() {\n    _ping = _wrapAsyncGenerator(function* (peerId, options = {}) {\n      const res = yield _awaitAsyncGenerator(api.post('ping', {\n        timeout: options.timeout,\n        signal: options.signal,\n        searchParams: toUrlSearchParams({\n          arg: `${peerId}`,\n          ...options\n        }),\n        headers: options.headers,\n        transform: toCamel\n      }));\n      yield* _asyncGeneratorDelegate(_asyncIterator(res.ndjson()), _awaitAsyncGenerator);\n    });\n    return _ping.apply(this, arguments);\n  }\n\n  return ping;\n});","map":null,"metadata":{},"sourceType":"script"}