{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Property = void 0;\n\nconst PreconditionFailure_1 = require(\"../precondition/PreconditionFailure\");\n\nconst IRawProperty_1 = require(\"./IRawProperty\");\n\nconst GlobalParameters_1 = require(\"../runner/configuration/GlobalParameters\");\n\nconst ConverterFromNext_1 = require(\"../arbitrary/definition/ConverterFromNext\");\n\nclass Property {\n  constructor(arb, predicate) {\n    this.arb = arb;\n    this.predicate = predicate;\n\n    this.isAsync = () => false;\n\n    const {\n      beforeEach = Property.dummyHook,\n      afterEach = Property.dummyHook,\n      asyncBeforeEach,\n      asyncAfterEach\n    } = GlobalParameters_1.readConfigureGlobal() || {};\n\n    if (asyncBeforeEach !== undefined) {\n      throw Error('\"asyncBeforeEach\" can\\'t be set when running synchronous properties');\n    }\n\n    if (asyncAfterEach !== undefined) {\n      throw Error('\"asyncAfterEach\" can\\'t be set when running synchronous properties');\n    }\n\n    this.beforeEachHook = beforeEach;\n    this.afterEachHook = afterEach;\n  }\n\n  generate(mrng, runId) {\n    if (ConverterFromNext_1.ConverterFromNext.isConverterFromNext(this.arb)) {\n      return this.arb.toShrinkable(this.arb.arb.generate(mrng, runId != null ? IRawProperty_1.runIdToFrequency(runId) : undefined));\n    }\n\n    return runId != null ? this.arb.withBias(IRawProperty_1.runIdToFrequency(runId)).generate(mrng) : this.arb.generate(mrng);\n  }\n\n  run(v) {\n    this.beforeEachHook();\n\n    try {\n      const output = this.predicate(v);\n      return output == null || output === true ? null : 'Property failed by returning false';\n    } catch (err) {\n      if (PreconditionFailure_1.PreconditionFailure.isFailure(err)) return err;\n      if (err instanceof Error && err.stack) return `${err}\\n\\nStack trace: ${err.stack}`;\n      return `${err}`;\n    } finally {\n      this.afterEachHook();\n    }\n  }\n\n  beforeEach(hookFunction) {\n    const previousBeforeEachHook = this.beforeEachHook;\n\n    this.beforeEachHook = () => hookFunction(previousBeforeEachHook);\n\n    return this;\n  }\n\n  afterEach(hookFunction) {\n    const previousAfterEachHook = this.afterEachHook;\n\n    this.afterEachHook = () => hookFunction(previousAfterEachHook);\n\n    return this;\n  }\n\n}\n\nexports.Property = Property;\n\nProperty.dummyHook = () => {};","map":{"version":3,"sources":["/Users/sydneybailey/Internship/contract-testing/node_modules/fast-check/lib/check/property/Property.generic.js"],"names":["Object","defineProperty","exports","value","Property","PreconditionFailure_1","require","IRawProperty_1","GlobalParameters_1","ConverterFromNext_1","constructor","arb","predicate","isAsync","beforeEach","dummyHook","afterEach","asyncBeforeEach","asyncAfterEach","readConfigureGlobal","undefined","Error","beforeEachHook","afterEachHook","generate","mrng","runId","ConverterFromNext","isConverterFromNext","toShrinkable","runIdToFrequency","withBias","run","v","output","err","PreconditionFailure","isFailure","stack","hookFunction","previousBeforeEachHook","previousAfterEachHook"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Property = void 0;\nconst PreconditionFailure_1 = require(\"../precondition/PreconditionFailure\");\nconst IRawProperty_1 = require(\"./IRawProperty\");\nconst GlobalParameters_1 = require(\"../runner/configuration/GlobalParameters\");\nconst ConverterFromNext_1 = require(\"../arbitrary/definition/ConverterFromNext\");\nclass Property {\n    constructor(arb, predicate) {\n        this.arb = arb;\n        this.predicate = predicate;\n        this.isAsync = () => false;\n        const { beforeEach = Property.dummyHook, afterEach = Property.dummyHook, asyncBeforeEach, asyncAfterEach, } = GlobalParameters_1.readConfigureGlobal() || {};\n        if (asyncBeforeEach !== undefined) {\n            throw Error('\"asyncBeforeEach\" can\\'t be set when running synchronous properties');\n        }\n        if (asyncAfterEach !== undefined) {\n            throw Error('\"asyncAfterEach\" can\\'t be set when running synchronous properties');\n        }\n        this.beforeEachHook = beforeEach;\n        this.afterEachHook = afterEach;\n    }\n    generate(mrng, runId) {\n        if (ConverterFromNext_1.ConverterFromNext.isConverterFromNext(this.arb)) {\n            return this.arb.toShrinkable(this.arb.arb.generate(mrng, runId != null ? IRawProperty_1.runIdToFrequency(runId) : undefined));\n        }\n        return runId != null ? this.arb.withBias(IRawProperty_1.runIdToFrequency(runId)).generate(mrng) : this.arb.generate(mrng);\n    }\n    run(v) {\n        this.beforeEachHook();\n        try {\n            const output = this.predicate(v);\n            return output == null || output === true ? null : 'Property failed by returning false';\n        }\n        catch (err) {\n            if (PreconditionFailure_1.PreconditionFailure.isFailure(err))\n                return err;\n            if (err instanceof Error && err.stack)\n                return `${err}\\n\\nStack trace: ${err.stack}`;\n            return `${err}`;\n        }\n        finally {\n            this.afterEachHook();\n        }\n    }\n    beforeEach(hookFunction) {\n        const previousBeforeEachHook = this.beforeEachHook;\n        this.beforeEachHook = () => hookFunction(previousBeforeEachHook);\n        return this;\n    }\n    afterEach(hookFunction) {\n        const previousAfterEachHook = this.afterEachHook;\n        this.afterEachHook = () => hookFunction(previousAfterEachHook);\n        return this;\n    }\n}\nexports.Property = Property;\nProperty.dummyHook = () => { };\n"]},"metadata":{},"sourceType":"script"}