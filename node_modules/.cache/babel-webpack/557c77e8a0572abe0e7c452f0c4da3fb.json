{"ast":null,"code":"'use strict';\n\nvar _awaitAsyncGenerator = require(\"/Users/sydneybailey/Internship/contract-testing/node_modules/@babel/runtime/helpers/awaitAsyncGenerator\").default;\n\nvar _wrapAsyncGenerator = require(\"/Users/sydneybailey/Internship/contract-testing/node_modules/@babel/runtime/helpers/wrapAsyncGenerator\").default;\n\nconst createAdd = require('./add');\n\nconst createAddAll = require('./add-all');\n\nconst createLs = require('./ls');\n\nconst createRm = require('./rm');\n\nconst createRmAll = require('./rm-all');\n\nclass PinAPI {\n  /**\n   * @param {Object} config\n   * @param {import('ipfs-core-utils/src/multicodecs')} config.codecs\n   * @param {import('ipfs-repo').IPFSRepo} config.repo\n   */\n  constructor({\n    codecs,\n    repo\n  }) {\n    const addAll = createAddAll({\n      codecs,\n      repo\n    });\n    this.addAll = addAll;\n    this.add = createAdd({\n      addAll\n    });\n    const rmAll = createRmAll({\n      codecs,\n      repo\n    });\n    this.rmAll = rmAll;\n    this.rm = createRm({\n      rmAll\n    });\n    this.ls = createLs({\n      codecs,\n      repo\n    });\n    /** @type {import('ipfs-core-types/src/pin/remote').API} */\n\n    this.remote = {\n      add: (cid, options = {}) => Promise.reject(new Error('Not implemented')),\n      ls: function () {\n        var _ref = _wrapAsyncGenerator(function* (query, options = {}) {\n          return Promise.reject(new Error('Not implemented'));\n        });\n\n        return function ls(_x) {\n          return _ref.apply(this, arguments);\n        };\n      }(),\n      // eslint-disable-line require-yield\n      rm: (query, options = {}) => Promise.reject(new Error('Not implemented')),\n      rmAll: (query, options = {}) => Promise.reject(new Error('Not implemented')),\n      service: {\n        add: (name, credentials) => Promise.reject(new Error('Not implemented')),\n        rm: (name, options = {}) => Promise.reject(new Error('Not implemented')),\n        // @ts-ignore return types seem to be broken by a recent ts release. doesn't matter here because\n        // we are just throwing. Will be removed by https://github.com/protocol/web3-dev-team/pull/58\n        ls: (options = {}) => Promise.reject(new Error('Not implemented'))\n      }\n    };\n  }\n\n}\n\nmodule.exports = PinAPI;","map":null,"metadata":{},"sourceType":"script"}