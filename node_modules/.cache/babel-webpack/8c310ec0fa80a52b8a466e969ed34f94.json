{"ast":null,"code":"'use strict';\n\nconst IpnsPubsubDatastore = require('../../../ipns/routing/pubsub-datastore');\n\nconst errcode = require('err-code');\n/**\n * @typedef {import('../../../types').ExperimentalOptions} ExperimentalOptions\n * @property {boolean} [ipnsPubsub] - Enable pub-sub on IPNS. (Default: `false`)\n */\n\n/**\n * Get pubsub from IPNS routing\n *\n * @param {import('../../ipns')} ipns\n * @param {ExperimentalOptions} [options]\n */\n\n\nexports.getPubsubRouting = (ipns, options) => {\n  if (!ipns || !(options && options.ipnsPubsub)) {\n    throw errcode(new Error('IPNS pubsub subsystem is not enabled'), 'ERR_IPNS_PUBSUB_NOT_ENABLED');\n  } // Only one store and it is pubsub\n\n\n  if (ipns.routing instanceof IpnsPubsubDatastore) {\n    return ipns.routing;\n  } // Find in tiered\n\n\n  const pubsub = (ipns.routing.stores || []).find(s => s instanceof IpnsPubsubDatastore);\n\n  if (!pubsub) {\n    throw errcode(new Error('IPNS pubsub datastore not found'), 'ERR_PUBSUB_DATASTORE_NOT_FOUND');\n  }\n\n  return pubsub;\n};","map":null,"metadata":{},"sourceType":"script"}