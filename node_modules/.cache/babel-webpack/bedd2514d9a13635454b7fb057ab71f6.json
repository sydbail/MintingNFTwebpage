{"ast":null,"code":"'use strict';\n/**\n * Returns the last item of an (async) iterable, unless empty, in which case\n * return `undefined`.\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n */\n\nvar _asyncToGenerator = require(\"/Users/sydneybailey/Internship/Demo/node_modules/@babel/runtime/helpers/asyncToGenerator\").default;\n\nvar _asyncIterator = require(\"/Users/sydneybailey/Internship/Demo/node_modules/@babel/runtime/helpers/asyncIterator\").default;\n\nconst last = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (source) {\n    let res;\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n\n    var _iteratorError;\n\n    try {\n      for (var _iterator = _asyncIterator(source), _step, _value; _step = yield _iterator.next(), _iteratorNormalCompletion = _step.done, _value = yield _step.value, !_iteratorNormalCompletion; _iteratorNormalCompletion = true) {\n        const entry = _value;\n        res = entry;\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          yield _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    return res;\n  });\n\n  return function last(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nmodule.exports = last;","map":{"version":3,"sources":["/Users/sydneybailey/Internship/Demo/node_modules/it-last/index.js"],"names":["last","source","res","entry","module","exports"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AACA,MAAMA,IAAI;AAAA,+BAAG,WAAOC,MAAP,EAAkB;AAC7B,QAAIC,GAAJ;AAD6B;AAAA;;AAAA;;AAAA;AAG7B,0CAA0BD,MAA1B,oLAAkC;AAAA,cAAjBE,KAAiB;AAChCD,QAAAA,GAAG,GAAGC,KAAN;AACD;AAL4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAO7B,WAAOD,GAAP;AACD,GARS;;AAAA,kBAAJF,IAAI;AAAA;AAAA;AAAA,GAAV;;AAUAI,MAAM,CAACC,OAAP,GAAiBL,IAAjB","sourcesContent":["'use strict'\n\n/**\n * Returns the last item of an (async) iterable, unless empty, in which case\n * return `undefined`.\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n */\nconst last = async (source) => {\n  let res\n\n  for await (const entry of source) {\n    res = entry\n  }\n\n  return res\n}\n\nmodule.exports = last\n"]},"metadata":{},"sourceType":"script"}