{"ast":null,"code":"'use strict';\n\nconst {\n  default: nativeFetch,\n  Headers\n} = require('native-fetch');\n/**\n * Build fetch resource for request.\n *\n * @param {object} properties\n * @param {string} properties.serverResolver\n * @param {string} properties.hostname\n * @param {string} properties.recordType\n * @returns {string}\n */\n\n\nfunction buildResource({\n  serverResolver,\n  hostname,\n  recordType\n}) {\n  return `${serverResolver}?name=${hostname}&type=${recordType}`;\n}\n/**\n * Use fetch to find the record.\n *\n * @param {object} resource\n * @returns {Promise}\n */\n\n\nfunction fetch(resource) {\n  return nativeFetch(resource, {\n    headers: new Headers({\n      accept: 'application/dns-json'\n    })\n  });\n}\n/**\n * Creates cache key composed by recordType and hostname.\n *\n * @param {string} hostname\n * @param {string} recordType\n * @returns {string}\n */\n\n\nfunction getCacheKey(hostname, recordType) {\n  return `${recordType}_${hostname}`;\n}\n\nmodule.exports = {\n  buildResource,\n  fetch,\n  getCacheKey\n};","map":null,"metadata":{},"sourceType":"script"}