{"ast":null,"code":"'use strict';\n\nvar _asyncToGenerator = require(\"/Users/sydneybailey/Internship/contract-testing/node_modules/@babel/runtime/helpers/asyncToGenerator\").default;\n\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option');\n\nconst {\n  Multiaddr\n} = require('multiaddr');\n/**\n * @param {Object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n */\n\n\nmodule.exports = ({\n  repo\n}) => {\n  /**\n   * @type {import('ipfs-core-types/src/bootstrap').API[\"list\"]}\n   */\n  function list() {\n    return _list.apply(this, arguments);\n  }\n\n  function _list() {\n    _list = _asyncToGenerator(function* (options = {}) {\n      /** @type {string[]|null} */\n      const peers = yield repo.config.get('Bootstrap', options);\n      return {\n        Peers: (peers || []).map(ma => new Multiaddr(ma))\n      };\n    });\n    return _list.apply(this, arguments);\n  }\n\n  return withTimeoutOption(list);\n};","map":null,"metadata":{},"sourceType":"script"}