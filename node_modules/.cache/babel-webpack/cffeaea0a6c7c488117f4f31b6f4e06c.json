{"ast":null,"code":"'use strict';\n\nconst errcode = require('err-code');\n\nconst {\n  toString: uint8ArrayToString\n} = require('uint8arrays/to-string');\n\nconst {\n  fromString: uint8ArrayFromString\n} = require('uint8arrays/from-string');\n/**\n * @typedef {import('interface-datastore').Key} Key\n */\n\n\nconst namespace = '/record/';\n/**\n * @param {Uint8Array} buf\n */\n\nfunction encodeBase32(buf) {\n  return uint8ArrayToString(buf, 'base32');\n}\n/**\n * converts a binary record key to a pubsub topic key\n *\n * @param {Uint8Array | string} key\n */\n\n\nfunction keyToTopic(key) {\n  // Record-store keys are arbitrary binary. However, pubsub requires UTF-8 string topic IDs\n  // Encodes to \"/record/base64url(key)\"\n  if (typeof key === 'string' || key instanceof String) {\n    key = uint8ArrayFromString(key.toString());\n  }\n\n  const b64url = uint8ArrayToString(key, 'base64url');\n  return `${namespace}${b64url}`;\n}\n/**\n * converts a pubsub topic key to a binary record key\n *\n * @param {string} topic\n */\n\n\nfunction topicToKey(topic) {\n  if (topic.substring(0, namespace.length) !== namespace) {\n    throw errcode(new Error('topic received is not from a record'), 'ERR_TOPIC_IS_NOT_FROM_RECORD_NAMESPACE');\n  }\n\n  const key = topic.substring(namespace.length);\n  return uint8ArrayFromString(key, 'base64url');\n}\n\nmodule.exports = {\n  encodeBase32,\n  keyToTopic,\n  topicToKey\n};","map":null,"metadata":{},"sourceType":"script"}