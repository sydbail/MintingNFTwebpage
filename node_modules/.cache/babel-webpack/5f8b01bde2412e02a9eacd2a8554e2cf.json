{"ast":null,"code":"'use strict';\n\nvar _asyncToGenerator = require(\"/Users/sydneybailey/Internship/Dapp/node_modules/@babel/runtime/helpers/asyncToGenerator\").default;\n\nconst configure = require('../lib/configure');\n\nconst toUrlSearchParams = require('../lib/to-url-search-params');\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/repo').API<HTTPClientExtraOptions>} RepoAPI\n */\n\n\nmodule.exports = configure(api => {\n  /**\n   * @type {RepoAPI[\"version\"]}\n   */\n  function version() {\n    return _version.apply(this, arguments);\n  }\n\n  function _version() {\n    _version = _asyncToGenerator(function* (options = {}) {\n      const res = yield (yield api.post('repo/version', {\n        timeout: options.timeout,\n        signal: options.signal,\n        searchParams: toUrlSearchParams(options),\n        headers: options.headers\n      })).json();\n      return res.Version;\n    });\n    return _version.apply(this, arguments);\n  }\n\n  return version;\n});","map":{"version":3,"sources":["/Users/sydneybailey/Internship/Dapp/node_modules/ipfs-http-client/src/repo/version.js"],"names":["configure","require","toUrlSearchParams","module","exports","api","version","options","res","post","timeout","signal","searchParams","headers","json","Version"],"mappings":"AAAA;;;;AAEA,MAAMA,SAAS,GAAGC,OAAO,CAAC,kBAAD,CAAzB;;AACA,MAAMC,iBAAiB,GAAGD,OAAO,CAAC,6BAAD,CAAjC;AAEA;AACA;AACA;AACA;;;AAEAE,MAAM,CAACC,OAAP,GAAiBJ,SAAS,CAACK,GAAG,IAAI;AAChC;AACF;AACA;AAHkC,WAIjBC,OAJiB;AAAA;AAAA;;AAAA;AAAA,iCAIhC,WAAwBC,OAAO,GAAG,EAAlC,EAAsC;AACpC,YAAMC,GAAG,SAAS,OAAOH,GAAG,CAACI,IAAJ,CAAS,cAAT,EAAyB;AAChDC,QAAAA,OAAO,EAAEH,OAAO,CAACG,OAD+B;AAEhDC,QAAAA,MAAM,EAAEJ,OAAO,CAACI,MAFgC;AAGhDC,QAAAA,YAAY,EAAEV,iBAAiB,CAACK,OAAD,CAHiB;AAIhDM,QAAAA,OAAO,EAAEN,OAAO,CAACM;AAJ+B,OAAzB,CAAP,EAKdC,IALc,EAAlB;AAOA,aAAON,GAAG,CAACO,OAAX;AACD,KAb+B;AAAA;AAAA;;AAchC,SAAOT,OAAP;AACD,CAfyB,CAA1B","sourcesContent":["'use strict'\n\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/repo').API<HTTPClientExtraOptions>} RepoAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {RepoAPI[\"version\"]}\n   */\n  async function version (options = {}) {\n    const res = await (await api.post('repo/version', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })).json()\n\n    return res.Version\n  }\n  return version\n})\n"]},"metadata":{},"sourceType":"script"}