{"ast":null,"code":"'use strict';\n\nconst normaliseContent = require('./normalise-content.browser');\n\nconst normalise = require('./normalise-input');\n/**\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidateStream} ImportCandidateStream\n * @typedef {import('ipfs-core-types/src/utils').BrowserImportCandidate} BrowserImportCandidate\n */\n\n/**\n * Transforms any of the `ipfs.add` input types into\n *\n * ```\n * AsyncIterable<{ path, mode, mtime, content: Blob }>\n * ```\n *\n * See https://github.com/ipfs/js-ipfs/blob/master/docs/core-api/FILES.md#ipfsadddata-options\n *\n * @param {ImportCandidateStream} input\n * @returns {AsyncGenerator<BrowserImportCandidate, void, undefined>}\n */\n\n\nfunction normaliseInput(input) {\n  // @ts-ignore normaliseContent returns Blob and not AsyncIterator\n  return normalise(input, normaliseContent);\n}\n\nmodule.exports = {\n  normaliseInput\n};","map":null,"metadata":{},"sourceType":"script"}