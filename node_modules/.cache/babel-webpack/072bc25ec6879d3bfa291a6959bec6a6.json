{"ast":null,"code":"'use strict';\n\nvar _asyncToGenerator = require(\"/Users/sydneybailey/Internship/Dapp/node_modules/@babel/runtime/helpers/asyncToGenerator\").default;\n\nconst {\n  getPubsubRouting\n} = require('./utils');\n\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option');\n/**\n * @param {Object} config\n * @param {import('../../ipns')} config.ipns\n * @param {import('../../../types').Options} config.options\n */\n\n\nmodule.exports = ({\n  ipns,\n  options\n}) => {\n  const experimental = options.EXPERIMENTAL;\n  /**\n   * @type {import('ipfs-core-types/src/name/pubsub').API[\"cancel\"]}\n   */\n\n  function cancel(_x) {\n    return _cancel.apply(this, arguments);\n  }\n\n  function _cancel() {\n    _cancel = _asyncToGenerator(function* (name, options = {}) {\n      // eslint-disable-line require-await\n      const pubsub = getPubsubRouting(ipns, experimental);\n      return pubsub.cancel(name, options);\n    });\n    return _cancel.apply(this, arguments);\n  }\n\n  return withTimeoutOption(cancel);\n};","map":{"version":3,"sources":["/Users/sydneybailey/Internship/Dapp/node_modules/ipfs-core/src/components/name/pubsub/cancel.js"],"names":["getPubsubRouting","require","withTimeoutOption","module","exports","ipns","options","experimental","EXPERIMENTAL","cancel","name","pubsub"],"mappings":"AAAA;;;;AAEA,MAAM;AAAEA,EAAAA;AAAF,IAAuBC,OAAO,CAAC,SAAD,CAApC;;AACA,MAAMC,iBAAiB,GAAGD,OAAO,CAAC,yCAAD,CAAjC;AAEA;AACA;AACA;AACA;AACA;;;AACAE,MAAM,CAACC,OAAP,GAAiB,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAuB;AACtC,QAAMC,YAAY,GAAGD,OAAO,CAACE,YAA7B;AAEA;AACF;AACA;;AALwC,WAMvBC,MANuB;AAAA;AAAA;;AAAA;AAAA,gCAMtC,WAAuBC,IAAvB,EAA6BJ,OAAO,GAAG,EAAvC,EAA2C;AAAE;AAC3C,YAAMK,MAAM,GAAGX,gBAAgB,CAACK,IAAD,EAAOE,YAAP,CAA/B;AACA,aAAOI,MAAM,CAACF,MAAP,CAAcC,IAAd,EAAoBJ,OAApB,CAAP;AACD,KATqC;AAAA;AAAA;;AAWtC,SAAOJ,iBAAiB,CAACO,MAAD,CAAxB;AACD,CAZD","sourcesContent":["'use strict'\n\nconst { getPubsubRouting } = require('./utils')\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option')\n\n/**\n * @param {Object} config\n * @param {import('../../ipns')} config.ipns\n * @param {import('../../../types').Options} config.options\n */\nmodule.exports = ({ ipns, options }) => {\n  const experimental = options.EXPERIMENTAL\n\n  /**\n   * @type {import('ipfs-core-types/src/name/pubsub').API[\"cancel\"]}\n   */\n  async function cancel (name, options = {}) { // eslint-disable-line require-await\n    const pubsub = getPubsubRouting(ipns, experimental)\n    return pubsub.cancel(name, options)\n  }\n\n  return withTimeoutOption(cancel)\n}\n"]},"metadata":{},"sourceType":"script"}