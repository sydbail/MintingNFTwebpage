{"ast":null,"code":"'use strict';\n\nvar _asyncToGenerator = require(\"/Users/sydneybailey/Internship/contract-testing/node_modules/@babel/runtime/helpers/asyncToGenerator\").default;\n\nconst addAll = require('./add-all');\n\nconst last = require('it-last');\n\nconst configure = require('./lib/configure');\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\n/**\n * @param {import('./types').Options} options\n */\n\n\nmodule.exports = options => {\n  const all = addAll(options);\n  return configure(() => {\n    /**\n     * @type {RootAPI[\"add\"]}\n     */\n    function add(_x) {\n      return _add.apply(this, arguments);\n    }\n\n    function _add() {\n      _add = _asyncToGenerator(function* (input, options = {}) {\n        // @ts-ignore - last may return undefined if source is empty\n        return yield last(all(input, options));\n      });\n      return _add.apply(this, arguments);\n    }\n\n    return add;\n  })(options);\n};","map":null,"metadata":{},"sourceType":"script"}