{"ast":null,"code":"'use strict';\n\nvar _asyncToGenerator = require(\"/Users/sydneybailey/Internship/contract-testing/node_modules/@babel/runtime/helpers/asyncToGenerator\").default;\n\nconst configure = require('./lib/configure');\n\nconst toUrlSearchParams = require('./lib/to-url-search-params');\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\n\nmodule.exports = configure(api => {\n  /**\n   * @type {RootAPI[\"resolve\"]}\n   */\n  function resolve(_x) {\n    return _resolve.apply(this, arguments);\n  }\n\n  function _resolve() {\n    _resolve = _asyncToGenerator(function* (path, options = {}) {\n      const res = yield api.post('resolve', {\n        timeout: options.timeout,\n        signal: options.signal,\n        searchParams: toUrlSearchParams({\n          arg: path,\n          ...options\n        }),\n        headers: options.headers\n      });\n      const {\n        Path\n      } = yield res.json();\n      return Path;\n    });\n    return _resolve.apply(this, arguments);\n  }\n\n  return resolve;\n});","map":{"version":3,"sources":["/Users/sydneybailey/Internship/contract-testing/node_modules/ipfs-http-client/src/resolve.js"],"names":["configure","require","toUrlSearchParams","module","exports","api","resolve","path","options","res","post","timeout","signal","searchParams","arg","headers","Path","json"],"mappings":"AAAA;;;;AAEA,MAAMA,SAAS,GAAGC,OAAO,CAAC,iBAAD,CAAzB;;AACA,MAAMC,iBAAiB,GAAGD,OAAO,CAAC,4BAAD,CAAjC;AAEA;AACA;AACA;AACA;;;AAEAE,MAAM,CAACC,OAAP,GAAiBJ,SAAS,CAACK,GAAG,IAAI;AAChC;AACF;AACA;AAHkC,WAIjBC,OAJiB;AAAA;AAAA;;AAAA;AAAA,iCAIhC,WAAwBC,IAAxB,EAA8BC,OAAO,GAAG,EAAxC,EAA4C;AAC1C,YAAMC,GAAG,SAASJ,GAAG,CAACK,IAAJ,CAAS,SAAT,EAAoB;AACpCC,QAAAA,OAAO,EAAEH,OAAO,CAACG,OADmB;AAEpCC,QAAAA,MAAM,EAAEJ,OAAO,CAACI,MAFoB;AAGpCC,QAAAA,YAAY,EAAEX,iBAAiB,CAAC;AAC9BY,UAAAA,GAAG,EAAEP,IADyB;AAE9B,aAAGC;AAF2B,SAAD,CAHK;AAOpCO,QAAAA,OAAO,EAAEP,OAAO,CAACO;AAPmB,OAApB,CAAlB;AASA,YAAM;AAAEC,QAAAA;AAAF,gBAAiBP,GAAG,CAACQ,IAAJ,EAAvB;AACA,aAAOD,IAAP;AACD,KAhB+B;AAAA;AAAA;;AAiBhC,SAAOV,OAAP;AACD,CAlByB,CAA1B","sourcesContent":["'use strict'\n\nconst configure = require('./lib/configure')\nconst toUrlSearchParams = require('./lib/to-url-search-params')\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {RootAPI[\"resolve\"]}\n   */\n  async function resolve (path, options = {}) {\n    const res = await api.post('resolve', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const { Path } = await res.json()\n    return Path\n  }\n  return resolve\n})\n"]},"metadata":{},"sourceType":"script"}