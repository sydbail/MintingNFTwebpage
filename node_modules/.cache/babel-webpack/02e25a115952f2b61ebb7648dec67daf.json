{"ast":null,"code":"'use strict';\n\nvar _wrapAsyncGenerator = require(\"/Users/sydneybailey/Internship/Dapp/node_modules/@babel/runtime/helpers/wrapAsyncGenerator\").default;\n\nvar _awaitAsyncGenerator = require(\"/Users/sydneybailey/Internship/Dapp/node_modules/@babel/runtime/helpers/awaitAsyncGenerator\").default;\n\nvar _asyncIterator = require(\"/Users/sydneybailey/Internship/Dapp/node_modules/@babel/runtime/helpers/asyncIterator\").default;\n\nvar _asyncGeneratorDelegate = require(\"/Users/sydneybailey/Internship/Dapp/node_modules/@babel/runtime/helpers/asyncGeneratorDelegate\").default;\n\nconst configure = require('../lib/configure');\n\nconst toUrlSearchParams = require('../lib/to-url-search-params');\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/log').API<HTTPClientExtraOptions>} LogAPI\n */\n\n\nmodule.exports = configure(api => {\n  /**\n   * @type {LogAPI[\"tail\"]}\n   */\n  function tail() {\n    return _tail.apply(this, arguments);\n  }\n\n  function _tail() {\n    _tail = _wrapAsyncGenerator(function* (options = {}) {\n      const res = yield _awaitAsyncGenerator(api.post('log/tail', {\n        timeout: options.timeout,\n        signal: options.signal,\n        searchParams: toUrlSearchParams(options),\n        headers: options.headers\n      }));\n      yield* _asyncGeneratorDelegate(_asyncIterator(res.ndjson()), _awaitAsyncGenerator);\n    });\n    return _tail.apply(this, arguments);\n  }\n\n  return tail;\n});","map":{"version":3,"sources":["/Users/sydneybailey/Internship/Dapp/node_modules/ipfs-http-client/src/log/tail.js"],"names":["configure","require","toUrlSearchParams","module","exports","api","tail","options","res","post","timeout","signal","searchParams","headers","ndjson"],"mappings":"AAAA;;;;;;;;;;AAEA,MAAMA,SAAS,GAAGC,OAAO,CAAC,kBAAD,CAAzB;;AACA,MAAMC,iBAAiB,GAAGD,OAAO,CAAC,6BAAD,CAAjC;AAEA;AACA;AACA;AACA;;;AAEAE,MAAM,CAACC,OAAP,GAAiBJ,SAAS,CAACK,GAAG,IAAI;AAChC;AACF;AACA;AAHkC,WAIfC,IAJe;AAAA;AAAA;;AAAA;AAAA,gCAIhC,WAAuBC,OAAO,GAAG,EAAjC,EAAqC;AACnC,YAAMC,GAAG,8BAASH,GAAG,CAACI,IAAJ,CAAS,UAAT,EAAqB;AACrCC,QAAAA,OAAO,EAAEH,OAAO,CAACG,OADoB;AAErCC,QAAAA,MAAM,EAAEJ,OAAO,CAACI,MAFqB;AAGrCC,QAAAA,YAAY,EAAEV,iBAAiB,CAACK,OAAD,CAHM;AAIrCM,QAAAA,OAAO,EAAEN,OAAO,CAACM;AAJoB,OAArB,CAAT,CAAT;AAOA,oDAAQL,GAAG,CAACM,MAAJ,EAAR;AACD,KAb+B;AAAA;AAAA;;AAchC,SAAOR,IAAP;AACD,CAfyB,CAA1B","sourcesContent":["'use strict'\n\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/log').API<HTTPClientExtraOptions>} LogAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {LogAPI[\"tail\"]}\n   */\n  async function * tail (options = {}) {\n    const res = await api.post('log/tail', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    yield * res.ndjson()\n  }\n  return tail\n})\n"]},"metadata":{},"sourceType":"script"}