{"ast":null,"code":"'use strict';\n\nvar _asyncToGenerator = require(\"/Users/sydneybailey/Internship/Dapp/node_modules/@babel/runtime/helpers/asyncToGenerator\").default;\n\nconst log = require('debug')('ipfs:mfs:utils:update-mfs-root');\n\nconst {\n  MFS_ROOT_KEY\n} = require('../../../utils');\n\nconst errCode = require('err-code');\n/**\n * @typedef {import('../').MfsContext} MfsContext\n */\n\n/**\n * @param {MfsContext} context\n * @param {import('multiformats/cid').CID} cid\n * @param {import('ipfs-core-types/src/utils').AbortOptions} options\n */\n\n\nconst updateMfsRoot = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (context, cid, options) {\n    if (options && options.signal && options.signal.aborted) {\n      throw errCode(new Error('Request aborted'), 'ERR_ABORTED', {\n        name: 'Aborted'\n      });\n    }\n\n    log(`New MFS root will be ${cid}`);\n    yield context.repo.datastore.put(MFS_ROOT_KEY, cid.bytes);\n    return cid;\n  });\n\n  return function updateMfsRoot(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nmodule.exports = updateMfsRoot;","map":{"version":3,"sources":["/Users/sydneybailey/Internship/Dapp/node_modules/ipfs-core/src/components/files/utils/update-mfs-root.js"],"names":["log","require","MFS_ROOT_KEY","errCode","updateMfsRoot","context","cid","options","signal","aborted","Error","name","repo","datastore","put","bytes","module","exports"],"mappings":"AAAA;;;;AAEA,MAAMA,GAAG,GAAGC,OAAO,CAAC,OAAD,CAAP,CAAiB,gCAAjB,CAAZ;;AACA,MAAM;AACJC,EAAAA;AADI,IAEFD,OAAO,CAAC,gBAAD,CAFX;;AAGA,MAAME,OAAO,GAAGF,OAAO,CAAC,UAAD,CAAvB;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AACA,MAAMG,aAAa;AAAA,+BAAG,WAAOC,OAAP,EAAgBC,GAAhB,EAAqBC,OAArB,EAAiC;AACrD,QAAIA,OAAO,IAAIA,OAAO,CAACC,MAAnB,IAA6BD,OAAO,CAACC,MAAR,CAAeC,OAAhD,EAAyD;AACvD,YAAMN,OAAO,CAAC,IAAIO,KAAJ,CAAU,iBAAV,CAAD,EAA+B,aAA/B,EAA8C;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAA9C,CAAb;AACD;;AAEDX,IAAAA,GAAG,CAAE,wBAAuBM,GAAI,EAA7B,CAAH;AAEA,UAAMD,OAAO,CAACO,IAAR,CAAaC,SAAb,CAAuBC,GAAvB,CAA2BZ,YAA3B,EAAyCI,GAAG,CAACS,KAA7C,CAAN;AAEA,WAAOT,GAAP;AACD,GAVkB;;AAAA,kBAAbF,aAAa;AAAA;AAAA;AAAA,GAAnB;;AAYAY,MAAM,CAACC,OAAP,GAAiBb,aAAjB","sourcesContent":["'use strict'\n\nconst log = require('debug')('ipfs:mfs:utils:update-mfs-root')\nconst {\n  MFS_ROOT_KEY\n} = require('../../../utils')\nconst errCode = require('err-code')\n\n/**\n * @typedef {import('../').MfsContext} MfsContext\n */\n\n/**\n * @param {MfsContext} context\n * @param {import('multiformats/cid').CID} cid\n * @param {import('ipfs-core-types/src/utils').AbortOptions} options\n */\nconst updateMfsRoot = async (context, cid, options) => {\n  if (options && options.signal && options.signal.aborted) {\n    throw errCode(new Error('Request aborted'), 'ERR_ABORTED', { name: 'Aborted' })\n  }\n\n  log(`New MFS root will be ${cid}`)\n\n  await context.repo.datastore.put(MFS_ROOT_KEY, cid.bytes)\n\n  return cid\n}\n\nmodule.exports = updateMfsRoot\n"]},"metadata":{},"sourceType":"script"}