{"ast":null,"code":"'use strict';\n\nvar _asyncToGenerator = require(\"/Users/sydneybailey/Internship/Demo/node_modules/@babel/runtime/helpers/asyncToGenerator\").default;\n\nconst ecdh = require('./ecdh'); // Generates an ephemeral public key and returns a function that will compute\n// the shared secret key.\n//\n// Focuses only on ECDH now, but can be made more general in the future.\n\n\nmodule.exports = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (curve) {\n    return ecdh.generateEphmeralKeyPair(curve);\n  });\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}(); // eslint-disable-line require-await","map":{"version":3,"sources":["/Users/sydneybailey/Internship/Demo/node_modules/libp2p-crypto/src/keys/ephemeral-keys.js"],"names":["ecdh","require","module","exports","curve","generateEphmeralKeyPair"],"mappings":"AAAA;;;;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAApB,C,CAEA;AACA;AACA;AACA;;;AACAC,MAAM,CAACC,OAAP;AAAA,+BAAiB,WAAOC,KAAP;AAAA,WAAiBJ,IAAI,CAACK,uBAAL,CAA6BD,KAA7B,CAAjB;AAAA,GAAjB;;AAAA;AAAA;AAAA;AAAA,I,CAAsE","sourcesContent":["'use strict'\n\nconst ecdh = require('./ecdh')\n\n// Generates an ephemeral public key and returns a function that will compute\n// the shared secret key.\n//\n// Focuses only on ECDH now, but can be made more general in the future.\nmodule.exports = async (curve) => ecdh.generateEphmeralKeyPair(curve) // eslint-disable-line require-await\n"]},"metadata":{},"sourceType":"script"}