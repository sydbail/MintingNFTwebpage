{"ast":null,"code":"import _asyncToGenerator from \"/Users/sydneybailey/Internship/contract-testing/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { CID } from 'multiformats/cid';\nimport * as dagPb from '@ipld/dag-pb';\nimport { sha256 } from 'multiformats/hashes/sha2';\n\nconst persist = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (buffer, blockstore, options) {\n    if (!options.codec) {\n      options.codec = dagPb;\n    }\n\n    if (!options.hasher) {\n      options.hasher = sha256;\n    }\n\n    if (options.cidVersion === undefined) {\n      options.cidVersion = 1;\n    }\n\n    if (options.codec === dagPb && options.hasher !== sha256) {\n      options.cidVersion = 1;\n    }\n\n    const multihash = yield options.hasher.digest(buffer);\n    const cid = CID.create(options.cidVersion, options.codec.code, multihash);\n\n    if (!options.onlyHash) {\n      yield blockstore.put(cid, buffer, {\n        signal: options.signal\n      });\n    }\n\n    return cid;\n  });\n\n  return function persist(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default persist;","map":null,"metadata":{},"sourceType":"module"}