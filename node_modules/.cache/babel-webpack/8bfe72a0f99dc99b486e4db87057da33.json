{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"/Users/sydneybailey/Internship/contract-testing/node_modules/@babel/runtime/helpers/asyncToGenerator\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.func = void 0;\n\nconst hash_1 = require(\"../utils/hash\");\n\nconst stringify_1 = require(\"../utils/stringify\");\n\nconst symbols_1 = require(\"../check/symbols\");\n\nconst array_1 = require(\"./array\");\n\nconst integer_1 = require(\"./integer\");\n\nconst tuple_1 = require(\"./tuple\");\n\nconst TextEscaper_1 = require(\"../check/arbitrary/helpers/TextEscaper\");\n\nfunction func(arb) {\n  return tuple_1.tuple(array_1.array(arb, {\n    minLength: 1\n  }), integer_1.integer().noShrink()).map(([outs, seed]) => {\n    const producer = () => {\n      const recorded = {};\n\n      const f = (...args) => {\n        const repr = stringify_1.stringify(args);\n        const val = outs[hash_1.hash(`${seed}${repr}`) % outs.length];\n        recorded[repr] = val;\n        return symbols_1.hasCloneMethod(val) ? val[symbols_1.cloneMethod]() : val;\n      };\n\n      function prettyPrint(stringifiedOuts) {\n        const seenValues = Object.keys(recorded).sort().map(k => `${k} => ${stringify_1.stringify(recorded[k])}`).map(line => `/* ${TextEscaper_1.escapeForMultilineComments(line)} */`);\n        return `function(...args) {\n  // With hash and stringify coming from fast-check${seenValues.length !== 0 ? `\\n  ${seenValues.join('\\n  ')}` : ''}\n  const outs = ${stringifiedOuts};\n  return outs[hash('${seed}' + stringify(args)) % outs.length];\n}`;\n      }\n\n      return Object.defineProperties(f, {\n        toString: {\n          value: () => prettyPrint(stringify_1.stringify(outs))\n        },\n        [stringify_1.toStringMethod]: {\n          value: () => prettyPrint(stringify_1.stringify(outs))\n        },\n        [stringify_1.asyncToStringMethod]: {\n          value: function () {\n            var _ref = _asyncToGenerator(function* () {\n              return prettyPrint(yield stringify_1.asyncStringify(outs));\n            });\n\n            return function value() {\n              return _ref.apply(this, arguments);\n            };\n          }()\n        },\n        [symbols_1.cloneMethod]: {\n          value: producer,\n          configurable: true\n        }\n      });\n    };\n\n    return producer();\n  });\n}\n\nexports.func = func;","map":null,"metadata":{},"sourceType":"script"}