{"ast":null,"code":"'use strict';\n\nconst createData = require('./data');\n\nconst createGet = require('./get');\n\nconst createLinks = require('./links');\n\nconst createNew = require('./new');\n\nconst createPut = require('./put');\n\nconst createStat = require('./stat');\n\nconst ObjectPatchAPI = require('./patch');\n/**\n * @typedef {import('../../types').Preload} Preload\n * @typedef {import('multiformats/cid').CID} CID\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n */\n\n\nclass ObjectAPI {\n  /**\n   * @param {Object} config\n   * @param {import('ipfs-repo').IPFSRepo} config.repo\n   * @param {import('ipfs-core-utils/src/multicodecs')} config.codecs\n   * @param {Preload} config.preload\n   */\n  constructor({\n    repo,\n    codecs,\n    preload\n  }) {\n    this.data = createData({\n      repo,\n      preload\n    });\n    this.get = createGet({\n      repo,\n      preload\n    });\n    this.links = createLinks({\n      repo,\n      codecs\n    });\n    this.new = createNew({\n      repo,\n      preload\n    });\n    this.put = createPut({\n      repo,\n      preload\n    });\n    this.stat = createStat({\n      repo,\n      preload\n    });\n    this.patch = new ObjectPatchAPI({\n      repo,\n      preload\n    });\n  }\n\n}\n\nmodule.exports = ObjectAPI;","map":null,"metadata":{},"sourceType":"script"}