{"ast":null,"code":"'use strict';\n\nconst AbstractIterator = require('abstract-leveldown').AbstractIterator;\n\nconst inherits = require('inherits');\n\nfunction DeferredIterator(db, options) {\n  AbstractIterator.call(this, db);\n  this._options = options;\n  this._iterator = null;\n  this._operations = [];\n}\n\ninherits(DeferredIterator, AbstractIterator);\n\nDeferredIterator.prototype.setDb = function (db) {\n  const it = this._iterator = db.iterator(this._options);\n\n  for (const op of this._operations) {\n    it[op.method](...op.args);\n  }\n};\n\nDeferredIterator.prototype._operation = function (method, args) {\n  if (this._iterator) return this._iterator[method](...args);\n\n  this._operations.push({\n    method,\n    args\n  });\n};\n\nfor (const m of ['next', 'end']) {\n  DeferredIterator.prototype['_' + m] = function (...args) {\n    this._operation(m, args);\n  };\n} // Must defer seek() rather than _seek() because it requires db._serializeKey to be available\n\n\nDeferredIterator.prototype.seek = function (...args) {\n  this._operation('seek', args);\n};\n\nmodule.exports = DeferredIterator;","map":null,"metadata":{},"sourceType":"script"}