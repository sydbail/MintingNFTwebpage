{"ast":null,"code":"import _asyncToGenerator from \"/Users/sydneybailey/Internship/Dapp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../ipfs.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/expansion\";\n\nfunction UploadComponent_div_0_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtext(1, \" Upload Successful \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UploadComponent_div_0_div_8_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵelement(1, \"hr\");\n    i0.ɵɵelement(2, \"img\", 14);\n    i0.ɵɵelementStart(3, \"span\", 15);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function UploadComponent_div_0_div_8_div_3_Template_button_click_5_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const file_r7 = restoredCtx.$implicit;\n      const ctx_r9 = i0.ɵɵnextContext(3);\n      return ctx_r9.onRemove(file_r7);\n    });\n    i0.ɵɵtext(6, \" X \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const file_r7 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", file_r7.url, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", file_r7.name, \" \");\n  }\n}\n\nfunction UploadComponent_div_0_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵelementStart(1, \"h2\");\n    i0.ɵɵtext(2, \" Uploaded Files \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, UploadComponent_div_0_div_8_div_3_Template, 7, 2, \"div\", 12);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r5.FileInfos);\n  }\n}\n\nfunction UploadComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵelementStart(1, \"div\", 5);\n    i0.ɵɵelementStart(2, \"h1\");\n    i0.ɵɵtext(3, \" Upload Imagery\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"input\", 6);\n    i0.ɵɵlistener(\"change\", function UploadComponent_div_0_Template_input_change_4_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.onChange($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function UploadComponent_div_0_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return ctx_r13.onClick();\n    });\n    i0.ɵɵtext(6, \" Upload \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(7, UploadComponent_div_0_div_7_Template, 2, 0, \"div\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(8, UploadComponent_div_0_div_8_Template, 4, 1, \"div\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.msg === \"Success\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.FileInfos[0]);\n  }\n}\n\nfunction UploadComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵelementStart(1, \"h1\", 18);\n    i0.ɵɵtext(2, \"Upload images with IPFS metadata?:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function UploadComponent_div_1_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return ctx_r14.ipfsUpload();\n    });\n    i0.ɵɵtext(4, \" Yes \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function UploadComponent_div_1_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return ctx_r16.showContracts();\n    });\n    i0.ɵɵtext(6, \" No \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UploadComponent_div_2_div_6_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r25 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 32);\n    i0.ɵɵelement(1, \"hr\");\n    i0.ɵɵelement(2, \"img\", 33);\n    i0.ɵɵelementStart(3, \"p\", 34);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 35);\n    i0.ɵɵelementStart(6, \"label\", 36);\n    i0.ɵɵtext(7, \"Name:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"input\", 37);\n    i0.ɵɵlistener(\"ngModelChange\", function UploadComponent_div_2_div_6_div_3_Template_input_ngModelChange_8_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r25);\n      const file_r22 = restoredCtx.$implicit;\n      return file_r22.mname = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 35);\n    i0.ɵɵelementStart(10, \"label\", 36);\n    i0.ɵɵtext(11, \"Description:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"input\", 38);\n    i0.ɵɵlistener(\"ngModelChange\", function UploadComponent_div_2_div_6_div_3_Template_input_ngModelChange_12_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r25);\n      const file_r22 = restoredCtx.$implicit;\n      return file_r22.desc = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"div\", 39);\n    i0.ɵɵelementStart(14, \"label\", 36);\n    i0.ɵɵtext(15, \" Image:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(16, \"input\", 40);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"mat-expansion-panel\", 41);\n    i0.ɵɵelementStart(18, \"mat-expansion-panel-header\", 42);\n    i0.ɵɵelementStart(19, \"mat-panel-title\");\n    i0.ɵɵtext(20, \"Show Additional Fields\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"div\", 43);\n    i0.ɵɵelementStart(22, \"label\", 36);\n    i0.ɵɵtext(23, \"Drone Type:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"input\", 44);\n    i0.ɵɵlistener(\"ngModelChange\", function UploadComponent_div_2_div_6_div_3_Template_input_ngModelChange_24_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r25);\n      const file_r22 = restoredCtx.$implicit;\n      return file_r22.drone = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"div\", 45);\n    i0.ɵɵelementStart(26, \"label\", 36);\n    i0.ɵɵtext(27, \"Pilot Name:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(28, \"input\", 46);\n    i0.ɵɵlistener(\"ngModelChange\", function UploadComponent_div_2_div_6_div_3_Template_input_ngModelChange_28_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r25);\n      const file_r22 = restoredCtx.$implicit;\n      return file_r22.pilot = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(29, \"div\", 35);\n    i0.ɵɵelementStart(30, \"label\", 36);\n    i0.ɵɵtext(31, \"Date Captured:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(32, \"input\", 47);\n    i0.ɵɵlistener(\"ngModelChange\", function UploadComponent_div_2_div_6_div_3_Template_input_ngModelChange_32_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r25);\n      const file_r22 = restoredCtx.$implicit;\n      return file_r22.date = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(33, \"div\", 35);\n    i0.ɵɵelementStart(34, \"label\", 36);\n    i0.ɵɵtext(35, \"Altitude:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(36, \"input\", 48);\n    i0.ɵɵlistener(\"ngModelChange\", function UploadComponent_div_2_div_6_div_3_Template_input_ngModelChange_36_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r25);\n      const file_r22 = restoredCtx.$implicit;\n      return file_r22.alt = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(37, \"div\", 35);\n    i0.ɵɵelementStart(38, \"label\", 36);\n    i0.ɵɵtext(39, \"Captured Autonomously:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(40, \"input\", 49);\n    i0.ɵɵlistener(\"ngModelChange\", function UploadComponent_div_2_div_6_div_3_Template_input_ngModelChange_40_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r25);\n      const file_r22 = restoredCtx.$implicit;\n      return file_r22.auto = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(41, \"div\", 35);\n    i0.ɵɵelementStart(42, \"label\", 36);\n    i0.ɵɵtext(43, \"Latitude:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(44, \"input\", 50);\n    i0.ɵɵlistener(\"ngModelChange\", function UploadComponent_div_2_div_6_div_3_Template_input_ngModelChange_44_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r25);\n      const file_r22 = restoredCtx.$implicit;\n      return file_r22.lat = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(45, \"div\", 35);\n    i0.ɵɵelementStart(46, \"label\", 36);\n    i0.ɵɵtext(47, \"Longitude:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(48, \"input\", 51);\n    i0.ɵɵlistener(\"ngModelChange\", function UploadComponent_div_2_div_6_div_3_Template_input_ngModelChange_48_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r25);\n      const file_r22 = restoredCtx.$implicit;\n      return file_r22.lon = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const file_r22 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", file_r22.url, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", file_r22.name, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"for\", \"metaname_\", file_r22.id, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"metaname_\", file_r22.id, \"\");\n    i0.ɵɵpropertyInterpolate1(\"name\", \"name_\", file_r22.id, \"\");\n    i0.ɵɵproperty(\"ngModel\", file_r22.mname);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"for\", \"metades_\", file_r22.id, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"metades_\", file_r22.id, \"\");\n    i0.ɵɵpropertyInterpolate1(\"name\", \"description_\", file_r22.id, \"\");\n    i0.ɵɵproperty(\"ngModel\", file_r22.desc);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"for\", \"hash_\", file_r22.id, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"name\", \"image_\", file_r22.id, \"\");\n    i0.ɵɵpropertyInterpolate(\"value\", file_r22.imghash);\n    i0.ɵɵadvance(6);\n    i0.ɵɵpropertyInterpolate1(\"for\", \"drone_\", file_r22.id, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"drone_\", file_r22.id, \"\");\n    i0.ɵɵpropertyInterpolate1(\"name\", \"drone_\", file_r22.id, \"\");\n    i0.ɵɵproperty(\"ngModel\", file_r22.drone);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"for\", \"pilot_\", file_r22.id, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"pilot_\", file_r22.id, \"\");\n    i0.ɵɵpropertyInterpolate1(\"name\", \"pilot_\", file_r22.id, \"\");\n    i0.ɵɵproperty(\"ngModel\", file_r22.pilot);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"for\", \"date_\", file_r22.id, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"date_\", file_r22.id, \"\");\n    i0.ɵɵpropertyInterpolate1(\"name\", \"date_\", file_r22.id, \"\");\n    i0.ɵɵproperty(\"ngModel\", file_r22.date);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"for\", \"alt_\", file_r22.id, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"alt_\", file_r22.id, \"\");\n    i0.ɵɵpropertyInterpolate1(\"name\", \"alt_\", file_r22.id, \"\");\n    i0.ɵɵproperty(\"ngModel\", file_r22.alt);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"for\", \"auto_\", file_r22.id, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"auto_\", file_r22.id, \"\");\n    i0.ɵɵpropertyInterpolate1(\"name\", \"auto_\", file_r22.id, \"\");\n    i0.ɵɵproperty(\"ngModel\", file_r22.auto);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"for\", \"lat_\", file_r22.id, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"lat_\", file_r22.id, \"\");\n    i0.ɵɵpropertyInterpolate1(\"name\", \"lat_\", file_r22.id, \"\");\n    i0.ɵɵproperty(\"ngModel\", file_r22.lat);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"for\", \"lon_\", file_r22.id, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"lon_\", file_r22.id, \"\");\n    i0.ɵɵpropertyInterpolate1(\"name\", \"lon_\", file_r22.id, \"\");\n    i0.ɵɵproperty(\"ngModel\", file_r22.lon);\n  }\n}\n\nfunction UploadComponent_div_2_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r35 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"form\", 27, 28);\n    i0.ɵɵlistener(\"ngSubmit\", function UploadComponent_div_2_div_6_Template_form_ngSubmit_1_listener() {\n      i0.ɵɵrestoreView(_r35);\n      const ctx_r34 = i0.ɵɵnextContext(2);\n      return ctx_r34.submitMeta(ctx_r34.FileInfos, ctx_r34.sameVars);\n    });\n    i0.ɵɵtemplate(3, UploadComponent_div_2_div_6_div_3_Template, 49, 41, \"div\", 29);\n    i0.ɵɵelementStart(4, \"button\", 30);\n    i0.ɵɵtext(5, \"Submit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"button\", 31);\n    i0.ɵɵlistener(\"click\", function UploadComponent_div_2_div_6_Template_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r35);\n\n      const _r20 = i0.ɵɵreference(2);\n\n      return _r20.reset();\n    });\n    i0.ɵɵtext(7, \"Reset\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r20 = i0.ɵɵreference(2);\n\n    const ctx_r17 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r17.FileInfos);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", !_r20.form.valid);\n  }\n}\n\nfunction UploadComponent_div_2_ng_template_7_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r42 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 32);\n    i0.ɵɵelement(1, \"hr\");\n    i0.ɵɵelement(2, \"img\", 52);\n    i0.ɵɵelementStart(3, \"p\", 34);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 35);\n    i0.ɵɵelementStart(6, \"label\", 36);\n    i0.ɵɵtext(7, \"Name:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"input\", 37);\n    i0.ɵɵlistener(\"ngModelChange\", function UploadComponent_div_2_ng_template_7_div_2_Template_input_ngModelChange_8_listener($event) {\n      i0.ɵɵrestoreView(_r42);\n      const ctx_r41 = i0.ɵɵnextContext(3);\n      return ctx_r41.metaname = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 35);\n    i0.ɵɵelementStart(10, \"label\", 36);\n    i0.ɵɵtext(11, \"Description:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"input\", 38);\n    i0.ɵɵlistener(\"ngModelChange\", function UploadComponent_div_2_ng_template_7_div_2_Template_input_ngModelChange_12_listener($event) {\n      i0.ɵɵrestoreView(_r42);\n      const ctx_r43 = i0.ɵɵnextContext(3);\n      return ctx_r43.metades = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"div\", 39);\n    i0.ɵɵelementStart(14, \"label\", 36);\n    i0.ɵɵtext(15, \" Image:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(16, \"input\", 40);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"mat-expansion-panel\", 41);\n    i0.ɵɵelementStart(18, \"mat-expansion-panel-header\", 42);\n    i0.ɵɵelementStart(19, \"mat-panel-title\");\n    i0.ɵɵtext(20, \"Show Additional Fields\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"div\", 43);\n    i0.ɵɵelementStart(22, \"label\", 36);\n    i0.ɵɵtext(23, \"Drone Type:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"input\", 44);\n    i0.ɵɵlistener(\"ngModelChange\", function UploadComponent_div_2_ng_template_7_div_2_Template_input_ngModelChange_24_listener($event) {\n      i0.ɵɵrestoreView(_r42);\n      const ctx_r44 = i0.ɵɵnextContext(3);\n      return ctx_r44.drone = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"div\", 45);\n    i0.ɵɵelementStart(26, \"label\", 36);\n    i0.ɵɵtext(27, \"Pilot Name:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(28, \"input\", 46);\n    i0.ɵɵlistener(\"ngModelChange\", function UploadComponent_div_2_ng_template_7_div_2_Template_input_ngModelChange_28_listener($event) {\n      i0.ɵɵrestoreView(_r42);\n      const ctx_r45 = i0.ɵɵnextContext(3);\n      return ctx_r45.pilot = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(29, \"div\", 35);\n    i0.ɵɵelementStart(30, \"label\", 36);\n    i0.ɵɵtext(31, \"Date Captured:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(32, \"input\", 47);\n    i0.ɵɵlistener(\"ngModelChange\", function UploadComponent_div_2_ng_template_7_div_2_Template_input_ngModelChange_32_listener($event) {\n      i0.ɵɵrestoreView(_r42);\n      const ctx_r46 = i0.ɵɵnextContext(3);\n      return ctx_r46.date = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(33, \"div\", 35);\n    i0.ɵɵelementStart(34, \"label\", 36);\n    i0.ɵɵtext(35, \"Altitude:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(36, \"input\", 48);\n    i0.ɵɵlistener(\"ngModelChange\", function UploadComponent_div_2_ng_template_7_div_2_Template_input_ngModelChange_36_listener($event) {\n      i0.ɵɵrestoreView(_r42);\n      const ctx_r47 = i0.ɵɵnextContext(3);\n      return ctx_r47.alt = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(37, \"div\", 35);\n    i0.ɵɵelementStart(38, \"label\", 36);\n    i0.ɵɵtext(39, \"Captured Autonomously:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(40, \"input\", 49);\n    i0.ɵɵlistener(\"ngModelChange\", function UploadComponent_div_2_ng_template_7_div_2_Template_input_ngModelChange_40_listener($event) {\n      i0.ɵɵrestoreView(_r42);\n      const ctx_r48 = i0.ɵɵnextContext(3);\n      return ctx_r48.auto = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(41, \"div\", 35);\n    i0.ɵɵelementStart(42, \"label\", 36);\n    i0.ɵɵtext(43, \"Latitude:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(44, \"input\", 50);\n    i0.ɵɵlistener(\"ngModelChange\", function UploadComponent_div_2_ng_template_7_div_2_Template_input_ngModelChange_44_listener($event) {\n      i0.ɵɵrestoreView(_r42);\n      const ctx_r49 = i0.ɵɵnextContext(3);\n      return ctx_r49.lat = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(45, \"div\", 35);\n    i0.ɵɵelementStart(46, \"label\", 36);\n    i0.ɵɵtext(47, \"Longitude:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(48, \"input\", 51);\n    i0.ɵɵlistener(\"ngModelChange\", function UploadComponent_div_2_ng_template_7_div_2_Template_input_ngModelChange_48_listener($event) {\n      i0.ɵɵrestoreView(_r42);\n      const ctx_r50 = i0.ɵɵnextContext(3);\n      return ctx_r50.lon = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const file_r39 = ctx.$implicit;\n    const ctx_r38 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", file_r39.url, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Image: \", file_r39.name, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"for\", \"metaname_\", file_r39.id, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"metaname_\", file_r39.id, \"\");\n    i0.ɵɵpropertyInterpolate1(\"name\", \"name_\", file_r39.id, \"\");\n    i0.ɵɵproperty(\"ngModel\", ctx_r38.metaname);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"for\", \"metades_\", file_r39.id, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"metades_\", file_r39.id, \"\");\n    i0.ɵɵpropertyInterpolate1(\"name\", \"description_\", file_r39.id, \"\");\n    i0.ɵɵproperty(\"ngModel\", ctx_r38.metades);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"for\", \"hash_\", file_r39.id, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"name\", \"image_\", file_r39.id, \"\");\n    i0.ɵɵpropertyInterpolate(\"value\", file_r39.imghash);\n    i0.ɵɵadvance(6);\n    i0.ɵɵpropertyInterpolate1(\"for\", \"drone_\", file_r39.id, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"drone_\", file_r39.id, \"\");\n    i0.ɵɵpropertyInterpolate1(\"name\", \"drone_\", file_r39.id, \"\");\n    i0.ɵɵproperty(\"ngModel\", ctx_r38.drone);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"for\", \"pilot_\", file_r39.id, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"pilot_\", file_r39.id, \"\");\n    i0.ɵɵpropertyInterpolate1(\"name\", \"pilot_\", file_r39.id, \"\");\n    i0.ɵɵproperty(\"ngModel\", ctx_r38.pilot);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"for\", \"date_\", file_r39.id, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"date_\", file_r39.id, \"\");\n    i0.ɵɵpropertyInterpolate1(\"name\", \"date_\", file_r39.id, \"\");\n    i0.ɵɵproperty(\"ngModel\", ctx_r38.date);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"for\", \"alt_\", file_r39.id, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"alt_\", file_r39.id, \"\");\n    i0.ɵɵpropertyInterpolate1(\"name\", \"alt_\", file_r39.id, \"\");\n    i0.ɵɵproperty(\"ngModel\", ctx_r38.alt);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"for\", \"auto_\", file_r39.id, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"auto_\", file_r39.id, \"\");\n    i0.ɵɵpropertyInterpolate1(\"name\", \"auto_\", file_r39.id, \"\");\n    i0.ɵɵproperty(\"ngModel\", ctx_r38.auto);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"for\", \"lat_\", file_r39.id, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"lat_\", file_r39.id, \"\");\n    i0.ɵɵpropertyInterpolate1(\"name\", \"lat_\", file_r39.id, \"\");\n    i0.ɵɵproperty(\"ngModel\", ctx_r38.lat);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"for\", \"lon_\", file_r39.id, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"lon_\", file_r39.id, \"\");\n    i0.ɵɵpropertyInterpolate1(\"name\", \"lon_\", file_r39.id, \"\");\n    i0.ɵɵproperty(\"ngModel\", ctx_r38.lon);\n  }\n}\n\nfunction UploadComponent_div_2_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r52 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"form\", 27, 28);\n    i0.ɵɵlistener(\"ngSubmit\", function UploadComponent_div_2_ng_template_7_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r52);\n      const ctx_r51 = i0.ɵɵnextContext(2);\n      return ctx_r51.submitMeta(ctx_r51.FileInfos, ctx_r51.sameVars);\n    });\n    i0.ɵɵtemplate(2, UploadComponent_div_2_ng_template_7_div_2_Template, 49, 41, \"div\", 29);\n    i0.ɵɵelementStart(3, \"button\", 30);\n    i0.ɵɵtext(4, \"Submit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 31);\n    i0.ɵɵlistener(\"click\", function UploadComponent_div_2_ng_template_7_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r52);\n\n      const _r37 = i0.ɵɵreference(1);\n\n      return _r37.reset();\n    });\n    i0.ɵɵtext(6, \"Reset\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r37 = i0.ɵɵreference(1);\n\n    const ctx_r19 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r19.FileInfos);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", !_r37.form.valid);\n  }\n}\n\nfunction UploadComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r55 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵelementStart(1, \"h1\", 22);\n    i0.ɵɵtext(2, \" Enter Metadata Information \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"label\", 23);\n    i0.ɵɵtext(4, \" Use same metadata for all images: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"input\", 24);\n    i0.ɵɵlistener(\"ngModelChange\", function UploadComponent_div_2_Template_input_ngModelChange_5_listener($event) {\n      i0.ɵɵrestoreView(_r55);\n      const ctx_r54 = i0.ɵɵnextContext();\n      return ctx_r54.sameVars = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, UploadComponent_div_2_div_6_Template, 8, 2, \"div\", 25);\n    i0.ɵɵtemplate(7, UploadComponent_div_2_ng_template_7_Template, 7, 2, \"ng-template\", null, 26, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r18 = i0.ɵɵreference(8);\n\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.sameVars);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.sameVars)(\"ngIfElse\", _r18);\n  }\n}\n\nfunction UploadComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 53);\n    i0.ɵɵelementStart(1, \"form\");\n    i0.ɵɵelementStart(2, \"label\", 54);\n    i0.ɵɵtext(3, \" Select Contract: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"select\", 55);\n    i0.ɵɵelementStart(5, \"option\", 56);\n    i0.ɵɵtext(6, \"NFT Tokens with no metdata\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"option\", 57);\n    i0.ɵɵtext(8, \"NFT Tokens with IPFS metadata\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"option\", 58);\n    i0.ɵɵtext(10, \"Non Transferrable NFT Tokens with no metadata\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"option\", 59);\n    i0.ɵɵtext(12, \"Non Transferrable NFT Tokens with IPFS metadata\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n} //test for cat method\n\n\nconst {\n  toString: uint8ArrayToString\n} = require('uint8arrays/to-string');\n\nexport class UploadComponent {\n  IPFSService;\n  selectedFiles; //files selected by user with file broswer\n\n  msg; // holds message associated with upload\n\n  FileInfos = []; // list of all files uploaded\n\n  reUploads = []; // files in selected files that are already uploaded\n\n  ipfsid = null; //metadata form\n\n  showform = false;\n  showcontracts = false; //use these if user selects set all forms same option\n\n  metaname;\n  metades;\n  drone;\n  pilot;\n  date;\n  alt;\n  auto;\n  lat;\n  lon;\n  sameVars = false;\n\n  constructor(IPFSService) {\n    this.IPFSService = IPFSService;\n  }\n\n  ngOnInit() {\n    this.start();\n  }\n\n  start() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const id = yield _this.IPFSService.getId();\n      _this.ipfsid = id.id;\n\n      if (_this.ipfsid == null) {\n        console.log(\"IPFS start up FAILED\");\n      }\n\n      const stat = yield _this.IPFSService.getStatus();\n      console.log(stat);\n      /*  To check if node is connected to peers (sharing files)\n        const peerInfos = await this.IPFSService.getPeers();\n        const peers = await this.IPFSService.getPeers();\n        console.log(peers);\n               peerInfos.forEach(info => {\n          console.log(info.id)\n          info.addrs.forEach(addr => console.log(addr.toString()))\n        })*/\n    })();\n  } //on click of choose files button\n\n\n  onChange(event) {\n    this.selectedFiles = event.target.files;\n  } //on click of upload button\n\n\n  onClick() {\n    this.msg = \"\";\n    this.reUploads = [];\n\n    if (this.selectedFiles && this.selectedFiles[0]) {\n      //if user has selected a file\n      const numOfFiles = this.selectedFiles.length; //gets length of selected files list\n\n      for (let i = 0; i < numOfFiles; i++) {\n        //for files selected\n        let name = this.selectedFiles[i].name;\n        let file = this.selectedFiles[i];\n        let match = false;\n\n        for (var t in this.FileInfos) {\n          //check if file has already been uploaded\n          if (this.FileInfos[t].name == name) {\n            match = true;\n          }\n        }\n\n        if (match) {\n          this.reUploads.push(name);\n          continue; //skip to next iteration\n        }\n\n        const reader = new FileReader();\n        reader.readAsDataURL(this.selectedFiles[i]); //read file content\n\n        reader.onload = event => {\n          var image = reader.result;\n\n          if (image) {\n            let imageInfo = {\n              id: i,\n              name: name,\n              url: image,\n              blob: file,\n              imghash: null,\n              mname: null,\n              desc: null,\n              drone: null,\n              pilot: null,\n              date: null,\n              alt: null,\n              auto: null,\n              lat: null,\n              lon: null,\n              metaHash: null\n            };\n            this.FileInfos.push(imageInfo);\n            this.msg = \"Success\"; //sort alphabetically by name\n\n            const sorted = this.FileInfos.sort((t1, t2) => {\n              const name1 = t1.name.toLowerCase();\n              const name2 = t2.name.toLowerCase();\n\n              if (name1 > name2) {\n                return 1;\n              }\n\n              if (name1 < name2) {\n                return -1;\n              }\n\n              return 0;\n            });\n          } else {\n            //FileReader returned no url\n            console.log(\"FAIL: File could not be read\");\n            this.msg = \"Fail\";\n          }\n        }; //end onload event\n\n      } //end for\n\n    } //end if\n\n  } // end onClick()\n  //file remove button\n\n\n  onRemove(imageObj) {\n    this.msg = \"\";\n    var index = this.FileInfos.indexOf(imageObj);\n    this.FileInfos.splice(index, 1);\n  } //ipfs upload function\n\n\n  ipfsUpload() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      _this2.showform = true;\n\n      if (_this2.FileInfos && _this2.FileInfos[0]) {\n        //if user has selected a file\n        const len = _this2.FileInfos.length;\n\n        for (let i = 0; i < len; i++) {\n          _this2.FileInfos[i].imghash = yield _this2.IPFSService.addFile(_this2.FileInfos[i].blob);\n          console.log(\"FILE ADDED. Name: \" + _this2.FileInfos[i].name + \"Hash: \" + _this2.FileInfos[i].imghash);\n        }\n      }\n    })();\n  } //submit metadata form and convert to JSON form\n\n\n  submitMeta(files, linked) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      if (linked) {\n        for (let i = 0; i < files.length; i++) {\n          let data = {\n            name: _this3.metaname,\n            description: _this3.metades,\n            image: \"ipfs://\" + files[i].imghash,\n            ...(_this3.drone != null && {\n              dronetype: _this3.drone\n            }),\n            ...(_this3.pilot && {\n              pilotname: _this3.pilot\n            }),\n            ...(_this3.date != null && {\n              date: _this3.date\n            }),\n            ...(_this3.alt != null && {\n              altitude: _this3.alt\n            }),\n            ...(_this3.auto && {\n              capturedautonomously: _this3.auto\n            }),\n            ...(_this3.lat != null && {\n              latitude: _this3.lat\n            }),\n            ...(_this3.lon != null && {\n              longitude: _this3.lon\n            })\n          };\n          let jsonObj = JSON.stringify(data);\n          console.log(\"JSON metadata: \", jsonObj); //Check if ipfs:// or gateway needs added here\n          // check which one is used as contract tokenURI\n\n          files[i].metaHash = yield _this3.IPFSService.addFile(jsonObj);\n          console.log(\"Metadata uploaded, Hash: \", files[i].metaHash);\n          let filefound = yield _this3.IPFSService.getFile(files[i].metaHash);\n          console.log(\"file retrieved as: \", uint8ArrayToString(filefound));\n        }\n      } else {\n        for (let i = 0; i < files.length; i++) {\n          let data = {\n            name: files[i].mname,\n            description: files[i].desc,\n            image: \"ipfs://\" + files[i].imghash,\n            ...(files[i].drone != null && {\n              dronetype: files[i].drone\n            }),\n            ...(files[i].pilot != null && {\n              pilotname: files[i].pilot\n            }),\n            ...(files[i].date != null && {\n              date: files[i].date\n            }),\n            ...(files[i].alt != null && {\n              altitude: files[i].alt\n            }),\n            ...(files[i].auto && {\n              capturedautonomously: files[i].auto\n            }),\n            ...(files[i].lat != null && {\n              latitude: files[i].lat\n            }),\n            ...(files[i].lon != null && {\n              longitude: files[i].lon\n            })\n          };\n          let jsonObj = JSON.stringify(data);\n          console.log(\"JSON metadata: \", jsonObj);\n          console.log(\"Obj type: \", typeof jsonObj);\n          files[i].metaHash = yield _this3.IPFSService.addFile(jsonObj);\n          console.log(\"Metadata uploaded, Hash: \", files[i].metaHash);\n          let found = yield _this3.IPFSService.getFile(files[i].metaHash);\n          console.log(\"file retrieved as: \", found);\n        }\n      } // end else\n      //investigate wrapping ipfs files in directory\n\n\n      _this3.showcontracts = true;\n    })();\n  } //display the contracts selections if user pressed submit on ipfs form\n  //or did not use metadata\n\n\n  showContracts() {\n    this.showcontracts = true;\n  }\n\n  static ɵfac = function UploadComponent_Factory(t) {\n    return new (t || UploadComponent)(i0.ɵɵdirectiveInject(i1.IpfsService));\n  };\n  static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UploadComponent,\n    selectors: [[\"app-upload\"]],\n    decls: 4,\n    vars: 4,\n    consts: [[\"class\", \"all\", 4, \"ngIf\"], [\"class\", \"ipfs\", 4, \"ngIf\"], [\"class\", \"formcontainer\", 4, \"ngIf\"], [\"class\", \"contract\", 4, \"ngIf\"], [1, \"all\"], [1, \"upload\"], [\"type\", \"file\", \"multiple\", \"multiple\", \"accept\", \"image/*\", 1, \"form-controlfile\", 3, \"change\"], [1, \"successbtn\", 3, \"click\"], [\"class\", \"uploadSuccess\", 4, \"ngIf\"], [\"class\", \"preview\", 4, \"ngIf\"], [1, \"uploadSuccess\"], [1, \"preview\"], [\"class\", \"file-list\", 4, \"ngFor\", \"ngForOf\"], [1, \"file-list\"], [\"height\", \"50px\", \"width\", \"50px\", 3, \"src\"], [1, \"name\"], [1, \"removebtn\", 3, \"click\"], [1, \"ipfs\"], [1, \"ipfsTitle\"], [1, \"ipfsbtn\", 3, \"click\"], [1, \"noipfsbtns\", 3, \"click\"], [1, \"formcontainer\"], [1, \"metatitle\"], [\"for\", \"sameVars\"], [\"type\", \"checkbox\", \"name\", \"sameVars\", 3, \"ngModel\", \"ngModelChange\"], [4, \"ngIf\", \"ngIfElse\"], [\"linked\", \"\"], [3, \"ngSubmit\"], [\"metaForm\", \"ngForm\"], [\"class\", \"innerform\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 1, \"btn-form\", 3, \"disabled\"], [\"type\", \"button\", 1, \"btnresetform\", 3, \"click\"], [1, \"innerform\"], [\"height\", \"50px\", \"width\", \"50px\", 1, \"formimg\", 3, \"src\"], [1, \"filename\"], [1, \"form-group\"], [3, \"for\"], [\"type\", \"text\", 1, \"namefield\", 3, \"id\", \"ngModel\", \"name\", \"ngModelChange\"], [\"type\", \"text\", 1, \"desfield\", 3, \"id\", \"ngModel\", \"name\", \"ngModelChange\"], [1, \"image-group\"], [\"type\", \"text\", \"disabled\", \"\", 1, \"imagefield\", 3, \"name\", \"value\"], [1, \"panel\"], [1, \"panelheader\"], [1, \"drone-group\"], [\"type\", \"text\", 1, \"dronefield\", 3, \"id\", \"ngModel\", \"name\", \"ngModelChange\"], [1, \"pilot-group\"], [\"type\", \"text\", 1, \"pilotfield\", 3, \"id\", \"ngModel\", \"name\", \"ngModelChange\"], [\"type\", \"date\", 1, \"datefield\", 3, \"id\", \"ngModel\", \"name\", \"ngModelChange\"], [\"type\", \"number\", 1, \"altfield\", 3, \"id\", \"ngModel\", \"name\", \"ngModelChange\"], [\"type\", \"checkbox\", 1, \"autofield\", 3, \"id\", \"ngModel\", \"name\", \"ngModelChange\"], [\"type\", \"number\", 1, \"latfield\", 3, \"id\", \"ngModel\", \"name\", \"ngModelChange\"], [\"type\", \"number\", 1, \"lonfield\", 3, \"id\", \"ngModel\", \"name\", \"ngModelChange\"], [\"height\", \"30px\", \"width\", \"30px\", 3, \"src\"], [1, \"contract\"], [\"for\", \"contract\"], [\"name\", \"contract\", \"id\", \"contract\"], [\"value\", \"BasicNFT\"], [\"value\", \"IPFSNFT\"], [\"value\", \"nonTransferbasicNFT\"], [\"value\", \"noTransferIPFSNFT\"]],\n    template: function UploadComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, UploadComponent_div_0_Template, 9, 2, \"div\", 0);\n        i0.ɵɵtemplate(1, UploadComponent_div_1_Template, 7, 0, \"div\", 1);\n        i0.ɵɵtemplate(2, UploadComponent_div_2_Template, 9, 3, \"div\", 2);\n        i0.ɵɵtemplate(3, UploadComponent_div_3_Template, 13, 0, \"div\", 3);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.showform == false);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.FileInfos[0] && ctx.showform == false);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showform == true && ctx.showcontracts == false);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showcontracts);\n      }\n    },\n    directives: [i2.NgIf, i2.NgForOf, i3.CheckboxControlValueAccessor, i3.NgControlStatus, i3.NgModel, i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.NgForm, i3.DefaultValueAccessor, i4.MatExpansionPanel, i4.MatExpansionPanelHeader, i4.MatExpansionPanelTitle, i3.NumberValueAccessor, i3.NgSelectOption, i3.ɵNgSelectMultipleOption],\n    styles: [\".upload[_ngcontent-%COMP%] {\\n  background-color: whitesmoke;\\n  width: 450px;\\n  border: 2px solid lightgrey;\\n  border-radius: 4px;\\n  padding: 10px;\\n  position: absolute;\\n  top: 150px;\\n  left: 100px;\\n}\\nh1[_ngcontent-%COMP%] {\\n  color: black;\\n  font-family: 'Lato', sans-serif;\\n  font-size: 150%;\\n}\\n.form-controlfile[_ngcontent-%COMP%] {\\n  width: 300px;\\n  background-color: white;\\n  border: 1px solid black;\\n  border-radius: 4px;\\n  padding: 5px\\n}\\n.successbtn[_ngcontent-%COMP%] {\\n  font-size: 0.875rem;\\n  width: 75px;\\n  border: 2px solid #2196F3;\\n  color: #2196F3;\\n  background-color: whitesmoke;\\n  border-radius: 3px;\\n  padding: 5px;\\n  vertical-align: middle;\\n  position: relative;\\n  left: 3px;\\n }\\n.btn-btn-success[_ngcontent-%COMP%]:hover {\\n  background-color: #2196F3;\\n  color: white;\\n  border-color: #2196F3;\\n}\\nh2[_ngcontent-%COMP%] {\\n  color: black;\\n  font-family: 'Lato', sans-serif;\\n  font-size: 100%;\\n  width: 470px;\\n  position: relative;\\n  left: 5px;\\n}\\n.preview[_ngcontent-%COMP%] {\\n  background-color: whitesmoke;\\n  width: 450px;\\n  border: 2px solid lightgrey;\\n  border-radius: 4px;\\n  padding: 10px;\\n  position: relative;\\n  top: 225px;\\n  left: 95px;\\n}\\nhr[_ngcontent-%COMP%] {\\n  border-top: 2px solid #ddd;\\n}\\n.file-list[_ngcontent-%COMP%] {\\n  position: relative;\\n  right: 10px;\\n  width: 470px;\\n  text-align: left;\\n}\\nimg[_ngcontent-%COMP%] {\\n  border: 1px solid #ddd;\\n  border-radius: 4px;\\n  padding: 5px;\\n  margin-left: 5px;\\n}\\n.name[_ngcontent-%COMP%] {\\n  text-align: center;\\n  position: relative;\\n  top: -25px;\\n}\\n.removebtn[_ngcontent-%COMP%] {\\n  background-color: red;\\n  color: white;\\n  padding: 5px;\\n  border: 2px solid red;\\n  border-color: red;\\n  font-size: 0.875rem;\\n  margin-left: 10px;\\n  position: absolute;\\n  left: 400px;\\n  top: 25px;\\n}\\n.uploadSuccess[_ngcontent-%COMP%] {\\n  margin-top: 5px;\\n  padding-top: 5px;\\n  height: 20px;\\n  width: 200px;\\n  border: 2px solid green;\\n  font-size: 12px;\\n  text-align: center;\\n  vertical-align: center;\\n  color: darkgreen;\\n  background: rgba(0, 128, 0, 0.2);\\n}\\n\\n.ipfs[_ngcontent-%COMP%] {\\n  text-align: left;\\n  background-color: whitesmoke;\\n  \\n  width: 450px;\\n  border: 2px solid lightgrey;\\n  border-radius: 4px;\\n  padding: 10px;\\n  position: absolute;\\n  left: 800px;\\n  top: 150px;\\n}\\n.ipfsbtn[_ngcontent-%COMP%] {\\n  font-size: 0.875rem;\\n  width: 75px;\\n  border: 2px solid #2196F3;\\n  color: #2196F3;\\n  background-color: whitesmoke;\\n  border-radius: 3px;\\n  padding: 5px;\\n  vertical-align: middle;\\n  position: relative;\\n  left: 130px;\\n }\\n.ipfsbtn[_ngcontent-%COMP%]:hover {\\n  background-color: #2196F3;\\n  color: white;\\n  border-color: #2196F3;\\n}\\n.noipfsbtns[_ngcontent-%COMP%] {\\n  font-size: 0.875rem;\\n  width: 75px;\\n  border: 2px solid red;\\n  color: red;\\n  background-color: whitesmoke;\\n  border-radius: 3px;\\n  padding: 5px;\\n  vertical-align: middle;\\n  position: relative;\\n  left: 135px;\\n }\\n.noipfsbtns[_ngcontent-%COMP%]:hover {\\n  background-color: red;\\n  color: white;\\n  border-color: red;\\n}\\n\\n.formcontainer[_ngcontent-%COMP%] {\\n  background-color: whitesmoke;\\n  width: 440px;\\n  border: 2px solid lightgrey;\\n  border-radius: 4px;\\n  padding-left: 5px;\\n  padding-right: 5px;\\n  padding-bottom: 10px;\\n  position: absolute;\\n  top: 125px;\\n  left: 100px;\\n}\\n.filename[_ngcontent-%COMP%] {\\n  color: black;\\n  font-family: 'Lato', sans-serif;\\n  font-size: 100%;\\n  display: inline-block;\\n  position: absolute;\\n  padding-left: 3px;\\n}\\n.formimg[_ngcontent-%COMP%] {\\n  border: 1px solid #ddd;\\n  border-radius: 4px;\\n  padding: 5px;\\n  margin-left: 5px;\\n}\\n.innerform[_ngcontent-%COMP%] {\\n\\n  padding-bottom: 10px;\\n}\\nlabel[_ngcontent-%COMP%] {\\n  display: block;\\n  padding-right: 20px;\\n}\\n.imagefield[_ngcontent-%COMP%] {\\n  width: 375px;\\n  background-color: white;\\n  border: 1px solid grey;\\n}\\n.desfield[_ngcontent-%COMP%], .namefield[_ngcontent-%COMP%] {\\n  width: 375px;\\n}\\n.image-group[_ngcontent-%COMP%] {\\n  padding-bottom: 10px;\\n}\\n.panel[_ngcontent-%COMP%] {\\n  background-color: whitesmoke;\\n  width: 375px;\\n}\\n.btnresetform[_ngcontent-%COMP%]{\\n  font-size: 0.875rem;\\n  width: 75px;\\n  border: 2px solid red;\\n  color: red;\\n  background-color: whitesmoke;\\n  border-radius: 3px;\\n  padding: 5px;\\n  vertical-align: middle;\\n  position: relative;\\n  left: 125px;\\n}\\n.btnresetform[_ngcontent-%COMP%]:hover {\\n  background-color: red;\\n  color: white;\\n  border-color: red;\\n}\\n.btn-form[_ngcontent-%COMP%] {\\n  font-size: 0.875rem;\\n  width: 75px;\\n  border: 2px solid #2196F3;\\n  color: #2196F3;\\n  background-color: whitesmoke;\\n  border-radius: 3px;\\n  padding: 5px;\\n  vertical-align: middle;\\n  position: relative;\\n  left: 100px;\\n }\\n.btn-form[_ngcontent-%COMP%]:hover {\\n  background-color: #2196F3;\\n  color: white;\\n  border-color: #2196F3;\\n}\\n\\n.contract[_ngcontent-%COMP%] {\\n  background-color: whitesmoke;\\n  width: 450px;\\n  border: 2px solid lightgrey;\\n  border-radius: 4px;\\n  padding: 10px;\\n  position: absolute;\\n  top: 150px;\\n  left: 100px;\\n}\\n/*# sourceMappingURL=data:application/json;base64, */\"]\n  });\n}","map":{"version":3,"sources":["/Users/sydneybailey/Internship/Dapp/src/app/upload/upload.component.ts","/Users/sydneybailey/Internship/Dapp/src/app/upload/upload.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { IpfsService } from \"../ipfs.service\";\nimport { NgForm } from '@angular/forms'\n//test for cat method\nconst { toString: uint8ArrayToString } = require('uint8arrays/to-string');\n\n@Component({\n  selector: 'app-upload',\n  templateUrl: './upload.component.html',\n  styleUrls: ['./upload.component.css']\n})\nexport class UploadComponent implements OnInit {\n  selectedFiles?: FileList;         //files selected by user with file broswer\n  msg?: string;                    // holds message associated with upload\n  FileInfos: any[] = [];          // list of all files uploaded\n  reUploads: string[] = [];      // files in selected files that are already uploaded\n  ipfsid: string | null = null;\n  //metadata form\n  showform: boolean = false;\n  showcontracts: boolean = false;\n  //use these if user selects set all forms same option\n  metaname?: string;\n  metades?: string;\n  drone?: string;\n  pilot?: string;\n  date?: any;\n  alt?: number;\n  auto?: boolean;\n  lat?: number;\n  lon?: number;\n\n  sameVars: boolean = false;\n\n  constructor(private IPFSService: IpfsService) { }\n\n  ngOnInit(): void {\n    this.start();\n  }\n\n  async start() {\n    const id = await this.IPFSService.getId();\n    this.ipfsid = id.id;\n    if(this.ipfsid == null){\n      console.log(\"IPFS start up FAILED\");\n    }\n    const stat = await this.IPFSService.getStatus();\n    console.log(stat);\n\n  /*  To check if node is connected to peers (sharing files)\n    const peerInfos = await this.IPFSService.getPeers();\n    const peers = await this.IPFSService.getPeers();\n    console.log(peers);\n\n    peerInfos.forEach(info => {\n      console.log(info.id)\n      info.addrs.forEach(addr => console.log(addr.toString()))\n    })*/\n  }\n\n  //on click of choose files button\n  onChange(event: any) {\n    this.selectedFiles = event.target.files;\n  }\n  //on click of upload button\n  onClick() {\n    this.msg = \"\";\n    this.reUploads = [];\n    if(this.selectedFiles && this.selectedFiles[0]) { //if user has selected a file\n      const numOfFiles = this.selectedFiles.length;  //gets length of selected files list\n\n      for (let i = 0; i < numOfFiles; i++) { //for files selected\n        let name = this.selectedFiles[i].name;\n        let file = this.selectedFiles[i];\n        let match = false;\n        for (var t in this.FileInfos) {  //check if file has already been uploaded\n            if (this.FileInfos[t].name == name) {\n              match = true;\n            }\n          }\n\n      if(match){\n        this.reUploads.push(name);\n        continue;  //skip to next iteration\n      }\n\n      const reader = new FileReader();\n      reader.readAsDataURL(this.selectedFiles[i]); //read file content\n      reader.onload = (event) => {                //when image is loaded\n        var image = reader.result as string;\n        if(image){\n          let imageInfo = {\n            id: i,\n            name: name,\n            url: image,\n            blob: file,\n            imghash: null,\n            mname: null,\n            desc: null,\n            drone: null,\n            pilot: null,\n            date: null,\n            alt: null,\n            auto: null,\n            lat: null,\n            lon: null,\n            metaHash: null\n          };\n          this.FileInfos.push(imageInfo);\n          this.msg = \"Success\";\n\n          //sort alphabetically by name\n          const sorted = this.FileInfos.sort((t1, t2) => {\n          const name1 = t1.name.toLowerCase();\n          const name2 = t2.name.toLowerCase();\n          if (name1 > name2) { return 1; }\n          if (name1 < name2) { return -1; }\n          return 0;\n        })\n      } else { //FileReader returned no url\n          console.log(\"FAIL: File could not be read\");\n          this.msg = \"Fail\";\n          }\n        }; //end onload event\n      } //end for\n    } //end if\n  } // end onClick()\n\n  //file remove button\n  onRemove(imageObj: any) {\n    this.msg = \"\";\n    var index = this.FileInfos.indexOf(imageObj);\n    this.FileInfos.splice(index,1);\n  }\n  //ipfs upload function\n  async ipfsUpload() {\n    this.showform = true;\n    if(this.FileInfos && this.FileInfos[0]) { //if user has selected a file\n      const len = this.FileInfos.length;\n      for(let i = 0; i < len; i++){\n        this.FileInfos[i].imghash = await this.IPFSService.addFile(this.FileInfos[i].blob);\n        console.log(\"FILE ADDED. Name: \" + this.FileInfos[i].name + \"Hash: \" + this.FileInfos[i].imghash);\n      }\n    }\n  }\n\n  //submit metadata form and convert to JSON form\n  async submitMeta(files: any[], linked: boolean) {\n    if(linked){\n      for(let i=0; i<files.length; i++){\n        let data = {\n          name: this.metaname,\n          description: this.metades,\n          image: \"ipfs://\" + files[i].imghash,\n          ...(this.drone != null && {dronetype: this.drone}),\n          ...(this.pilot&& {pilotname: this.pilot}),\n          ...(this.date != null && {date: this.date}),\n          ...(this.alt != null && {altitude: this.alt}),\n          ...(this.auto && {capturedautonomously: this.auto}),\n          ...(this.lat != null && {latitude: this.lat}),\n          ...(this.lon != null && {longitude: this.lon})\n        }\n        let jsonObj = JSON.stringify(data);\n        console.log(\"JSON metadata: \", jsonObj);\n        //Check if ipfs:// or gateway needs added here\n        // check which one is used as contract tokenURI\n        files[i].metaHash = await this.IPFSService.addFile(jsonObj);\n        console.log(\"Metadata uploaded, Hash: \", files[i].metaHash);\n        let filefound = await this.IPFSService.getFile(files[i].metaHash);\n        console.log(\"file retrieved as: \", uint8ArrayToString(filefound);\n      }\n    }else {\n      for(let i=0; i<files.length; i++){\n        let data = {\n          name: files[i].mname,\n          description: files[i].desc,\n          image: \"ipfs://\" + files[i].imghash,\n          ...(files[i].drone != null && {dronetype: files[i].drone}),\n          ...(files[i].pilot != null && {pilotname: files[i].pilot}),\n          ...(files[i].date != null && {date: files[i].date}),\n          ...(files[i].alt != null && {altitude: files[i].alt}),\n          ...(files[i].auto && {capturedautonomously: files[i].auto}),\n          ...(files[i].lat != null && {latitude: files[i].lat}),\n          ...(files[i].lon != null && {longitude: files[i].lon})\n        }\n        let jsonObj = JSON.stringify(data);\n        console.log(\"JSON metadata: \", jsonObj);\n        console.log(\"Obj type: \", typeof jsonObj);\n        files[i].metaHash = await this.IPFSService.addFile(jsonObj);\n        console.log(\"Metadata uploaded, Hash: \", files[i].metaHash);\n        let found = await this.IPFSService.getFile(files[i].metaHash);\n        console.log(\"file retrieved as: \", found);\n      }\n    } // end else\n    //investigate wrapping ipfs files in directory\n\n    this.showcontracts = true;\n  }\n\n  //display the contracts selections if user pressed submit on ipfs form\n  //or did not use metadata\n  showContracts() {\n    this.showcontracts = true;\n  }\n\n}\n","<!-- UPLOADING FILES -->\n<div *ngIf=\"showform == false\" class=\"all\">\n<div class=\"upload\">\n\t<h1> Upload Imagery</h1>\n\t<input class=\"form-controlfile\" type=\"file\" multiple= \"multiple\" accept=\"image/*\"\n\t\t(change)=\"onChange($event)\">\n\t<button (click)=\"onClick()\" class=\"successbtn\">\n\t\tUpload\n\t</button>\n\t<div class=\"uploadSuccess\" *ngIf=\"msg==='Success'\">\n\t\t\tUpload Successful\n\t</div>\n</div>\n\n<div class=\"preview\" *ngIf=\"FileInfos[0]\">\n\t<h2> Uploaded Files </h2>\n\t<div class=\"file-list\" *ngFor=\"let file of FileInfos; index as i\">\n\t\t<hr>\n\t\t<img [src]=\"file.url\" height=\"50px\" width=\"50px\">\n\t\t<span class=\"name\"> {{file.name}} </span>\n\t\t<button class=\"removebtn\" (click)=\"onRemove(file)\"> X </button>\n\t</div>\n</div>\n</div>\n\n<!-- Ask if user wants to use IPFS-->\n<div class=\"ipfs\" *ngIf=\"FileInfos[0] && showform==false\">\n\t<h1 class=\"ipfsTitle\">Upload images with IPFS metadata?:</h1>\n\t<button (click)=\"ipfsUpload()\" class=\"ipfsbtn\"> Yes </button>\n\t<button class=\"noipfsbtns\" (click)=\"showContracts()\"> No </button>\n</div>\n\n<!-- METADATA FORMS -->\n<!-- checkbox to sync with previous = all forms are the same-->\n<!-- show extra metadata is possible -> put in platform: type of drone that was flying-->\n<!-- pilot name, date (date field not string), altitude (number), autonomous (boolean), lat/long (decimal)-->\n<div class=\"formcontainer\" *ngIf=\"showform==true && showcontracts==false\">\n\t<h1 class=\"metatitle\"> Enter Metadata Information </h1>\n\n\t<label for=\"sameVars\"> Use same metadata for all images: </label>\n\t<input type=\"checkbox\" [(ngModel)]=\"sameVars\" name=\"sameVars\">\n\n\t<div *ngIf=\"!sameVars; else linked\"> <!--use non linked form -->\n\t<form #metaForm=\"ngForm\" (ngSubmit)=\"submitMeta(FileInfos, sameVars)\">\n\t\t<div class=\"innerform\" *ngFor=\"let file of FileInfos; index as i\">\n\t\t<hr>\n\t\t\t<img [src]=\"file.url\" class=\"formimg\" height=\"50px\" width=\"50px\">\n\t\t\t<p class=\"filename\"> {{ file.name }} </p>\n\n\t\t\t\t<div class=\"form-group\">\n  \t\t\t\t<label for=\"metaname_{{file.id}}\">Name:</label>\n  \t\t\t<input type=\"text\" class=\"namefield\" id=\"metaname_{{file.id}}\"\n\t\t\t\t\t\t\t\t[(ngModel)]=\"file.mname\" name=\"name_{{file.id}}\">\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"form-group\">\n  \t\t\t\t<label for=\"metades_{{file.id}}\">Description:</label>\n  \t\t\t\t<input type=\"text\" class=\"desfield\" id=\"metades_{{file.id}}\"\n\t\t\t\t\t\t\t\t [(ngModel)]=\"file.desc\" name=\"description_{{file.id}}\">\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"image-group\">\n\t\t\t\t\t<label for=\"hash_{{file.id}}\"> Image:</label>\n\t\t\t\t\t<input type=\"text\" class=\"imagefield\" name=\"image_{{file.id}}\"\n\t\t\t\t\t\t\t\tvalue=\"{{file.imghash}}\" disabled>\n\t\t\t\t</div>\n\n\t\t\t\t<mat-expansion-panel class=\"panel\">\n    \t\t\t<mat-expansion-panel-header class=\"panelheader\">\n\t\t\t\t\t\t<mat-panel-title>Show Additional Fields</mat-panel-title>\n    \t\t\t\t\t</mat-expansion-panel-header>\n\n\t\t\t\t\t\t<div class=\"drone-group\">\n\t\t\t  \t\t\t<label for=\"drone_{{file.id}}\">Drone Type:</label>\n\t\t\t  \t\t\t<input type=\"text\" class=\"dronefield\" id=\"drone_{{file.id}}\"\n\t\t\t\t\t\t\t\t\t\t[(ngModel)]=\"file.drone\" name=\"drone_{{file.id}}\">\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"pilot-group\">\n\t\t  \t\t\t\t<label for=\"pilot_{{file.id}}\">Pilot Name:</label>\n\t\t  \t\t\t\t<input type=\"text\" class=\"pilotfield\" id=\"pilot_{{file.id}}\"\n\t\t\t\t\t\t\t\t\t\t [(ngModel)]=\"file.pilot\" name=\"pilot_{{file.id}}\">\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"form-group\">\n\t\t  \t\t\t\t<label for=\"date_{{file.id}}\">Date Captured:</label>\n\t\t  \t\t\t\t<input type=\"date\" class=\"datefield\" id=\"date_{{file.id}}\"\n\t\t\t\t\t\t\t\t\t\t [(ngModel)]=\"file.date\" name=\"date_{{file.id}}\">\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"form-group\">\n\t\t  \t\t\t\t<label for=\"alt_{{file.id}}\">Altitude:</label>\n\t\t  \t\t\t\t<input type=\"number\" class=\"altfield\" id=\"alt_{{file.id}}\"\n\t\t\t\t\t\t\t\t\t\t [(ngModel)]=\"file.alt\" name=\"alt_{{file.id}}\">\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t\t<label for=\"auto_{{file.id}}\">Captured Autonomously:</label>\n\t\t\t\t\t\t\t<input type=\"checkbox\" class=\"autofield\" id=\"auto_{{file.id}}\"\n\t\t\t\t\t\t\t\t\t\t [(ngModel)]=\"file.auto\" name=\"auto_{{file.id}}\">\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t\t<label for=\"lat_{{file.id}}\">Latitude:</label>\n\t\t\t\t\t\t\t<input type=\"number\" class=\"latfield\" id=\"lat_{{file.id}}\"\n\t\t\t\t\t\t\t\t\t\t [(ngModel)]=\"file.lat\" name=\"lat_{{file.id}}\">\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t\t<label for=\"lon_{{file.id}}\">Longitude:</label>\n\t\t\t\t\t\t\t<input type=\"number\" class=\"lonfield\" id=\"lon_{{file.id}}\"\n\t\t\t\t\t\t\t\t\t\t [(ngModel)]=\"file.lon\" name=\"lon_{{file.id}}\">\n\t\t\t\t\t\t</div>\n\n  \t\t\t\t</mat-expansion-panel>\n\n\t\t\t\t</div>\n\n\t\t\t\t<button type=\"submit\" class=\"btn-form\" [disabled]=\"!metaForm.form.valid\">Submit</button>\n        <button type=\"button\" class=\"btnresetform\" (click)=\"metaForm.reset()\">Reset</button>\n\n\n\t\t\t</form>\n\t\t\t</div> <!--non-linked form -->\n\n\t\t\t<ng-template #linked> <!--linked form -->\n\t\t\t<form #metaForm=\"ngForm\" (ngSubmit)=\"submitMeta(FileInfos, sameVars)\">\n\t\t\t\t<div class=\"innerform\" *ngFor=\"let file of FileInfos; index as i\">\n\t\t\t\t<hr>\n\t\t\t\t\t<img [src]=\"file.url\" height=\"30px\" width=\"30px\">\n\t\t\t\t\t<p class=\"filename\"> Image: {{ file.name }} </p>\n\n\t\t\t\t\t\t<div class=\"form-group\">\n\t\t  \t\t\t\t<label for=\"metaname_{{file.id}}\">Name:</label>\n\t\t  \t\t\t<input type=\"text\" class=\"namefield\" id=\"metaname_{{file.id}}\"\n\t\t\t\t\t\t\t\t\t\t[(ngModel)]=\"metaname\" name=\"name_{{file.id}}\">\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"form-group\">\n\t\t  \t\t\t\t<label for=\"metades_{{file.id}}\">Description:</label>\n\t\t  \t\t\t\t<input type=\"text\" class=\"desfield\" id=\"metades_{{file.id}}\"\n\t\t\t\t\t\t\t\t\t\t [(ngModel)]=\"metades\" name=\"description_{{file.id}}\">\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"image-group\">\n\t\t\t\t\t\t\t<label for=\"hash_{{file.id}}\"> Image:</label>\n\t\t\t\t\t\t\t<input type=\"text\" class=\"imagefield\" name=\"image_{{file.id}}\"\n\t\t\t\t\t\t\t\t\t\tvalue=\"{{file.imghash}}\" disabled>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<mat-expansion-panel class=\"panel\">\n\t\t    \t\t\t<mat-expansion-panel-header class=\"panelheader\">\n\t\t\t\t\t\t\t\t<mat-panel-title>Show Additional Fields</mat-panel-title>\n\t\t    \t\t\t\t\t</mat-expansion-panel-header>\n\n\t\t\t\t\t\t\t\t<div class=\"drone-group\">\n\t\t\t\t\t\t  \t\t<label for=\"drone_{{file.id}}\">Drone Type:</label>\n\t\t\t\t\t\t  \t\t<input type=\"text\" class=\"dronefield\" id=\"drone_{{file.id}}\"\n\t\t\t\t\t\t\t\t\t\t\t\t[(ngModel)]=\"drone\" name=\"drone_{{file.id}}\">\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<div class=\"pilot-group\">\n\t\t\t\t  \t\t\t\t<label for=\"pilot_{{file.id}}\">Pilot Name:</label>\n\t\t\t\t  \t\t\t\t<input type=\"text\" class=\"pilotfield\" id=\"pilot_{{file.id}}\"\n\t\t\t\t\t\t\t\t\t\t\t\t [(ngModel)]=\"pilot\" name=\"pilot_{{file.id}}\">\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t  \t\t\t\t<label for=\"date_{{file.id}}\">Date Captured:</label>\n\t\t\t\t  \t\t\t\t<input type=\"date\" class=\"datefield\" id=\"date_{{file.id}}\"\n\t\t\t\t\t\t\t\t\t\t\t\t [(ngModel)]=\"date\" name=\"date_{{file.id}}\">\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t  \t\t\t\t<label for=\"alt_{{file.id}}\">Altitude:</label>\n\t\t\t\t  \t\t\t\t<input type=\"number\" class=\"altfield\" id=\"alt_{{file.id}}\"\n\t\t\t\t\t\t\t\t\t\t\t\t [(ngModel)]=\"alt\" name=\"alt_{{file.id}}\">\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t\t\t\t<label for=\"auto_{{file.id}}\">Captured Autonomously:</label>\n\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" class=\"autofield\" id=\"auto_{{file.id}}\"\n\t\t\t\t\t\t\t\t\t\t\t\t [(ngModel)]=\"auto\" name=\"auto_{{file.id}}\">\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t\t\t\t<label for=\"lat_{{file.id}}\">Latitude:</label>\n\t\t\t\t\t\t\t\t\t<input type=\"number\" class=\"latfield\" id=\"lat_{{file.id}}\"\n\t\t\t\t\t\t\t\t\t\t\t\t [(ngModel)]=\"lat\" name=\"lat_{{file.id}}\">\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t\t\t\t<label for=\"lon_{{file.id}}\">Longitude:</label>\n\t\t\t\t\t\t\t\t\t<input type=\"number\" class=\"lonfield\" id=\"lon_{{file.id}}\"\n\t\t\t\t\t\t\t\t\t\t\t\t [(ngModel)]=\"lon\" name=\"lon_{{file.id}}\">\n\t\t\t\t\t\t\t\t</div>\n\n\t\t  \t\t\t\t</mat-expansion-panel>\n\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<button type=\"submit\" class=\"btn-form\" [disabled]=\"!metaForm.form.valid\">Submit</button>\n\t\t        <button type=\"button\" class=\"btnresetform\" (click)=\"metaForm.reset()\">Reset</button>\n\n\n\t\t\t\t\t</form>\n\t\t\t\t\t</ng-template>\n\n\n</div>\n\n<!-- CONTRACTS SELECTION -->\n<div class=\"contract\" *ngIf=\"showcontracts\">\n\t<form>\n\t<!-- if user has entered ipfs data, display only ipfs contracts-->\n\t<!-- store which one they selected -->\n\t<label for=\"contract\"> Select Contract: </label>\n\t<select name=\"contract\" id=\"contract\">\n    <option value=\"BasicNFT\">NFT Tokens with no metdata</option>\n\t\t<option value=\"IPFSNFT\">NFT Tokens with IPFS metadata</option>\n\t\t<option value=\"nonTransferbasicNFT\">Non Transferrable NFT Tokens with no metadata</option>\n\t\t<option value=\"noTransferIPFSNFT\">Non Transferrable NFT Tokens with IPFS metadata</option>\n\t</select>\n\t</form>\n</div>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}