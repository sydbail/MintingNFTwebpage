{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"/Users/sydneybailey/Internship/Demo/node_modules/@babel/runtime/helpers/asyncToGenerator\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.asyncDefaultReportMessage = exports.defaultReportMessage = exports.asyncReportRunDetails = exports.reportRunDetails = void 0;\n\nconst stringify_1 = require(\"../../../utils/stringify\");\n\nconst VerbosityLevel_1 = require(\"../configuration/VerbosityLevel\");\n\nconst ExecutionStatus_1 = require(\"../reporter/ExecutionStatus\");\n\nfunction formatHints(hints) {\n  if (hints.length === 1) {\n    return `Hint: ${hints[0]}`;\n  }\n\n  return hints.map((h, idx) => `Hint (${idx + 1}): ${h}`).join('\\n');\n}\n\nfunction formatFailures(failures, stringifyOne) {\n  return `Encountered failures were:\\n- ${failures.map(stringifyOne).join('\\n- ')}`;\n}\n\nfunction formatExecutionSummary(executionTrees, stringifyOne) {\n  const summaryLines = [];\n  const remainingTreesAndDepth = [];\n\n  for (const tree of executionTrees.slice().reverse()) {\n    remainingTreesAndDepth.push({\n      depth: 1,\n      tree\n    });\n  }\n\n  while (remainingTreesAndDepth.length !== 0) {\n    const currentTreeAndDepth = remainingTreesAndDepth.pop();\n    const currentTree = currentTreeAndDepth.tree;\n    const currentDepth = currentTreeAndDepth.depth;\n    const statusIcon = currentTree.status === ExecutionStatus_1.ExecutionStatus.Success ? '\\x1b[32m\\u221A\\x1b[0m' : currentTree.status === ExecutionStatus_1.ExecutionStatus.Failure ? '\\x1b[31m\\xD7\\x1b[0m' : '\\x1b[33m!\\x1b[0m';\n    const leftPadding = Array(currentDepth).join('. ');\n    summaryLines.push(`${leftPadding}${statusIcon} ${stringifyOne(currentTree.value)}`);\n\n    for (const tree of currentTree.children.slice().reverse()) {\n      remainingTreesAndDepth.push({\n        depth: currentDepth + 1,\n        tree\n      });\n    }\n  }\n\n  return `Execution summary:\\n${summaryLines.join('\\n')}`;\n}\n\nfunction preFormatTooManySkipped(out, stringifyOne) {\n  const message = `Failed to run property, too many pre-condition failures encountered\\n{ seed: ${out.seed} }\\n\\nRan ${out.numRuns} time(s)\\nSkipped ${out.numSkips} time(s)`;\n  let details = null;\n  const hints = ['Try to reduce the number of rejected values by combining map, flatMap and built-in arbitraries', 'Increase failure tolerance by setting maxSkipsPerRun to an higher value'];\n\n  if (out.verbose >= VerbosityLevel_1.VerbosityLevel.VeryVerbose) {\n    details = formatExecutionSummary(out.executionSummary, stringifyOne);\n  } else {\n    hints.push('Enable verbose mode at level VeryVerbose in order to check all generated values and their associated status');\n  }\n\n  return {\n    message,\n    details,\n    hints\n  };\n}\n\nfunction preFormatFailure(out, stringifyOne) {\n  const message = `Property failed after ${out.numRuns} tests\\n{ seed: ${out.seed}, path: \"${out.counterexamplePath}\", endOnFailure: true }\\nCounterexample: ${stringifyOne(out.counterexample)}\\nShrunk ${out.numShrinks} time(s)\\nGot error: ${out.error}`;\n  let details = null;\n  const hints = [];\n\n  if (out.verbose >= VerbosityLevel_1.VerbosityLevel.VeryVerbose) {\n    details = formatExecutionSummary(out.executionSummary, stringifyOne);\n  } else if (out.verbose === VerbosityLevel_1.VerbosityLevel.Verbose) {\n    details = formatFailures(out.failures, stringifyOne);\n  } else {\n    hints.push('Enable verbose mode in order to have the list of all failing values encountered during the run');\n  }\n\n  return {\n    message,\n    details,\n    hints\n  };\n}\n\nfunction preFormatEarlyInterrupted(out, stringifyOne) {\n  const message = `Property interrupted after ${out.numRuns} tests\\n{ seed: ${out.seed} }`;\n  let details = null;\n  const hints = [];\n\n  if (out.verbose >= VerbosityLevel_1.VerbosityLevel.VeryVerbose) {\n    details = formatExecutionSummary(out.executionSummary, stringifyOne);\n  } else {\n    hints.push('Enable verbose mode at level VeryVerbose in order to check all generated values and their associated status');\n  }\n\n  return {\n    message,\n    details,\n    hints\n  };\n}\n\nfunction defaultReportMessageInternal(out, stringifyOne) {\n  if (!out.failed) return;\n  const {\n    message,\n    details,\n    hints\n  } = out.counterexamplePath === null ? out.interrupted ? preFormatEarlyInterrupted(out, stringifyOne) : preFormatTooManySkipped(out, stringifyOne) : preFormatFailure(out, stringifyOne);\n  let errorMessage = message;\n  if (details != null) errorMessage += `\\n\\n${details}`;\n  if (hints.length > 0) errorMessage += `\\n\\n${formatHints(hints)}`;\n  return errorMessage;\n}\n\nfunction defaultReportMessage(out) {\n  return defaultReportMessageInternal(out, stringify_1.stringify);\n}\n\nexports.defaultReportMessage = defaultReportMessage;\n\nfunction asyncDefaultReportMessage(_x) {\n  return _asyncDefaultReportMessage.apply(this, arguments);\n}\n\nfunction _asyncDefaultReportMessage() {\n  _asyncDefaultReportMessage = _asyncToGenerator(function* (out) {\n    const pendingStringifieds = [];\n\n    function stringifyOne(value) {\n      const stringified = stringify_1.possiblyAsyncStringify(value);\n\n      if (typeof stringified === 'string') {\n        return stringified;\n      }\n\n      pendingStringifieds.push(Promise.all([value, stringified]));\n      return '\\u2026';\n    }\n\n    const firstTryMessage = defaultReportMessageInternal(out, stringifyOne);\n\n    if (pendingStringifieds.length === 0) {\n      return firstTryMessage;\n    }\n\n    const registeredValues = new Map(yield Promise.all(pendingStringifieds));\n\n    function stringifySecond(value) {\n      const asyncStringifiedIfRegistered = registeredValues.get(value);\n\n      if (asyncStringifiedIfRegistered !== undefined) {\n        return asyncStringifiedIfRegistered;\n      }\n\n      return stringify_1.stringify(value);\n    }\n\n    return defaultReportMessageInternal(out, stringifySecond);\n  });\n  return _asyncDefaultReportMessage.apply(this, arguments);\n}\n\nexports.asyncDefaultReportMessage = asyncDefaultReportMessage;\n\nfunction throwIfFailed(out) {\n  if (!out.failed) return;\n  throw new Error(defaultReportMessage(out));\n}\n\nfunction asyncThrowIfFailed(_x2) {\n  return _asyncThrowIfFailed.apply(this, arguments);\n}\n\nfunction _asyncThrowIfFailed() {\n  _asyncThrowIfFailed = _asyncToGenerator(function* (out) {\n    if (!out.failed) return;\n    throw new Error(yield asyncDefaultReportMessage(out));\n  });\n  return _asyncThrowIfFailed.apply(this, arguments);\n}\n\nfunction reportRunDetails(out) {\n  if (out.runConfiguration.asyncReporter) return out.runConfiguration.asyncReporter(out);else if (out.runConfiguration.reporter) return out.runConfiguration.reporter(out);else return throwIfFailed(out);\n}\n\nexports.reportRunDetails = reportRunDetails;\n\nfunction asyncReportRunDetails(_x3) {\n  return _asyncReportRunDetails.apply(this, arguments);\n}\n\nfunction _asyncReportRunDetails() {\n  _asyncReportRunDetails = _asyncToGenerator(function* (out) {\n    if (out.runConfiguration.asyncReporter) return out.runConfiguration.asyncReporter(out);else if (out.runConfiguration.reporter) return out.runConfiguration.reporter(out);else return asyncThrowIfFailed(out);\n  });\n  return _asyncReportRunDetails.apply(this, arguments);\n}\n\nexports.asyncReportRunDetails = asyncReportRunDetails;","map":{"version":3,"sources":["/Users/sydneybailey/Internship/Demo/node_modules/fast-check/lib/check/runner/utils/RunDetailsFormatter.js"],"names":["Object","defineProperty","exports","value","asyncDefaultReportMessage","defaultReportMessage","asyncReportRunDetails","reportRunDetails","stringify_1","require","VerbosityLevel_1","ExecutionStatus_1","formatHints","hints","length","map","h","idx","join","formatFailures","failures","stringifyOne","formatExecutionSummary","executionTrees","summaryLines","remainingTreesAndDepth","tree","slice","reverse","push","depth","currentTreeAndDepth","pop","currentTree","currentDepth","statusIcon","status","ExecutionStatus","Success","Failure","leftPadding","Array","children","preFormatTooManySkipped","out","message","seed","numRuns","numSkips","details","verbose","VerbosityLevel","VeryVerbose","executionSummary","preFormatFailure","counterexamplePath","counterexample","numShrinks","error","Verbose","preFormatEarlyInterrupted","defaultReportMessageInternal","failed","interrupted","errorMessage","stringify","pendingStringifieds","stringified","possiblyAsyncStringify","Promise","all","firstTryMessage","registeredValues","Map","stringifySecond","asyncStringifiedIfRegistered","get","undefined","throwIfFailed","Error","asyncThrowIfFailed","runConfiguration","asyncReporter","reporter"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.asyncDefaultReportMessage = exports.defaultReportMessage = exports.asyncReportRunDetails = exports.reportRunDetails = void 0;\nconst stringify_1 = require(\"../../../utils/stringify\");\nconst VerbosityLevel_1 = require(\"../configuration/VerbosityLevel\");\nconst ExecutionStatus_1 = require(\"../reporter/ExecutionStatus\");\nfunction formatHints(hints) {\n    if (hints.length === 1) {\n        return `Hint: ${hints[0]}`;\n    }\n    return hints.map((h, idx) => `Hint (${idx + 1}): ${h}`).join('\\n');\n}\nfunction formatFailures(failures, stringifyOne) {\n    return `Encountered failures were:\\n- ${failures.map(stringifyOne).join('\\n- ')}`;\n}\nfunction formatExecutionSummary(executionTrees, stringifyOne) {\n    const summaryLines = [];\n    const remainingTreesAndDepth = [];\n    for (const tree of executionTrees.slice().reverse()) {\n        remainingTreesAndDepth.push({ depth: 1, tree });\n    }\n    while (remainingTreesAndDepth.length !== 0) {\n        const currentTreeAndDepth = remainingTreesAndDepth.pop();\n        const currentTree = currentTreeAndDepth.tree;\n        const currentDepth = currentTreeAndDepth.depth;\n        const statusIcon = currentTree.status === ExecutionStatus_1.ExecutionStatus.Success\n            ? '\\x1b[32m\\u221A\\x1b[0m'\n            : currentTree.status === ExecutionStatus_1.ExecutionStatus.Failure\n                ? '\\x1b[31m\\xD7\\x1b[0m'\n                : '\\x1b[33m!\\x1b[0m';\n        const leftPadding = Array(currentDepth).join('. ');\n        summaryLines.push(`${leftPadding}${statusIcon} ${stringifyOne(currentTree.value)}`);\n        for (const tree of currentTree.children.slice().reverse()) {\n            remainingTreesAndDepth.push({ depth: currentDepth + 1, tree });\n        }\n    }\n    return `Execution summary:\\n${summaryLines.join('\\n')}`;\n}\nfunction preFormatTooManySkipped(out, stringifyOne) {\n    const message = `Failed to run property, too many pre-condition failures encountered\\n{ seed: ${out.seed} }\\n\\nRan ${out.numRuns} time(s)\\nSkipped ${out.numSkips} time(s)`;\n    let details = null;\n    const hints = [\n        'Try to reduce the number of rejected values by combining map, flatMap and built-in arbitraries',\n        'Increase failure tolerance by setting maxSkipsPerRun to an higher value',\n    ];\n    if (out.verbose >= VerbosityLevel_1.VerbosityLevel.VeryVerbose) {\n        details = formatExecutionSummary(out.executionSummary, stringifyOne);\n    }\n    else {\n        hints.push('Enable verbose mode at level VeryVerbose in order to check all generated values and their associated status');\n    }\n    return { message, details, hints };\n}\nfunction preFormatFailure(out, stringifyOne) {\n    const message = `Property failed after ${out.numRuns} tests\\n{ seed: ${out.seed}, path: \"${out.counterexamplePath}\", endOnFailure: true }\\nCounterexample: ${stringifyOne(out.counterexample)}\\nShrunk ${out.numShrinks} time(s)\\nGot error: ${out.error}`;\n    let details = null;\n    const hints = [];\n    if (out.verbose >= VerbosityLevel_1.VerbosityLevel.VeryVerbose) {\n        details = formatExecutionSummary(out.executionSummary, stringifyOne);\n    }\n    else if (out.verbose === VerbosityLevel_1.VerbosityLevel.Verbose) {\n        details = formatFailures(out.failures, stringifyOne);\n    }\n    else {\n        hints.push('Enable verbose mode in order to have the list of all failing values encountered during the run');\n    }\n    return { message, details, hints };\n}\nfunction preFormatEarlyInterrupted(out, stringifyOne) {\n    const message = `Property interrupted after ${out.numRuns} tests\\n{ seed: ${out.seed} }`;\n    let details = null;\n    const hints = [];\n    if (out.verbose >= VerbosityLevel_1.VerbosityLevel.VeryVerbose) {\n        details = formatExecutionSummary(out.executionSummary, stringifyOne);\n    }\n    else {\n        hints.push('Enable verbose mode at level VeryVerbose in order to check all generated values and their associated status');\n    }\n    return { message, details, hints };\n}\nfunction defaultReportMessageInternal(out, stringifyOne) {\n    if (!out.failed)\n        return;\n    const { message, details, hints } = out.counterexamplePath === null\n        ? out.interrupted\n            ? preFormatEarlyInterrupted(out, stringifyOne)\n            : preFormatTooManySkipped(out, stringifyOne)\n        : preFormatFailure(out, stringifyOne);\n    let errorMessage = message;\n    if (details != null)\n        errorMessage += `\\n\\n${details}`;\n    if (hints.length > 0)\n        errorMessage += `\\n\\n${formatHints(hints)}`;\n    return errorMessage;\n}\nfunction defaultReportMessage(out) {\n    return defaultReportMessageInternal(out, stringify_1.stringify);\n}\nexports.defaultReportMessage = defaultReportMessage;\nasync function asyncDefaultReportMessage(out) {\n    const pendingStringifieds = [];\n    function stringifyOne(value) {\n        const stringified = stringify_1.possiblyAsyncStringify(value);\n        if (typeof stringified === 'string') {\n            return stringified;\n        }\n        pendingStringifieds.push(Promise.all([value, stringified]));\n        return '\\u2026';\n    }\n    const firstTryMessage = defaultReportMessageInternal(out, stringifyOne);\n    if (pendingStringifieds.length === 0) {\n        return firstTryMessage;\n    }\n    const registeredValues = new Map(await Promise.all(pendingStringifieds));\n    function stringifySecond(value) {\n        const asyncStringifiedIfRegistered = registeredValues.get(value);\n        if (asyncStringifiedIfRegistered !== undefined) {\n            return asyncStringifiedIfRegistered;\n        }\n        return stringify_1.stringify(value);\n    }\n    return defaultReportMessageInternal(out, stringifySecond);\n}\nexports.asyncDefaultReportMessage = asyncDefaultReportMessage;\nfunction throwIfFailed(out) {\n    if (!out.failed)\n        return;\n    throw new Error(defaultReportMessage(out));\n}\nasync function asyncThrowIfFailed(out) {\n    if (!out.failed)\n        return;\n    throw new Error(await asyncDefaultReportMessage(out));\n}\nfunction reportRunDetails(out) {\n    if (out.runConfiguration.asyncReporter)\n        return out.runConfiguration.asyncReporter(out);\n    else if (out.runConfiguration.reporter)\n        return out.runConfiguration.reporter(out);\n    else\n        return throwIfFailed(out);\n}\nexports.reportRunDetails = reportRunDetails;\nasync function asyncReportRunDetails(out) {\n    if (out.runConfiguration.asyncReporter)\n        return out.runConfiguration.asyncReporter(out);\n    else if (out.runConfiguration.reporter)\n        return out.runConfiguration.reporter(out);\n    else\n        return asyncThrowIfFailed(out);\n}\nexports.asyncReportRunDetails = asyncReportRunDetails;\n"]},"metadata":{},"sourceType":"script"}