{"ast":null,"code":"'use strict';\n\nvar _asyncToGenerator = require(\"/Users/sydneybailey/Internship/contract-testing/node_modules/@babel/runtime/helpers/asyncToGenerator\").default;\n\nconst configure = require('../lib/configure');\n\nconst toUrlSearchParams = require('../lib/to-url-search-params');\n\nconst {\n  Multiaddr\n} = require('multiaddr');\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/bootstrap').API<HTTPClientExtraOptions>} BootstrapAPI\n */\n\n\nmodule.exports = configure(api => {\n  /**\n   * @type {BootstrapAPI[\"clear\"]}\n   */\n  function clear() {\n    return _clear.apply(this, arguments);\n  }\n\n  function _clear() {\n    _clear = _asyncToGenerator(function* (options = {}) {\n      const res = yield api.post('bootstrap/rm', {\n        timeout: options.timeout,\n        signal: options.signal,\n        searchParams: toUrlSearchParams({ ...options,\n          all: true\n        }),\n        headers: options.headers\n      });\n      const {\n        Peers\n      } = yield res.json();\n      return {\n        Peers: Peers.map((\n        /** @type {string} */\n        ma) => new Multiaddr(ma))\n      };\n    });\n    return _clear.apply(this, arguments);\n  }\n\n  return clear;\n});","map":null,"metadata":{},"sourceType":"script"}