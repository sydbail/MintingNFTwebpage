{"ast":null,"code":"import _asyncToGenerator from \"/Users/sydneybailey/Internship/Demo/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/ipfs.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/expansion\";\nimport * as i5 from \"../mint/mint.component\";\n\nfunction UploadComponent_div_0_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtext(1, \" Upload Successful \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UploadComponent_div_0_div_8_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵelement(1, \"hr\");\n    i0.ɵɵelement(2, \"img\", 15);\n    i0.ɵɵelementStart(3, \"span\", 16);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function UploadComponent_div_0_div_8_div_3_Template_button_click_5_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const file_r8 = restoredCtx.$implicit;\n      const ctx_r10 = i0.ɵɵnextContext(3);\n      return ctx_r10.onRemove(file_r8);\n    });\n    i0.ɵɵtext(6, \" X \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const file_r8 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", file_r8.url, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", file_r8.name, \" \");\n  }\n}\n\nfunction UploadComponent_div_0_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵelementStart(1, \"h2\");\n    i0.ɵɵtext(2, \" Uploaded Files \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, UploadComponent_div_0_div_8_div_3_Template, 7, 2, \"div\", 13);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r6.FileInfos);\n  }\n}\n\nfunction UploadComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵelementStart(1, \"div\", 6);\n    i0.ɵɵelementStart(2, \"h1\");\n    i0.ɵɵtext(3, \" Upload Image(s)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"input\", 7);\n    i0.ɵɵlistener(\"change\", function UploadComponent_div_0_Template_input_change_4_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return ctx_r12.onChange($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function UploadComponent_div_0_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return ctx_r14.onClick();\n    });\n    i0.ɵɵtext(6, \" Upload \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(7, UploadComponent_div_0_div_7_Template, 2, 0, \"div\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(8, UploadComponent_div_0_div_8_Template, 4, 1, \"div\", 10);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.msg === \"Success\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.FileInfos[0]);\n  }\n}\n\nfunction UploadComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵelementStart(1, \"h1\", 19);\n    i0.ɵɵtext(2, \"Upload images with IPFS metadata?\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function UploadComponent_div_1_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return ctx_r15.ipfsUpload();\n    });\n    i0.ɵɵtext(4, \" Yes \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function UploadComponent_div_1_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return ctx_r17.showContracts();\n    });\n    i0.ɵɵtext(6, \" No \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UploadComponent_div_2_div_6_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r26 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵelement(1, \"hr\");\n    i0.ɵɵelement(2, \"img\", 34);\n    i0.ɵɵelementStart(3, \"p\", 35);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 36);\n    i0.ɵɵelementStart(6, \"label\", 37);\n    i0.ɵɵtext(7, \"Name:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"input\", 38);\n    i0.ɵɵlistener(\"ngModelChange\", function UploadComponent_div_2_div_6_div_3_Template_input_ngModelChange_8_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r26);\n      const file_r23 = restoredCtx.$implicit;\n      return file_r23.mname = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 36);\n    i0.ɵɵelementStart(10, \"label\", 37);\n    i0.ɵɵtext(11, \"Description:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"input\", 39);\n    i0.ɵɵlistener(\"ngModelChange\", function UploadComponent_div_2_div_6_div_3_Template_input_ngModelChange_12_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r26);\n      const file_r23 = restoredCtx.$implicit;\n      return file_r23.desc = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"div\", 40);\n    i0.ɵɵelementStart(14, \"label\", 37);\n    i0.ɵɵtext(15, \" Image:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(16, \"input\", 41);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"mat-expansion-panel\", 42);\n    i0.ɵɵelementStart(18, \"mat-expansion-panel-header\", 43);\n    i0.ɵɵelementStart(19, \"mat-panel-title\");\n    i0.ɵɵtext(20, \"Show Additional Fields\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"div\", 44);\n    i0.ɵɵelementStart(22, \"label\", 37);\n    i0.ɵɵtext(23, \"Creator:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"input\", 45);\n    i0.ɵɵlistener(\"ngModelChange\", function UploadComponent_div_2_div_6_div_3_Template_input_ngModelChange_24_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r26);\n      const file_r23 = restoredCtx.$implicit;\n      return file_r23.creator = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"div\", 46);\n    i0.ɵɵelementStart(26, \"label\", 37);\n    i0.ɵɵtext(27, \"Value:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(28, \"input\", 47);\n    i0.ɵɵlistener(\"ngModelChange\", function UploadComponent_div_2_div_6_div_3_Template_input_ngModelChange_28_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r26);\n      const file_r23 = restoredCtx.$implicit;\n      return file_r23.value = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(29, \"div\", 36);\n    i0.ɵɵelementStart(30, \"label\", 37);\n    i0.ɵɵtext(31, \"Minting Date:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(32, \"input\", 48);\n    i0.ɵɵlistener(\"ngModelChange\", function UploadComponent_div_2_div_6_div_3_Template_input_ngModelChange_32_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r26);\n      const file_r23 = restoredCtx.$implicit;\n      return file_r23.date = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(33, \"div\", 36);\n    i0.ɵɵelementStart(34, \"label\", 37);\n    i0.ɵɵtext(35, \"Enable Royalities?:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(36, \"input\", 49);\n    i0.ɵɵlistener(\"ngModelChange\", function UploadComponent_div_2_div_6_div_3_Template_input_ngModelChange_36_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r26);\n      const file_r23 = restoredCtx.$implicit;\n      return file_r23.royal = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const file_r23 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", file_r23.url, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", file_r23.name, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"for\", \"metaname_\", file_r23.id, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"metaname_\", file_r23.id, \"\");\n    i0.ɵɵpropertyInterpolate1(\"name\", \"name_\", file_r23.id, \"\");\n    i0.ɵɵproperty(\"ngModel\", file_r23.mname);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"for\", \"metades_\", file_r23.id, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"metades_\", file_r23.id, \"\");\n    i0.ɵɵpropertyInterpolate1(\"name\", \"description_\", file_r23.id, \"\");\n    i0.ɵɵproperty(\"ngModel\", file_r23.desc);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"for\", \"hash_\", file_r23.id, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"name\", \"image_\", file_r23.id, \"\");\n    i0.ɵɵpropertyInterpolate(\"value\", file_r23.imghash);\n    i0.ɵɵadvance(6);\n    i0.ɵɵpropertyInterpolate1(\"for\", \"creator_\", file_r23.id, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"creator_\", file_r23.id, \"\");\n    i0.ɵɵpropertyInterpolate1(\"name\", \"creator_\", file_r23.id, \"\");\n    i0.ɵɵproperty(\"ngModel\", file_r23.creator);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"for\", \"value_\", file_r23.id, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"value_\", file_r23.id, \"\");\n    i0.ɵɵpropertyInterpolate1(\"name\", \"value_\", file_r23.id, \"\");\n    i0.ɵɵproperty(\"ngModel\", file_r23.value);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"for\", \"date_\", file_r23.id, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"date_\", file_r23.id, \"\");\n    i0.ɵɵpropertyInterpolate1(\"name\", \"date_\", file_r23.id, \"\");\n    i0.ɵɵproperty(\"ngModel\", file_r23.date);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"for\", \"royal_\", file_r23.id, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"auto_\", file_r23.id, \"\");\n    i0.ɵɵpropertyInterpolate1(\"name\", \"royal_\", file_r23.id, \"\");\n    i0.ɵɵproperty(\"ngModel\", file_r23.royal);\n  }\n}\n\nfunction UploadComponent_div_2_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r33 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"form\", 28, 29);\n    i0.ɵɵlistener(\"ngSubmit\", function UploadComponent_div_2_div_6_Template_form_ngSubmit_1_listener() {\n      i0.ɵɵrestoreView(_r33);\n      const ctx_r32 = i0.ɵɵnextContext(2);\n      return ctx_r32.submitMeta(ctx_r32.FileInfos, ctx_r32.sameVars);\n    });\n    i0.ɵɵtemplate(3, UploadComponent_div_2_div_6_div_3_Template, 37, 29, \"div\", 30);\n    i0.ɵɵelementStart(4, \"button\", 31);\n    i0.ɵɵtext(5, \"Submit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"button\", 32);\n    i0.ɵɵlistener(\"click\", function UploadComponent_div_2_div_6_Template_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r33);\n\n      const _r21 = i0.ɵɵreference(2);\n\n      return _r21.reset();\n    });\n    i0.ɵɵtext(7, \"Reset\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r21 = i0.ɵɵreference(2);\n\n    const ctx_r18 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r18.FileInfos);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", !_r21.form.valid);\n  }\n}\n\nfunction UploadComponent_div_2_ng_template_7_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r40 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵelement(1, \"hr\");\n    i0.ɵɵelement(2, \"img\", 50);\n    i0.ɵɵelementStart(3, \"p\", 35);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 36);\n    i0.ɵɵelementStart(6, \"label\", 37);\n    i0.ɵɵtext(7, \"Name:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"input\", 38);\n    i0.ɵɵlistener(\"ngModelChange\", function UploadComponent_div_2_ng_template_7_div_2_Template_input_ngModelChange_8_listener($event) {\n      i0.ɵɵrestoreView(_r40);\n      const ctx_r39 = i0.ɵɵnextContext(3);\n      return ctx_r39.metaname = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 36);\n    i0.ɵɵelementStart(10, \"label\", 37);\n    i0.ɵɵtext(11, \"Description:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"input\", 39);\n    i0.ɵɵlistener(\"ngModelChange\", function UploadComponent_div_2_ng_template_7_div_2_Template_input_ngModelChange_12_listener($event) {\n      i0.ɵɵrestoreView(_r40);\n      const ctx_r41 = i0.ɵɵnextContext(3);\n      return ctx_r41.metades = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"div\", 40);\n    i0.ɵɵelementStart(14, \"label\", 37);\n    i0.ɵɵtext(15, \" Image:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(16, \"input\", 41);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"mat-expansion-panel\", 42);\n    i0.ɵɵelementStart(18, \"mat-expansion-panel-header\", 43);\n    i0.ɵɵelementStart(19, \"mat-panel-title\");\n    i0.ɵɵtext(20, \"Show Additional Fields\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"div\", 44);\n    i0.ɵɵelementStart(22, \"label\", 37);\n    i0.ɵɵtext(23, \"Creator:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"input\", 45);\n    i0.ɵɵlistener(\"ngModelChange\", function UploadComponent_div_2_ng_template_7_div_2_Template_input_ngModelChange_24_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r40);\n      const file_r37 = restoredCtx.$implicit;\n      return file_r37.creator = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"div\", 46);\n    i0.ɵɵelementStart(26, \"label\", 37);\n    i0.ɵɵtext(27, \"Value:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(28, \"input\", 47);\n    i0.ɵɵlistener(\"ngModelChange\", function UploadComponent_div_2_ng_template_7_div_2_Template_input_ngModelChange_28_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r40);\n      const file_r37 = restoredCtx.$implicit;\n      return file_r37.value = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(29, \"div\", 36);\n    i0.ɵɵelementStart(30, \"label\", 37);\n    i0.ɵɵtext(31, \"Minting Date:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(32, \"input\", 48);\n    i0.ɵɵlistener(\"ngModelChange\", function UploadComponent_div_2_ng_template_7_div_2_Template_input_ngModelChange_32_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r40);\n      const file_r37 = restoredCtx.$implicit;\n      return file_r37.date = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(33, \"div\", 36);\n    i0.ɵɵelementStart(34, \"label\", 37);\n    i0.ɵɵtext(35, \"Enable Royalities?:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(36, \"input\", 49);\n    i0.ɵɵlistener(\"ngModelChange\", function UploadComponent_div_2_ng_template_7_div_2_Template_input_ngModelChange_36_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r40);\n      const file_r37 = restoredCtx.$implicit;\n      return file_r37.royal = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const file_r37 = ctx.$implicit;\n    const ctx_r36 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", file_r37.url, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Image: \", file_r37.name, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"for\", \"metaname_\", file_r37.id, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"metaname_\", file_r37.id, \"\");\n    i0.ɵɵpropertyInterpolate1(\"name\", \"name_\", file_r37.id, \"\");\n    i0.ɵɵproperty(\"ngModel\", ctx_r36.metaname);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"for\", \"metades_\", file_r37.id, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"metades_\", file_r37.id, \"\");\n    i0.ɵɵpropertyInterpolate1(\"name\", \"description_\", file_r37.id, \"\");\n    i0.ɵɵproperty(\"ngModel\", ctx_r36.metades);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"for\", \"hash_\", file_r37.id, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"name\", \"image_\", file_r37.id, \"\");\n    i0.ɵɵpropertyInterpolate(\"value\", file_r37.imghash);\n    i0.ɵɵadvance(6);\n    i0.ɵɵpropertyInterpolate1(\"for\", \"creator_\", file_r37.id, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"creator_\", file_r37.id, \"\");\n    i0.ɵɵpropertyInterpolate1(\"name\", \"creator_\", file_r37.id, \"\");\n    i0.ɵɵproperty(\"ngModel\", file_r37.creator);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"for\", \"value_\", file_r37.id, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"value_\", file_r37.id, \"\");\n    i0.ɵɵpropertyInterpolate1(\"name\", \"value_\", file_r37.id, \"\");\n    i0.ɵɵproperty(\"ngModel\", file_r37.value);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"for\", \"date_\", file_r37.id, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"date_\", file_r37.id, \"\");\n    i0.ɵɵpropertyInterpolate1(\"name\", \"date_\", file_r37.id, \"\");\n    i0.ɵɵproperty(\"ngModel\", file_r37.date);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"for\", \"royal_\", file_r37.id, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"auto_\", file_r37.id, \"\");\n    i0.ɵɵpropertyInterpolate1(\"name\", \"royal_\", file_r37.id, \"\");\n    i0.ɵɵproperty(\"ngModel\", file_r37.royal);\n  }\n}\n\nfunction UploadComponent_div_2_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r47 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"form\", 28, 29);\n    i0.ɵɵlistener(\"ngSubmit\", function UploadComponent_div_2_ng_template_7_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r47);\n      const ctx_r46 = i0.ɵɵnextContext(2);\n      return ctx_r46.submitMeta(ctx_r46.FileInfos, ctx_r46.sameVars);\n    });\n    i0.ɵɵtemplate(2, UploadComponent_div_2_ng_template_7_div_2_Template, 37, 29, \"div\", 30);\n    i0.ɵɵelementStart(3, \"button\", 31);\n    i0.ɵɵtext(4, \"Submit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 32);\n    i0.ɵɵlistener(\"click\", function UploadComponent_div_2_ng_template_7_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r47);\n\n      const _r35 = i0.ɵɵreference(1);\n\n      return _r35.reset();\n    });\n    i0.ɵɵtext(6, \"Reset\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r35 = i0.ɵɵreference(1);\n\n    const ctx_r20 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r20.FileInfos);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", !_r35.form.valid);\n  }\n}\n\nfunction UploadComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r50 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵelementStart(1, \"h1\", 23);\n    i0.ɵɵtext(2, \" Enter Metadata Information \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"label\", 24);\n    i0.ɵɵtext(4, \" Use same metadata for all images: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"input\", 25);\n    i0.ɵɵlistener(\"ngModelChange\", function UploadComponent_div_2_Template_input_ngModelChange_5_listener($event) {\n      i0.ɵɵrestoreView(_r50);\n      const ctx_r49 = i0.ɵɵnextContext();\n      return ctx_r49.sameVars = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, UploadComponent_div_2_div_6_Template, 8, 2, \"div\", 26);\n    i0.ɵɵtemplate(7, UploadComponent_div_2_ng_template_7_Template, 7, 2, \"ng-template\", null, 27, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r19 = i0.ɵɵreference(8);\n\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.sameVars);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.sameVars)(\"ngIfElse\", _r19);\n  }\n}\n\nfunction UploadComponent_div_3_option_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 59);\n    i0.ɵɵtext(1, \"NFT Tokens with IPFS metadata\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UploadComponent_div_3_option_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 60);\n    i0.ɵɵtext(1, \"Non Transferrable NFT Tokens with IPFS metadata\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UploadComponent_div_3_option_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 61);\n    i0.ɵɵtext(1, \"NFT Tokens with no metadata\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UploadComponent_div_3_option_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 62);\n    i0.ɵɵtext(1, \"Non Transferrable NFT Tokens with no metadata\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UploadComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r56 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 51);\n    i0.ɵɵelementStart(1, \"form\");\n    i0.ɵɵelementStart(2, \"label\", 52);\n    i0.ɵɵelementStart(3, \"h1\");\n    i0.ɵɵtext(4, \" Select Contract: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"select\", 53);\n    i0.ɵɵlistener(\"ngModelChange\", function UploadComponent_div_3_Template_select_ngModelChange_5_listener($event) {\n      i0.ɵɵrestoreView(_r56);\n      const ctx_r55 = i0.ɵɵnextContext();\n      return ctx_r55.contractselection = $event;\n    });\n    i0.ɵɵtemplate(6, UploadComponent_div_3_option_6_Template, 2, 0, \"option\", 54);\n    i0.ɵɵtemplate(7, UploadComponent_div_3_option_7_Template, 2, 0, \"option\", 55);\n    i0.ɵɵtemplate(8, UploadComponent_div_3_option_8_Template, 2, 0, \"option\", 56);\n    i0.ɵɵtemplate(9, UploadComponent_div_3_option_9_Template, 2, 0, \"option\", 57);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"button\", 58);\n    i0.ɵɵlistener(\"click\", function UploadComponent_div_3_Template_button_click_10_listener() {\n      i0.ɵɵrestoreView(_r56);\n      const ctx_r57 = i0.ɵɵnextContext();\n      return ctx_r57.selectContract();\n    });\n    i0.ɵɵtext(11, \" Submit \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r3.contractselection);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.ipfscontracts);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.ipfscontracts);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r3.ipfscontracts);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r3.ipfscontracts);\n  }\n}\n\nfunction UploadComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 63);\n    i0.ɵɵelement(1, \"app-mint\", 64);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"filesList\", ctx_r4.FileInfos)(\"userContract\", ctx_r4.contractselection);\n  }\n}\n\nexport class UploadComponent {\n  IPFSService;\n  selectedFiles; //files selected by user with file broswer\n\n  msg; // holds message associated with upload\n\n  FileInfos = []; // list of all files uploaded\n\n  reUploads = []; // files in selected files that are already uploaded\n\n  ipfsid = null; //ID of ipfs node\n  //metadata form\n\n  showform = false; // display metadata form\n\n  showcontracts = false; // display contracts form\n\n  ipfscontracts = false; //use these vars if user selects set all forms same option\n\n  metaname;\n  metades;\n  creator;\n  value;\n  date;\n  royal;\n  sameVars = false;\n  contractselection;\n  mintingready = false;\n\n  constructor(IPFSService) {\n    this.IPFSService = IPFSService;\n  }\n\n  ngOnInit() {\n    this.start();\n  }\n\n  start() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const id = yield _this.IPFSService.getId();\n      _this.ipfsid = id.id;\n\n      if (_this.ipfsid == null) {\n        console.log(\"IPFS start up FAILED\");\n      }\n\n      const stat = yield _this.IPFSService.getStatus();\n      console.log(stat);\n      /*  To check if node is connected to peers (sharing files)\n        const peerInfos = await this.IPFSService.getPeers();\n        const peers = await this.IPFSService.getPeers();\n        console.log(peers);\n               peerInfos.forEach(info => {\n          console.log(info.id)\n          info.addrs.forEach(addr => console.log(addr.toString()))\n        })*/\n    })();\n  } //on click of choose files button\n\n\n  onChange(event) {\n    this.selectedFiles = event.target.files;\n  } //on click of upload button\n\n\n  onClick() {\n    this.msg = \"\";\n    this.reUploads = [];\n\n    if (this.selectedFiles && this.selectedFiles[0]) {\n      //if user has selected a file\n      const numOfFiles = this.selectedFiles.length; //gets length of selected files list\n\n      for (let i = 0; i < numOfFiles; i++) {\n        //for files selected\n        let name = this.selectedFiles[i].name;\n        let file = this.selectedFiles[i];\n        let match = false;\n\n        for (var t in this.FileInfos) {\n          //check if file has already been uploaded\n          if (this.FileInfos[t].name == name) {\n            match = true;\n          }\n        }\n\n        if (match) {\n          this.reUploads.push(name);\n          continue; //skip to next iteration\n        }\n\n        const reader = new FileReader();\n        reader.readAsDataURL(this.selectedFiles[i]); //read file content\n\n        reader.onload = event => {\n          var image = reader.result;\n\n          if (image) {\n            let imageInfo = {\n              id: i,\n              name: name,\n              url: image,\n              blob: file,\n              imghash: null,\n              mname: null,\n              desc: null,\n              creator: null,\n              value: null,\n              date: null,\n              royal: null,\n              metaHash: null\n            };\n            this.FileInfos.push(imageInfo);\n            this.msg = \"Success\"; //sort alphabetically by name\n\n            const sorted = this.FileInfos.sort((t1, t2) => {\n              const name1 = t1.name.toLowerCase();\n              const name2 = t2.name.toLowerCase();\n\n              if (name1 > name2) {\n                return 1;\n              }\n\n              if (name1 < name2) {\n                return -1;\n              }\n\n              return 0;\n            });\n          } else {\n            //FileReader returned no url\n            console.log(\"FAIL: File could not be read\");\n            this.msg = \"Fail\";\n          }\n        }; //end onload event\n\n      } //end for\n\n    } //end if\n\n  } // end onClick()\n  //file remove button\n\n\n  onRemove(imageObj) {\n    this.msg = \"\";\n    var index = this.FileInfos.indexOf(imageObj);\n    this.FileInfos.splice(index, 1);\n  } //ipfs upload function\n\n\n  ipfsUpload() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      _this2.showform = true;\n      _this2.ipfscontracts = true;\n\n      if (_this2.FileInfos && _this2.FileInfos[0]) {\n        //if user has selected a file\n        const len = _this2.FileInfos.length;\n\n        for (let i = 0; i < len; i++) {\n          _this2.FileInfos[i].imghash = yield _this2.IPFSService.addFile(_this2.FileInfos[i].blob);\n          console.log(\"FILE ADDED. \\nName: \" + _this2.FileInfos[i].name + \"\\nHash: \" + _this2.FileInfos[i].imghash);\n        }\n      }\n    })();\n  } //submit metadata form and convert to JSON form\n\n\n  submitMeta(files, linked) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      if (linked) {\n        for (let i = 0; i < files.length; i++) {\n          let data = {\n            name: _this3.metaname,\n            description: _this3.metades,\n            image: \"ipfs://\" + files[i].imghash,\n            ...(_this3.creator != null && {\n              creator: _this3.creator\n            }),\n            ...(_this3.value && {\n              value: _this3.value\n            }),\n            ...(_this3.date != null && {\n              date: _this3.date\n            }),\n            ...(_this3.royal != null && {\n              royalities: _this3.royal\n            })\n          };\n          let jsonObj = JSON.stringify(data);\n          console.log(\"JSON metadata: \", jsonObj);\n          files[i].metaHash = yield _this3.IPFSService.addFile(jsonObj);\n        }\n      } else {\n        for (let i = 0; i < files.length; i++) {\n          let data = {\n            name: files[i].mname,\n            description: files[i].desc,\n            image: \"ipfs://\" + files[i].imghash,\n            ...(_this3.creator != null && {\n              creator: _this3.creator\n            }),\n            ...(_this3.value && {\n              value: _this3.value\n            }),\n            ...(_this3.date != null && {\n              date: _this3.date\n            }),\n            ...(_this3.royal != null && {\n              royalities: _this3.royal\n            })\n          };\n          let jsonObj = JSON.stringify(data);\n          console.log(\"JSON metadata: \", jsonObj);\n          files[i].metaHash = yield _this3.IPFSService.addFile(jsonObj);\n        }\n      } // end else\n      //investigate wrapping ipfs files in directory\n\n\n      _this3.showcontracts = true;\n    })();\n  } //display the contracts selections if user pressed submit on ipfs form\n  //or did not use metadata\n\n\n  showContracts() {\n    this.showcontracts = true;\n  }\n\n  selectContract() {\n    if (this.contractselection) {\n      this.mintingready = true;\n    }\n  }\n\n  static ɵfac = function UploadComponent_Factory(t) {\n    return new (t || UploadComponent)(i0.ɵɵdirectiveInject(i1.IpfsService));\n  };\n  static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UploadComponent,\n    selectors: [[\"app-upload\"]],\n    decls: 5,\n    vars: 5,\n    consts: [[\"class\", \"all\", 4, \"ngIf\"], [\"class\", \"ipfs\", 4, \"ngIf\"], [\"class\", \"formcontainer\", 4, \"ngIf\"], [\"class\", \"contract\", 4, \"ngIf\"], [\"class\", \"child\", 4, \"ngIf\"], [1, \"all\"], [1, \"upload\"], [\"type\", \"file\", \"multiple\", \"multiple\", \"accept\", \"image/*\", 1, \"form-controlfile\", 3, \"change\"], [1, \"successbtn\", 3, \"click\"], [\"class\", \"uploadSuccess\", 4, \"ngIf\"], [\"class\", \"preview\", 4, \"ngIf\"], [1, \"uploadSuccess\"], [1, \"preview\"], [\"class\", \"file-list\", 4, \"ngFor\", \"ngForOf\"], [1, \"file-list\"], [\"height\", \"50px\", \"width\", \"50px\", 3, \"src\"], [1, \"name\"], [1, \"removebtn\", 3, \"click\"], [1, \"ipfs\"], [1, \"ipfsTitle\"], [1, \"ipfsbtn\", 3, \"click\"], [1, \"noipfsbtns\", 3, \"click\"], [1, \"formcontainer\"], [1, \"metatitle\"], [\"for\", \"sameVars\"], [\"type\", \"checkbox\", \"name\", \"sameVars\", 3, \"ngModel\", \"ngModelChange\"], [4, \"ngIf\", \"ngIfElse\"], [\"linked\", \"\"], [3, \"ngSubmit\"], [\"metaForm\", \"ngForm\"], [\"class\", \"innerform\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 1, \"btn-form\", 3, \"disabled\"], [\"type\", \"button\", 1, \"btnresetform\", 3, \"click\"], [1, \"innerform\"], [\"height\", \"50px\", \"width\", \"50px\", 1, \"formimg\", 3, \"src\"], [1, \"filename\"], [1, \"form-group\"], [3, \"for\"], [\"type\", \"text\", 1, \"namefield\", 3, \"id\", \"ngModel\", \"name\", \"ngModelChange\"], [\"type\", \"text\", 1, \"desfield\", 3, \"id\", \"ngModel\", \"name\", \"ngModelChange\"], [1, \"image-group\"], [\"type\", \"text\", \"disabled\", \"\", 1, \"imagefield\", 3, \"name\", \"value\"], [1, \"panel\"], [1, \"panelheader\"], [1, \"creator-group\"], [\"type\", \"text\", 1, \"creatorfield\", 3, \"id\", \"ngModel\", \"name\", \"ngModelChange\"], [1, \"value-group\"], [\"type\", \"text\", 1, \"valuefield\", 3, \"id\", \"ngModel\", \"name\", \"ngModelChange\"], [\"type\", \"date\", 1, \"datefield\", 3, \"id\", \"ngModel\", \"name\", \"ngModelChange\"], [\"type\", \"checkbox\", 1, \"autofield\", 3, \"id\", \"ngModel\", \"name\", \"ngModelChange\"], [\"height\", \"30px\", \"width\", \"30px\", 3, \"src\"], [1, \"contract\"], [\"for\", \"contract\"], [\"name\", \"contract\", \"id\", \"contract\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"IPFSNFT\", 4, \"ngIf\"], [\"value\", \"noTransferIPFSNFT\", 4, \"ngIf\"], [\"value\", \"basicNFT\", 4, \"ngIf\"], [\"value\", \"noTransferbasicNFT\", 4, \"ngIf\"], [1, \"contract-btn\", 3, \"click\"], [\"value\", \"IPFSNFT\"], [\"value\", \"noTransferIPFSNFT\"], [\"value\", \"basicNFT\"], [\"value\", \"noTransferbasicNFT\"], [1, \"child\"], [3, \"filesList\", \"userContract\"]],\n    template: function UploadComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, UploadComponent_div_0_Template, 9, 2, \"div\", 0);\n        i0.ɵɵtemplate(1, UploadComponent_div_1_Template, 7, 0, \"div\", 1);\n        i0.ɵɵtemplate(2, UploadComponent_div_2_Template, 9, 3, \"div\", 2);\n        i0.ɵɵtemplate(3, UploadComponent_div_3_Template, 12, 5, \"div\", 3);\n        i0.ɵɵtemplate(4, UploadComponent_div_4_Template, 2, 2, \"div\", 4);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.showform == false && ctx.showcontracts == false);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.FileInfos[0] && ctx.showform == false && ctx.showcontracts == false);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showform == true && ctx.showcontracts == false);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showcontracts && ctx.mintingready == false);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.mintingready);\n      }\n    },\n    directives: [i2.NgIf, i2.NgForOf, i3.CheckboxControlValueAccessor, i3.NgControlStatus, i3.NgModel, i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.NgForm, i3.DefaultValueAccessor, i4.MatExpansionPanel, i4.MatExpansionPanelHeader, i4.MatExpansionPanelTitle, i3.SelectControlValueAccessor, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i5.MintComponent],\n    styles: [\".upload[_ngcontent-%COMP%] {\\n  background-color: whitesmoke;\\n  width: 450px;\\n  border: 2px solid lightgrey;\\n  border-radius: 4px;\\n  padding: 10px;\\n  position: absolute;\\n  top: 150px;\\n  left: 100px;\\n}\\nh1[_ngcontent-%COMP%] {\\n  color: black;\\n  font-family: 'Lato', sans-serif;\\n  font-size: 150%;\\n}\\n.form-controlfile[_ngcontent-%COMP%] {\\n  width: 300px;\\n  background-color: white;\\n  border: 1px solid black;\\n  border-radius: 4px;\\n  padding: 5px\\n}\\n.successbtn[_ngcontent-%COMP%] {\\n  font-size: 0.875rem;\\n  width: 75px;\\n  border: 2px solid #20b2aa;\\n  color: #20b2aa;\\n  background-color: whitesmoke;\\n  border-radius: 3px;\\n  padding: 5px;\\n  vertical-align: middle;\\n  position: relative;\\n  left: 3px;\\n  bottom: 2px;\\n }\\n.successbtn[_ngcontent-%COMP%]:hover {\\n  background-color: #20b2aa;\\n  color: white;\\n  border-color: #20b2aa;\\n}\\nh2[_ngcontent-%COMP%] {\\n  color: black;\\n  font-family: 'Lato', sans-serif;\\n  font-size: 100%;\\n  width: 470px;\\n  position: relative;\\n  left: 5px;\\n}\\n.preview[_ngcontent-%COMP%] {\\n  background-color: whitesmoke;\\n  width: 450px;\\n  border: 2px solid lightgrey;\\n  border-radius: 4px;\\n  padding: 10px;\\n  position: relative;\\n  top: 225px;\\n  left: 100px;\\n}\\nhr[_ngcontent-%COMP%] {\\n  border-top: 2px solid #ddd;\\n}\\n.file-list[_ngcontent-%COMP%] {\\n  position: relative;\\n  right: 10px;\\n  width: 470px;\\n  text-align: left;\\n}\\nimg[_ngcontent-%COMP%] {\\n  border: 1px solid #ddd;\\n  border-radius: 4px;\\n  padding: 5px;\\n  margin-left: 5px;\\n}\\n.name[_ngcontent-%COMP%] {\\n  text-align: center;\\n  position: relative;\\n  top: -25px;\\n}\\n.removebtn[_ngcontent-%COMP%] {\\n  background-color: red;\\n  color: white;\\n  padding: 5px;\\n  border: 2px solid red;\\n  border-color: red;\\n  font-size: 0.875rem;\\n  margin-left: 10px;\\n  position: absolute;\\n  left: 400px;\\n  top: 25px;\\n}\\n.uploadSuccess[_ngcontent-%COMP%] {\\n  margin-top: 5px;\\n  padding-top: 5px;\\n  height: 20px;\\n  width: 200px;\\n  border: 2px solid green;\\n  font-size: 12px;\\n  text-align: center;\\n  vertical-align: center;\\n  color: darkgreen;\\n  background: rgba(0, 128, 0, 0.2);\\n}\\n\\n.ipfs[_ngcontent-%COMP%] {\\n  text-align: left;\\n  background-color: whitesmoke;\\n  \\n  width: 450px;\\n  border: 2px solid lightgrey;\\n  border-radius: 4px;\\n  padding: 10px;\\n  position: absolute;\\n  left: 800px;\\n  top: 150px;\\n}\\n.ipfsbtn[_ngcontent-%COMP%] {\\n  font-size: 0.875rem;\\n  width: 75px;\\n  border: 2px solid #20b2aa;\\n  color: #20b2aa;\\n  background-color: whitesmoke;\\n  border-radius: 3px;\\n  padding: 5px;\\n  vertical-align: middle;\\n  position: relative;\\n  left: 130px;\\n }\\n.ipfsbtn[_ngcontent-%COMP%]:hover {\\n  background-color: #20b2aa;\\n  color: white;\\n  border-color: #20b2aa;\\n}\\n.noipfsbtns[_ngcontent-%COMP%] {\\n  font-size: 0.875rem;\\n  width: 75px;\\n  border: 2px solid red;\\n  color: red;\\n  background-color: whitesmoke;\\n  border-radius: 3px;\\n  padding: 5px;\\n  vertical-align: middle;\\n  position: relative;\\n  left: 135px;\\n }\\n.noipfsbtns[_ngcontent-%COMP%]:hover {\\n  background-color: red;\\n  color: white;\\n  border-color: red;\\n}\\n\\n.formcontainer[_ngcontent-%COMP%] {\\n  background-color: whitesmoke;\\n  width: 440px;\\n  border: 2px solid lightgrey;\\n  border-radius: 4px;\\n  padding-left: 5px;\\n  padding-right: 5px;\\n  padding-bottom: 10px;\\n  position: absolute;\\n  top: 125px;\\n  left: 100px;\\n}\\n.filename[_ngcontent-%COMP%] {\\n  color: black;\\n  font-family: 'Lato', sans-serif;\\n  font-size: 100%;\\n  display: inline-block;\\n  position: absolute;\\n  padding-left: 3px;\\n}\\n.formimg[_ngcontent-%COMP%] {\\n  border: 1px solid #ddd;\\n  border-radius: 4px;\\n  padding: 5px;\\n  margin-left: 5px;\\n}\\n.innerform[_ngcontent-%COMP%] {\\n\\n  padding-bottom: 10px;\\n}\\nlabel[_ngcontent-%COMP%] {\\n  display: block;\\n  padding-right: 20px;\\n}\\n.imagefield[_ngcontent-%COMP%] {\\n  width: 375px;\\n  background-color: white;\\n  border: 1px solid grey;\\n}\\n.desfield[_ngcontent-%COMP%], .namefield[_ngcontent-%COMP%] {\\n  width: 375px;\\n}\\n.image-group[_ngcontent-%COMP%] {\\n  padding-bottom: 10px;\\n}\\n.panel[_ngcontent-%COMP%] {\\n  background-color: whitesmoke;\\n  width: 375px;\\n}\\n.btnresetform[_ngcontent-%COMP%]{\\n  font-size: 0.875rem;\\n  width: 75px;\\n  border: 2px solid red;\\n  color: red;\\n  background-color: whitesmoke;\\n  border-radius: 3px;\\n  padding: 5px;\\n  vertical-align: middle;\\n  position: relative;\\n  left: 125px;\\n}\\n.btnresetform[_ngcontent-%COMP%]:hover {\\n  background-color: red;\\n  color: white;\\n  border-color: red;\\n}\\n.btn-form[_ngcontent-%COMP%] {\\n  font-size: 0.875rem;\\n  width: 75px;\\n  border: 2px solid #20b2aa;\\n  color: #20b2aa;\\n  background-color: whitesmoke;\\n  border-radius: 3px;\\n  padding: 5px;\\n  vertical-align: middle;\\n  position: relative;\\n  left: 100px;\\n }\\n.btn-form[_ngcontent-%COMP%]:hover {\\n  background-color: #20b2aa;\\n  color: white;\\n  border-color: #20b2aa;\\n}\\n\\n.contract[_ngcontent-%COMP%] {\\n  background-color: whitesmoke;\\n  width: 450px;\\n  border: 2px solid lightgrey;\\n  border-radius: 4px;\\n  padding: 10px;\\n  padding-bottom: 0px;\\n  position: absolute;\\n  top: 150px;\\n  left: 100px;\\n}\\n.contract-btn[_ngcontent-%COMP%] {\\n  font-size: 0.875rem;\\n  width: 75px;\\n  border: 2px solid #20b2aa;\\n  color: #20b2aa;\\n  background-color: whitesmoke;\\n  border-radius: 3px;\\n  padding: 5px;\\n  vertical-align: middle;\\n  position: relative;\\n  left: 327px;\\n  bottom: 25px;\\n\\n }\\n.contract-btn[_ngcontent-%COMP%]:hover {\\n  background-color: #20b2aa;\\n  color: white;\\n  border-color: #20b2aa;\\n}\\n/*# sourceMappingURL=data:application/json;base64, */\"]\n  });\n}","map":{"version":3,"sources":["/Users/sydneybailey/Internship/Demo/src/app/upload/upload.component.ts","/Users/sydneybailey/Internship/Demo/src/app/upload/upload.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { IpfsService } from \"../services/ipfs.service\";\nimport { NgForm } from '@angular/forms'\n\n@Component({\n  selector: 'app-upload',\n  templateUrl: './upload.component.html',\n  styleUrls: ['./upload.component.css']\n})\nexport class UploadComponent implements OnInit {\n  selectedFiles?: FileList;           //files selected by user with file broswer\n  msg?: string;                       // holds message associated with upload\n  FileInfos: any[] = [];             // list of all files uploaded\n  reUploads: string[] = [];        // files in selected files that are already uploaded\n  ipfsid: string | null = null;    //ID of ipfs node\n  //metadata form\n  showform: boolean = false;         // display metadata form\n  showcontracts: boolean = false;   // display contracts form\n  ipfscontracts: boolean = false;\n\n  //use these vars if user selects set all forms same option\n  metaname?: string;\n  metades?: string;\n  creator?: string;\n  value?: string;\n  date?: any;\n  royal?: boolean;\n\n  sameVars: boolean = false;\n  contractselection?: string;\n  mintingready: boolean = false;\n\n  constructor(private IPFSService: IpfsService) { }\n\n  ngOnInit(): void {\n    this.start();\n  }\n\n  async start() {\n    const id = await this.IPFSService.getId();\n    this.ipfsid = id.id;\n    if(this.ipfsid == null){\n      console.log(\"IPFS start up FAILED\");\n    }\n    const stat = await this.IPFSService.getStatus();\n    console.log(stat);\n\n  /*  To check if node is connected to peers (sharing files)\n    const peerInfos = await this.IPFSService.getPeers();\n    const peers = await this.IPFSService.getPeers();\n    console.log(peers);\n\n    peerInfos.forEach(info => {\n      console.log(info.id)\n      info.addrs.forEach(addr => console.log(addr.toString()))\n    })*/\n  }\n\n  //on click of choose files button\n  onChange(event: any) {\n    this.selectedFiles = event.target.files;\n  }\n  //on click of upload button\n  onClick() {\n    this.msg = \"\";\n    this.reUploads = [];\n    if(this.selectedFiles && this.selectedFiles[0]) { //if user has selected a file\n      const numOfFiles = this.selectedFiles.length;  //gets length of selected files list\n\n      for (let i = 0; i < numOfFiles; i++) { //for files selected\n        let name = this.selectedFiles[i].name;\n        let file = this.selectedFiles[i];\n        let match = false;\n        for (var t in this.FileInfos) {  //check if file has already been uploaded\n            if (this.FileInfos[t].name == name) {\n              match = true;\n            }\n          }\n\n      if(match){\n        this.reUploads.push(name);\n        continue;  //skip to next iteration\n      }\n\n      const reader = new FileReader();\n      reader.readAsDataURL(this.selectedFiles[i]); //read file content\n      reader.onload = (event) => {                //when image is loaded\n        var image = reader.result as string;\n        if(image){\n          let imageInfo = {\n            id: i,\n            name: name,\n            url: image,\n            blob: file,\n            imghash: null,\n            mname: null,\n            desc: null,\n            creator: null,\n            value: null,\n            date: null,\n            royal: null,\n            metaHash: null\n          };\n          this.FileInfos.push(imageInfo);\n          this.msg = \"Success\";\n\n          //sort alphabetically by name\n          const sorted = this.FileInfos.sort((t1, t2) => {\n          const name1 = t1.name.toLowerCase();\n          const name2 = t2.name.toLowerCase();\n          if (name1 > name2) { return 1; }\n          if (name1 < name2) { return -1; }\n          return 0;\n        })\n      } else { //FileReader returned no url\n          console.log(\"FAIL: File could not be read\");\n          this.msg = \"Fail\";\n          }\n        }; //end onload event\n      } //end for\n    } //end if\n  } // end onClick()\n\n  //file remove button\n  onRemove(imageObj: any) {\n    this.msg = \"\";\n    var index = this.FileInfos.indexOf(imageObj);\n    this.FileInfos.splice(index,1);\n  }\n  //ipfs upload function\n  async ipfsUpload() {\n    this.showform = true;\n    this.ipfscontracts = true;\n    if(this.FileInfos && this.FileInfos[0]) { //if user has selected a file\n      const len = this.FileInfos.length;\n      for(let i = 0; i < len; i++){\n        this.FileInfos[i].imghash = await this.IPFSService.addFile(this.FileInfos[i].blob);\n        console.log(\"FILE ADDED. \\nName: \" + this.FileInfos[i].name + \"\\nHash: \" + this.FileInfos[i].imghash);\n      }\n    }\n  }\n\n  //submit metadata form and convert to JSON form\n  async submitMeta(files: any[], linked: boolean) {\n    if(linked){\n      for(let i=0; i<files.length; i++){\n        let data = {\n          name: this.metaname,\n          description: this.metades,\n          image: \"ipfs://\" + files[i].imghash,\n          ...(this.creator != null && {creator: this.creator}),\n          ...(this.value && {value: this.value}),\n          ...(this.date != null && {date: this.date}),\n          ...(this.royal != null && {royalities: this.royal})\n        }\n        let jsonObj = JSON.stringify(data);\n        console.log(\"JSON metadata: \", jsonObj);\n        files[i].metaHash = await this.IPFSService.addFile(jsonObj);\n      }\n    }else {\n      for(let i=0; i<files.length; i++){\n        let data = {\n          name: files[i].mname,\n          description: files[i].desc,\n          image: \"ipfs://\" + files[i].imghash,\n          ...(this.creator != null && {creator: this.creator}),\n          ...(this.value && {value: this.value}),\n          ...(this.date != null && {date: this.date}),\n          ...(this.royal != null && {royalities: this.royal})\n        }\n        let jsonObj = JSON.stringify(data);\n        console.log(\"JSON metadata: \", jsonObj);\n        files[i].metaHash = await this.IPFSService.addFile(jsonObj);\n      }\n    } // end else\n    //investigate wrapping ipfs files in directory\n    this.showcontracts = true;\n  }\n\n  //display the contracts selections if user pressed submit on ipfs form\n  //or did not use metadata\n  showContracts() {\n    this.showcontracts = true;\n  }\n\n  selectContract() {\n    if(this.contractselection){\n      this.mintingready = true;\n    }\n  }\n\n}\n","<!-- UPLOADING FILES -->\n<div *ngIf=\"showform == false && showcontracts == false\" class=\"all\">\n\n<div class=\"upload\">\n\t<h1> Upload Image(s)</h1>\n\t<input class=\"form-controlfile\" type=\"file\" multiple= \"multiple\" accept=\"image/*\"\n\t\t(change)=\"onChange($event)\">\n\t<button (click)=\"onClick()\" class=\"successbtn\">\n\t\tUpload\n\t</button>\n\t<div class=\"uploadSuccess\" *ngIf=\"msg==='Success'\">\n\t\t\tUpload Successful\n\t</div>\n</div>\n\n<div class=\"preview\" *ngIf=\"FileInfos[0]\">\n\t<h2> Uploaded Files </h2>\n\t<div class=\"file-list\" *ngFor=\"let file of FileInfos; index as i\">\n\t\t<hr>\n\t\t<img [src]=\"file.url\" height=\"50px\" width=\"50px\">\n\t\t<span class=\"name\"> {{file.name}} </span>\n\t\t<button class=\"removebtn\" (click)=\"onRemove(file)\"> X </button>\n\t</div>\n</div>\n</div> <!--- here --->\n\n<!-- Ask if user wants to use IPFS-->\n<div class=\"ipfs\" *ngIf=\"FileInfos[0] && showform==false && showcontracts==false\">\n\t<h1 class=\"ipfsTitle\">Upload images with IPFS metadata?</h1>\n\t<button (click)=\"ipfsUpload()\" class=\"ipfsbtn\"> Yes </button>\n\t<button class=\"noipfsbtns\" (click)=\"showContracts()\"> No </button>\n</div>\n\n<!-- METADATA FORMS -->\n<div class=\"formcontainer\" *ngIf=\"showform==true && showcontracts==false\">\n\t<h1 class=\"metatitle\"> Enter Metadata Information </h1>\n\n\t<label for=\"sameVars\"> Use same metadata for all images: </label>\n\t<input type=\"checkbox\" [(ngModel)]=\"sameVars\" name=\"sameVars\">\n\n\t<div *ngIf=\"!sameVars; else linked\"> <!--use non linked form -->\n\t<form #metaForm=\"ngForm\" (ngSubmit)=\"submitMeta(FileInfos, sameVars)\">\n\t\t<div class=\"innerform\" *ngFor=\"let file of FileInfos; index as i\">\n\t\t<hr>\n\t\t\t<img [src]=\"file.url\" class=\"formimg\" height=\"50px\" width=\"50px\">\n\t\t\t<p class=\"filename\"> {{ file.name }} </p>\n\n\t\t\t\t<div class=\"form-group\">\n  \t\t\t\t<label for=\"metaname_{{file.id}}\">Name:</label>\n  \t\t\t<input type=\"text\" class=\"namefield\" id=\"metaname_{{file.id}}\"\n\t\t\t\t\t\t\t\t[(ngModel)]=\"file.mname\" name=\"name_{{file.id}}\">\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"form-group\">\n  \t\t\t\t<label for=\"metades_{{file.id}}\">Description:</label>\n  \t\t\t\t<input type=\"text\" class=\"desfield\" id=\"metades_{{file.id}}\"\n\t\t\t\t\t\t\t\t [(ngModel)]=\"file.desc\" name=\"description_{{file.id}}\">\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"image-group\">\n\t\t\t\t\t<label for=\"hash_{{file.id}}\"> Image:</label>\n\t\t\t\t\t<input type=\"text\" class=\"imagefield\" name=\"image_{{file.id}}\"\n\t\t\t\t\t\t\t\tvalue=\"{{file.imghash}}\" disabled>\n\t\t\t\t</div>\n\n\t\t\t\t<mat-expansion-panel class=\"panel\">\n    \t\t\t<mat-expansion-panel-header class=\"panelheader\">\n\t\t\t\t\t\t<mat-panel-title>Show Additional Fields</mat-panel-title>\n    \t\t\t\t\t</mat-expansion-panel-header>\n\n\t\t\t\t\t\t<div class=\"creator-group\">\n\t\t\t  \t\t\t<label for=\"creator_{{file.id}}\">Creator:</label>\n\t\t\t  \t\t\t<input type=\"text\" class=\"creatorfield\" id=\"creator_{{file.id}}\"\n\t\t\t\t\t\t\t\t\t\t[(ngModel)]=\"file.creator\" name=\"creator_{{file.id}}\">\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"value-group\">\n\t\t  \t\t\t\t<label for=\"value_{{file.id}}\">Value:</label>\n\t\t  \t\t\t\t<input type=\"text\" class=\"valuefield\" id=\"value_{{file.id}}\"\n\t\t\t\t\t\t\t\t\t\t [(ngModel)]=\"file.value\" name=\"value_{{file.id}}\">\n\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t\t<div class=\"form-group\">\n\t\t  \t\t\t\t<label for=\"date_{{file.id}}\">Minting Date:</label>\n\t\t  \t\t\t\t<input type=\"date\" class=\"datefield\" id=\"date_{{file.id}}\"\n\t\t\t\t\t\t\t\t\t\t [(ngModel)]=\"file.date\" name=\"date_{{file.id}}\">\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t\t<label for=\"royal_{{file.id}}\">Enable Royalities?:</label>\n\t\t\t\t\t\t\t<input type=\"checkbox\" class=\"autofield\" id=\"auto_{{file.id}}\"\n\t\t\t\t\t\t\t\t\t\t [(ngModel)]=\"file.royal\" name=\"royal_{{file.id}}\">\n\t\t\t\t\t\t</div>\n\n  \t\t\t\t</mat-expansion-panel>\n\n\t\t\t\t</div>\n\n\t\t\t\t<button type=\"submit\" class=\"btn-form\" [disabled]=\"!metaForm.form.valid\">Submit</button>\n        <button type=\"button\" class=\"btnresetform\" (click)=\"metaForm.reset()\">Reset</button>\n\n\n\t\t\t</form>\n\t\t\t</div> <!--non-linked form -->\n\n\t\t\t<ng-template #linked> <!--linked form -->\n\t\t\t<form #metaForm=\"ngForm\" (ngSubmit)=\"submitMeta(FileInfos, sameVars)\">\n\t\t\t\t<div class=\"innerform\" *ngFor=\"let file of FileInfos; index as i\">\n\t\t\t\t<hr>\n\t\t\t\t\t<img [src]=\"file.url\" height=\"30px\" width=\"30px\">\n\t\t\t\t\t<p class=\"filename\"> Image: {{ file.name }} </p>\n\n\t\t\t\t\t\t<div class=\"form-group\">\n\t\t  \t\t\t\t<label for=\"metaname_{{file.id}}\">Name:</label>\n\t\t  \t\t\t<input type=\"text\" class=\"namefield\" id=\"metaname_{{file.id}}\"\n\t\t\t\t\t\t\t\t\t\t[(ngModel)]=\"metaname\" name=\"name_{{file.id}}\">\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"form-group\">\n\t\t  \t\t\t\t<label for=\"metades_{{file.id}}\">Description:</label>\n\t\t  \t\t\t\t<input type=\"text\" class=\"desfield\" id=\"metades_{{file.id}}\"\n\t\t\t\t\t\t\t\t\t\t [(ngModel)]=\"metades\" name=\"description_{{file.id}}\">\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"image-group\">\n\t\t\t\t\t\t\t<label for=\"hash_{{file.id}}\"> Image:</label>\n\t\t\t\t\t\t\t<input type=\"text\" class=\"imagefield\" name=\"image_{{file.id}}\"\n\t\t\t\t\t\t\t\t\t\tvalue=\"{{file.imghash}}\" disabled>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<mat-expansion-panel class=\"panel\">\n\t\t    \t\t\t<mat-expansion-panel-header class=\"panelheader\">\n\t\t\t\t\t\t\t\t<mat-panel-title>Show Additional Fields</mat-panel-title>\n\t\t    \t\t\t\t\t</mat-expansion-panel-header>\n\n\t\t\t\t\t\t\t\t<div class=\"creator-group\">\n\t\t\t\t\t  \t\t\t<label for=\"creator_{{file.id}}\">Creator:</label>\n\t\t\t\t\t  \t\t\t<input type=\"text\" class=\"creatorfield\" id=\"creator_{{file.id}}\"\n\t\t\t\t\t\t\t\t\t\t\t\t[(ngModel)]=\"file.creator\" name=\"creator_{{file.id}}\">\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<div class=\"value-group\">\n\t\t\t\t  \t\t\t\t<label for=\"value_{{file.id}}\">Value:</label>\n\t\t\t\t  \t\t\t\t<input type=\"text\" class=\"valuefield\" id=\"value_{{file.id}}\"\n\t\t\t\t\t\t\t\t\t\t\t\t [(ngModel)]=\"file.value\" name=\"value_{{file.id}}\">\n\t\t\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t  \t\t\t\t<label for=\"date_{{file.id}}\">Minting Date:</label>\n\t\t\t\t  \t\t\t\t<input type=\"date\" class=\"datefield\" id=\"date_{{file.id}}\"\n\t\t\t\t\t\t\t\t\t\t\t\t [(ngModel)]=\"file.date\" name=\"date_{{file.id}}\">\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t\t\t\t<label for=\"royal_{{file.id}}\">Enable Royalities?:</label>\n\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" class=\"autofield\" id=\"auto_{{file.id}}\"\n\t\t\t\t\t\t\t\t\t\t\t\t [(ngModel)]=\"file.royal\" name=\"royal_{{file.id}}\">\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t</mat-expansion-panel>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<button type=\"submit\" class=\"btn-form\" [disabled]=\"!metaForm.form.valid\">Submit</button>\n\t\t        <button type=\"button\" class=\"btnresetform\" (click)=\"metaForm.reset()\">Reset</button>\n\n\t\t\t\t</form>\n\t\t\t</ng-template>\n\n\n</div>\n\n<!-- CONTRACTS SELECTION -->\n<!-- maybe move this to contract component when contracts are integrated-->\n<div class=\"contract\" *ngIf=\"showcontracts && mintingready==false\">\n\t<form>\n\t<label for=\"contract\"> <h1> Select Contract: </h1> </label>\n\t<select [(ngModel)]=\"contractselection\" name=\"contract\" id=\"contract\">\n    \t<option *ngIf=\"ipfscontracts\" value=\"IPFSNFT\">NFT Tokens with IPFS metadata</option>\n\t\t\t<option *ngIf=\"ipfscontracts\" value=\"noTransferIPFSNFT\">Non Transferrable NFT Tokens with IPFS metadata</option>\n\t\t\t<option *ngIf=\"!ipfscontracts\" value=\"basicNFT\">NFT Tokens with no metadata</option>\n\t\t\t<option *ngIf=\"!ipfscontracts\" value=\"noTransferbasicNFT\">Non Transferrable NFT Tokens with no metadata</option>\n\t</select>\n\t</form>\n\t<button class=\"contract-btn\" (click)=\"selectContract()\"> Submit </button>\n</div>\n\n<div class=\"child\" *ngIf=\"mintingready\">\n\t<app-mint [filesList]='FileInfos' [userContract]=\"contractselection\"></app-mint>\n\t</div>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}