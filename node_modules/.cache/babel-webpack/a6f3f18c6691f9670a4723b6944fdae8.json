{"ast":null,"code":"'use strict';\n\nvar _asyncToGenerator = require(\"/Users/sydneybailey/Internship/Dapp/node_modules/@babel/runtime/helpers/asyncToGenerator\").default;\n\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option');\n/**\n * @param {Object} config\n * @param {import('../../types').NetworkService} config.network\n */\n\n\nmodule.exports = ({\n  network\n}) => {\n  /**\n   * @type {import('ipfs-core-types/src/swarm').API[\"connect\"]}\n   */\n  function connect(_x) {\n    return _connect.apply(this, arguments);\n  }\n\n  function _connect() {\n    _connect = _asyncToGenerator(function* (addr, options = {}) {\n      const {\n        libp2p\n      } = yield network.use(options);\n      yield libp2p.dial(addr, options);\n    });\n    return _connect.apply(this, arguments);\n  }\n\n  return withTimeoutOption(connect);\n};","map":{"version":3,"sources":["/Users/sydneybailey/Internship/Dapp/node_modules/ipfs-core/src/components/swarm/connect.js"],"names":["withTimeoutOption","require","module","exports","network","connect","addr","options","libp2p","use","dial"],"mappings":"AAAA;;;;AAEA,MAAMA,iBAAiB,GAAGC,OAAO,CAAC,yCAAD,CAAjC;AAEA;AACA;AACA;AACA;;;AACAC,MAAM,CAACC,OAAP,GAAiB,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAChC;AACF;AACA;AAHkC,WAIjBC,OAJiB;AAAA;AAAA;;AAAA;AAAA,iCAIhC,WAAwBC,IAAxB,EAA8BC,OAAO,GAAG,EAAxC,EAA4C;AAC1C,YAAM;AAAEC,QAAAA;AAAF,gBAAmBJ,OAAO,CAACK,GAAR,CAAYF,OAAZ,CAAzB;AACA,YAAMC,MAAM,CAACE,IAAP,CAAYJ,IAAZ,EAAkBC,OAAlB,CAAN;AACD,KAP+B;AAAA;AAAA;;AAShC,SAAOP,iBAAiB,CAACK,OAAD,CAAxB;AACD,CAVD","sourcesContent":["'use strict'\n\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option')\n\n/**\n * @param {Object} config\n * @param {import('../../types').NetworkService} config.network\n */\nmodule.exports = ({ network }) => {\n  /**\n   * @type {import('ipfs-core-types/src/swarm').API[\"connect\"]}\n   */\n  async function connect (addr, options = {}) {\n    const { libp2p } = await network.use(options)\n    await libp2p.dial(addr, options)\n  }\n\n  return withTimeoutOption(connect)\n}\n"]},"metadata":{},"sourceType":"script"}