{"ast":null,"code":"'use strict';\n\nvar _asyncToGenerator = require(\"/Users/sydneybailey/Internship/contract-testing/node_modules/@babel/runtime/helpers/asyncToGenerator\").default;\n\nconst {\n  Multiaddr\n} = require('multiaddr');\n\nconst configure = require('../lib/configure');\n\nconst toUrlSearchParams = require('../lib/to-url-search-params');\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/swarm').API<HTTPClientExtraOptions>} SwarmAPI\n */\n\n\nmodule.exports = configure(api => {\n  /**\n   * @type {SwarmAPI[\"addrs\"]}\n   */\n  function addrs() {\n    return _addrs.apply(this, arguments);\n  }\n\n  function _addrs() {\n    _addrs = _asyncToGenerator(function* (options = {}) {\n      const res = yield api.post('swarm/addrs', {\n        timeout: options.timeout,\n        signal: options.signal,\n        searchParams: toUrlSearchParams(options),\n        headers: options.headers\n      });\n      /** @type {{ Addrs: Record<string, string[]> }} */\n\n      const {\n        Addrs\n      } = yield res.json();\n      return Object.keys(Addrs).map(id => ({\n        id,\n        addrs: (Addrs[id] || []).map(a => new Multiaddr(a))\n      }));\n    });\n    return _addrs.apply(this, arguments);\n  }\n\n  return addrs;\n});","map":null,"metadata":{},"sourceType":"script"}