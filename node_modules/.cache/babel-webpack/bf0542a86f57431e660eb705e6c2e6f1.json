{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"/Users/sydneybailey/Internship/contract-testing/node_modules/@babel/runtime/helpers/asyncToGenerator\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.scheduledModelRun = exports.asyncModelRun = exports.modelRun = void 0;\n\nconst ScheduledCommand_1 = require(\"./commands/ScheduledCommand\");\n\nconst genericModelRun = (s, cmds, initialValue, runCmd, then) => {\n  return s.then(o => {\n    const {\n      model,\n      real\n    } = o;\n    let state = initialValue;\n\n    for (const c of cmds) {\n      state = then(state, () => {\n        return runCmd(c, model, real);\n      });\n    }\n\n    return state;\n  });\n};\n\nconst internalModelRun = (s, cmds) => {\n  const then = (_p, c) => c();\n\n  const setupProducer = {\n    then: fun => {\n      fun(s());\n      return undefined;\n    }\n  };\n\n  const runSync = (cmd, m, r) => {\n    if (cmd.check(m)) cmd.run(m, r);\n    return undefined;\n  };\n\n  return genericModelRun(setupProducer, cmds, undefined, runSync, then);\n};\n\nconst isAsyncSetup = s => {\n  return typeof s.then === 'function';\n};\n\nconst internalAsyncModelRun = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (s, cmds, defaultPromise = Promise.resolve()) {\n    const then = (p, c) => p.then(c);\n\n    const setupProducer = {\n      then: fun => {\n        const out = s();\n        if (isAsyncSetup(out)) return out.then(fun);else return fun(out);\n      }\n    };\n\n    const runAsync = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(function* (cmd, m, r) {\n        if (yield cmd.check(m)) yield cmd.run(m, r);\n      });\n\n      return function runAsync(_x3, _x4, _x5) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    return yield genericModelRun(setupProducer, cmds, defaultPromise, runAsync, then);\n  });\n\n  return function internalAsyncModelRun(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nfunction modelRun(s, cmds) {\n  internalModelRun(s, cmds);\n}\n\nexports.modelRun = modelRun;\n\nfunction asyncModelRun(_x6, _x7) {\n  return _asyncModelRun.apply(this, arguments);\n}\n\nfunction _asyncModelRun() {\n  _asyncModelRun = _asyncToGenerator(function* (s, cmds) {\n    yield internalAsyncModelRun(s, cmds);\n  });\n  return _asyncModelRun.apply(this, arguments);\n}\n\nexports.asyncModelRun = asyncModelRun;\n\nfunction scheduledModelRun(_x8, _x9, _x10) {\n  return _scheduledModelRun.apply(this, arguments);\n}\n\nfunction _scheduledModelRun() {\n  _scheduledModelRun = _asyncToGenerator(function* (scheduler, s, cmds) {\n    const scheduledCommands = ScheduledCommand_1.scheduleCommands(scheduler, cmds);\n    const out = internalAsyncModelRun(s, scheduledCommands, scheduler.schedule(Promise.resolve(), 'startModel'));\n    yield scheduler.waitAll();\n    yield out;\n  });\n  return _scheduledModelRun.apply(this, arguments);\n}\n\nexports.scheduledModelRun = scheduledModelRun;","map":{"version":3,"sources":["/Users/sydneybailey/Internship/contract-testing/node_modules/fast-check/lib/check/model/ModelRunner.js"],"names":["Object","defineProperty","exports","value","scheduledModelRun","asyncModelRun","modelRun","ScheduledCommand_1","require","genericModelRun","s","cmds","initialValue","runCmd","then","o","model","real","state","c","internalModelRun","_p","setupProducer","fun","undefined","runSync","cmd","m","r","check","run","isAsyncSetup","internalAsyncModelRun","defaultPromise","Promise","resolve","p","out","runAsync","scheduler","scheduledCommands","scheduleCommands","schedule","waitAll"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.scheduledModelRun = exports.asyncModelRun = exports.modelRun = void 0;\nconst ScheduledCommand_1 = require(\"./commands/ScheduledCommand\");\nconst genericModelRun = (s, cmds, initialValue, runCmd, then) => {\n    return s.then((o) => {\n        const { model, real } = o;\n        let state = initialValue;\n        for (const c of cmds) {\n            state = then(state, () => {\n                return runCmd(c, model, real);\n            });\n        }\n        return state;\n    });\n};\nconst internalModelRun = (s, cmds) => {\n    const then = (_p, c) => c();\n    const setupProducer = {\n        then: (fun) => {\n            fun(s());\n            return undefined;\n        },\n    };\n    const runSync = (cmd, m, r) => {\n        if (cmd.check(m))\n            cmd.run(m, r);\n        return undefined;\n    };\n    return genericModelRun(setupProducer, cmds, undefined, runSync, then);\n};\nconst isAsyncSetup = (s) => {\n    return typeof s.then === 'function';\n};\nconst internalAsyncModelRun = async (s, cmds, defaultPromise = Promise.resolve()) => {\n    const then = (p, c) => p.then(c);\n    const setupProducer = {\n        then: (fun) => {\n            const out = s();\n            if (isAsyncSetup(out))\n                return out.then(fun);\n            else\n                return fun(out);\n        },\n    };\n    const runAsync = async (cmd, m, r) => {\n        if (await cmd.check(m))\n            await cmd.run(m, r);\n    };\n    return await genericModelRun(setupProducer, cmds, defaultPromise, runAsync, then);\n};\nfunction modelRun(s, cmds) {\n    internalModelRun(s, cmds);\n}\nexports.modelRun = modelRun;\nasync function asyncModelRun(s, cmds) {\n    await internalAsyncModelRun(s, cmds);\n}\nexports.asyncModelRun = asyncModelRun;\nasync function scheduledModelRun(scheduler, s, cmds) {\n    const scheduledCommands = ScheduledCommand_1.scheduleCommands(scheduler, cmds);\n    const out = internalAsyncModelRun(s, scheduledCommands, scheduler.schedule(Promise.resolve(), 'startModel'));\n    await scheduler.waitAll();\n    await out;\n}\nexports.scheduledModelRun = scheduledModelRun;\n"]},"metadata":{},"sourceType":"script"}