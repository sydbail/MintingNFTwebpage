{"ast":null,"code":"import _awaitAsyncGenerator from \"/Users/sydneybailey/Internship/Demo/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator\";\nimport _wrapAsyncGenerator from \"/Users/sydneybailey/Internship/Demo/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator\";\n\nconst directoryContent = (cid, node, unixfs, path, resolve, depth, blockstore) => {\n  function yieldDirectoryContent() {\n    return _yieldDirectoryContent.apply(this, arguments);\n  }\n\n  function _yieldDirectoryContent() {\n    _yieldDirectoryContent = _wrapAsyncGenerator(function* (options = {}) {\n      const offset = options.offset || 0;\n      const length = options.length || node.Links.length;\n      const links = node.Links.slice(offset, length);\n\n      for (const link of links) {\n        const result = yield _awaitAsyncGenerator(resolve(link.Hash, link.Name || '', `${path}/${link.Name || ''}`, [], depth + 1, blockstore, options));\n\n        if (result.entry) {\n          yield result.entry;\n        }\n      }\n    });\n    return _yieldDirectoryContent.apply(this, arguments);\n  }\n\n  return yieldDirectoryContent;\n};\n\nexport default directoryContent;","map":{"version":3,"sources":["/Users/sydneybailey/Internship/Demo/node_modules/ipfs-unixfs-exporter/esm/src/resolvers/unixfs-v1/content/directory.js"],"names":["directoryContent","cid","node","unixfs","path","resolve","depth","blockstore","yieldDirectoryContent","options","offset","length","Links","links","slice","link","result","Hash","Name","entry"],"mappings":";;;AAAA,MAAMA,gBAAgB,GAAG,CAACC,GAAD,EAAMC,IAAN,EAAYC,MAAZ,EAAoBC,IAApB,EAA0BC,OAA1B,EAAmCC,KAAnC,EAA0CC,UAA1C,KAAyD;AAAA,WAChEC,qBADgE;AAAA;AAAA;;AAAA;AAAA,iDAChF,WAAsCC,OAAO,GAAG,EAAhD,EAAoD;AAClD,YAAMC,MAAM,GAAGD,OAAO,CAACC,MAAR,IAAkB,CAAjC;AACA,YAAMC,MAAM,GAAGF,OAAO,CAACE,MAAR,IAAkBT,IAAI,CAACU,KAAL,CAAWD,MAA5C;AACA,YAAME,KAAK,GAAGX,IAAI,CAACU,KAAL,CAAWE,KAAX,CAAiBJ,MAAjB,EAAyBC,MAAzB,CAAd;;AACA,WAAK,MAAMI,IAAX,IAAmBF,KAAnB,EAA0B;AACxB,cAAMG,MAAM,8BAASX,OAAO,CAACU,IAAI,CAACE,IAAN,EAAYF,IAAI,CAACG,IAAL,IAAa,EAAzB,EAA8B,GAAGd,IAAM,IAAIW,IAAI,CAACG,IAAL,IAAa,EAAI,EAA5D,EAA+D,EAA/D,EAAmEZ,KAAK,GAAG,CAA3E,EAA8EC,UAA9E,EAA0FE,OAA1F,CAAhB,CAAZ;;AACA,YAAIO,MAAM,CAACG,KAAX,EAAkB;AAChB,gBAAMH,MAAM,CAACG,KAAb;AACD;AACF;AACF,KAX+E;AAAA;AAAA;;AAYhF,SAAOX,qBAAP;AACD,CAbD;;AAcA,eAAeR,gBAAf","sourcesContent":["const directoryContent = (cid, node, unixfs, path, resolve, depth, blockstore) => {\n  async function* yieldDirectoryContent(options = {}) {\n    const offset = options.offset || 0;\n    const length = options.length || node.Links.length;\n    const links = node.Links.slice(offset, length);\n    for (const link of links) {\n      const result = await resolve(link.Hash, link.Name || '', `${ path }/${ link.Name || '' }`, [], depth + 1, blockstore, options);\n      if (result.entry) {\n        yield result.entry;\n      }\n    }\n  }\n  return yieldDirectoryContent;\n};\nexport default directoryContent;"]},"metadata":{},"sourceType":"module"}