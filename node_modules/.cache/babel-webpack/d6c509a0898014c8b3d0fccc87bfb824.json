{"ast":null,"code":"'use strict';\n\nvar _asyncToGenerator = require(\"/Users/sydneybailey/Internship/contract-testing/node_modules/@babel/runtime/helpers/asyncToGenerator\").default;\n\nconst Envelope = require('./envelope');\n\nconst PeerRecord = require('./peer-record');\n/**\n * @typedef {import('../')} Libp2p\n */\n\n/**\n * Create (or update if existing) self peer record and store it in the AddressBook.\n *\n * @param {Libp2p} libp2p\n * @returns {Promise<void>}\n */\n\n\nfunction updateSelfPeerRecord(_x) {\n  return _updateSelfPeerRecord.apply(this, arguments);\n}\n\nfunction _updateSelfPeerRecord() {\n  _updateSelfPeerRecord = _asyncToGenerator(function* (libp2p) {\n    const peerRecord = new PeerRecord({\n      peerId: libp2p.peerId,\n      multiaddrs: libp2p.multiaddrs\n    });\n    const envelope = yield Envelope.seal(peerRecord, libp2p.peerId);\n    libp2p.peerStore.addressBook.consumePeerRecord(envelope);\n  });\n  return _updateSelfPeerRecord.apply(this, arguments);\n}\n\nmodule.exports.updateSelfPeerRecord = updateSelfPeerRecord;","map":null,"metadata":{},"sourceType":"script"}