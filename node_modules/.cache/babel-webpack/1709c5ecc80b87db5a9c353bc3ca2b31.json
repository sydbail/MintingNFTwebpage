{"ast":null,"code":"import _asyncToGenerator from \"/Users/sydneybailey/Internship/js-ipfs-examples/examples/browser-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"!/Users/sydneybailey/Internship/js-ipfs-examples/examples/browser-angular/node_modules/@ngtools/webpack/src/loaders/direct-resource.js!./app.component.html\";\nimport __NG_CLI_RESOURCE__1 from \"./app.component.css\";\nimport { Component } from '@angular/core';\nimport { IpfsService } from './ipfs.service';\nlet AppComponent = class AppComponent {\n  IPFSService;\n  title = 'browser-angular';\n  id = null;\n  version = null;\n  status = null;\n\n  constructor(IPFSService) {\n    this.IPFSService = IPFSService;\n  }\n\n  ngOnInit() {\n    this.start();\n  }\n\n  start() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const id = yield _this.IPFSService.getId();\n      _this.id = id.id;\n      const version = yield _this.IPFSService.getVersion();\n      _this.version = version.version;\n      const status = yield _this.IPFSService.getStatus();\n      _this.status = status ? 'Online' : 'Offline';\n    })();\n  }\n\n  static ctorParameters = () => [{\n    type: IpfsService\n  }];\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], AppComponent);\nexport { AppComponent };","map":{"version":3,"sources":["/Users/sydneybailey/Internship/js-ipfs-examples/examples/browser-angular/src/app/app.component.ts"],"names":[],"mappings":";;;;AAAA,SAAS,SAAT,QAAkC,eAAlC;AACA,SAAS,WAAT,QAA4B,gBAA5B;IAOa,YAAY,GAAA,MAAZ,YAAY,CAAA;AAMH,EAAA,WAAA;AALpB,EAAA,KAAK,GAAG,iBAAH;AACL,EAAA,EAAE,GAAkB,IAAlB;AACF,EAAA,OAAO,GAAmB,IAAnB;AACP,EAAA,MAAM,GAAmB,IAAnB;;AAEN,EAAA,WAAA,CAAoB,WAApB,EAA4C;AAAxB,SAAA,WAAA,GAAA,WAAA;AAA4B;;AAEhD,EAAA,QAAQ,GAAA;AACN,SAAK,KAAL;AACD;;AAEK,EAAA,KAAK,GAAA;AAAA;;AAAA;AACT,YAAM,EAAE,SAAS,KAAI,CAAC,WAAL,CAAiB,KAAjB,EAAjB;AACA,MAAA,KAAI,CAAC,EAAL,GAAU,EAAE,CAAC,EAAb;AAEA,YAAM,OAAO,SAAS,KAAI,CAAC,WAAL,CAAiB,UAAjB,EAAtB;AACA,MAAA,KAAI,CAAC,OAAL,GAAe,OAAO,CAAC,OAAvB;AAEA,YAAM,MAAM,SAAS,KAAI,CAAC,WAAL,CAAiB,SAAjB,EAArB;AACA,MAAA,KAAI,CAAC,MAAL,GAAc,MAAM,GAAG,QAAH,GAAc,SAAlC;AARS;AASV;;;UA5BM;;AAOgB,C;AAAZ,YAAY,GAAA,UAAA,CAAA,CALxB,SAAS,CAAC;AACT,EAAA,QAAQ,EAAE,UADD;AAET,EAAA,QAAA,EAAA,oBAFS;;AAAA,CAAD,CAKe,CAAA,EAAZ,YAAY,CAAZ;SAAA,Y","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { IpfsService } from './ipfs.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'browser-angular';\n  id: string | null = null;\n  version: string | null  = null;\n  status: string | null  = null;\n\n  constructor(private IPFSService: IpfsService) {}\n\n  ngOnInit() {\n    this.start();\n  }\n\n  async start() {\n    const id = await this.IPFSService.getId();\n    this.id = id.id;\n\n    const version = await this.IPFSService.getVersion();\n    this.version = version.version\n\n    const status = await this.IPFSService.getStatus();\n    this.status = status ? 'Online' : 'Offline'\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}