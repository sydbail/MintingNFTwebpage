{"ast":null,"code":"'use strict';\n\nvar _asyncToGenerator = require(\"/Users/sydneybailey/Internship/contract-testing/node_modules/@babel/runtime/helpers/asyncToGenerator\").default;\n\nconst {\n  Key\n} = require('interface-datastore');\n\nconst MFS_ROOT_KEY = new Key('/local/filesroot');\n/**\n * @param {import('../../src/types').Backends} backends\n * @param {import('../../src/types').MigrationProgressCallback} onProgress\n */\n\nfunction storeMfsRootInDatastore(_x) {\n  return _storeMfsRootInDatastore.apply(this, arguments);\n}\n/**\n * @param {import('../../src/types').Backends} backends\n * @param {import('../../src/types').MigrationProgressCallback} onProgress\n */\n\n\nfunction _storeMfsRootInDatastore() {\n  _storeMfsRootInDatastore = _asyncToGenerator(function* (backends, onProgress = () => {}) {\n    onProgress(100, 'Migrating MFS root to repo datastore');\n    yield backends.root.open();\n    yield backends.datastore.open();\n    const root = yield backends.root.get(MFS_ROOT_KEY);\n    yield backends.datastore.put(MFS_ROOT_KEY, root);\n    yield backends.root.delete(MFS_ROOT_KEY);\n    yield backends.datastore.close();\n    yield backends.root.close();\n    onProgress(100, 'Stored MFS root in repo datastore');\n  });\n  return _storeMfsRootInDatastore.apply(this, arguments);\n}\n\nfunction storeMfsRootInRoot(_x2) {\n  return _storeMfsRootInRoot.apply(this, arguments);\n}\n/** @type {import('../../src/types').Migration} */\n\n\nfunction _storeMfsRootInRoot() {\n  _storeMfsRootInRoot = _asyncToGenerator(function* (backends, onProgress = () => {}) {\n    onProgress(100, 'Migrating MFS root to repo root datastore');\n    yield backends.root.open();\n    yield backends.datastore.open();\n    const root = yield backends.datastore.get(MFS_ROOT_KEY);\n    yield backends.root.put(MFS_ROOT_KEY, root);\n    yield backends.datastore.delete(MFS_ROOT_KEY);\n    yield backends.datastore.close();\n    yield backends.root.close();\n    onProgress(100, 'Stored MFS root in repo root datastore');\n  });\n  return _storeMfsRootInRoot.apply(this, arguments);\n}\n\nmodule.exports = {\n  version: 11,\n  description: 'Store mfs root in the datastore',\n  migrate: storeMfsRootInDatastore,\n  revert: storeMfsRootInRoot\n};","map":null,"metadata":{},"sourceType":"script"}