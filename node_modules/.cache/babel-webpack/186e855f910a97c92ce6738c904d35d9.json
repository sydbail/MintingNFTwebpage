{"ast":null,"code":"'use strict';\n\nvar _asyncToGenerator = require(\"/Users/sydneybailey/Internship/Dapp/node_modules/@babel/runtime/helpers/asyncToGenerator\").default;\n\nconst configure = require('../lib/configure');\n\nconst toUrlSearchParams = require('../lib/to-url-search-params');\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\n\nmodule.exports = configure(api => {\n  /**\n   * @type {FilesAPI[\"mv\"]}\n   */\n  function mv(_x, _x2) {\n    return _mv.apply(this, arguments);\n  }\n\n  function _mv() {\n    _mv = _asyncToGenerator(function* (sources, destination, options = {}) {\n      if (!Array.isArray(sources)) {\n        sources = [sources];\n      }\n\n      const res = yield api.post('files/mv', {\n        timeout: options.timeout,\n        signal: options.signal,\n        searchParams: toUrlSearchParams({\n          arg: sources.concat(destination),\n          ...options\n        }),\n        headers: options.headers\n      });\n      yield res.text();\n    });\n    return _mv.apply(this, arguments);\n  }\n\n  return mv;\n});","map":{"version":3,"sources":["/Users/sydneybailey/Internship/Dapp/node_modules/ipfs-http-client/src/files/mv.js"],"names":["configure","require","toUrlSearchParams","module","exports","api","mv","sources","destination","options","Array","isArray","res","post","timeout","signal","searchParams","arg","concat","headers","text"],"mappings":"AAAA;;;;AAEA,MAAMA,SAAS,GAAGC,OAAO,CAAC,kBAAD,CAAzB;;AACA,MAAMC,iBAAiB,GAAGD,OAAO,CAAC,6BAAD,CAAjC;AAEA;AACA;AACA;AACA;;;AAEAE,MAAM,CAACC,OAAP,GAAiBJ,SAAS,CAACK,GAAG,IAAI;AAChC;AACF;AACA;AAHkC,WAIjBC,EAJiB;AAAA;AAAA;;AAAA;AAAA,4BAIhC,WAAmBC,OAAnB,EAA4BC,WAA5B,EAAyCC,OAAO,GAAG,EAAnD,EAAuD;AACrD,UAAI,CAACC,KAAK,CAACC,OAAN,CAAcJ,OAAd,CAAL,EAA6B;AAC3BA,QAAAA,OAAO,GAAG,CAACA,OAAD,CAAV;AACD;;AAED,YAAMK,GAAG,SAASP,GAAG,CAACQ,IAAJ,CAAS,UAAT,EAAqB;AACrCC,QAAAA,OAAO,EAAEL,OAAO,CAACK,OADoB;AAErCC,QAAAA,MAAM,EAAEN,OAAO,CAACM,MAFqB;AAGrCC,QAAAA,YAAY,EAAEd,iBAAiB,CAAC;AAC9Be,UAAAA,GAAG,EAAEV,OAAO,CAACW,MAAR,CAAeV,WAAf,CADyB;AAE9B,aAAGC;AAF2B,SAAD,CAHM;AAOrCU,QAAAA,OAAO,EAAEV,OAAO,CAACU;AAPoB,OAArB,CAAlB;AASA,YAAMP,GAAG,CAACQ,IAAJ,EAAN;AACD,KAnB+B;AAAA;AAAA;;AAqBhC,SAAOd,EAAP;AACD,CAtByB,CAA1B","sourcesContent":["'use strict'\n\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {FilesAPI[\"mv\"]}\n   */\n  async function mv (sources, destination, options = {}) {\n    if (!Array.isArray(sources)) {\n      sources = [sources]\n    }\n\n    const res = await api.post('files/mv', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: sources.concat(destination),\n        ...options\n      }),\n      headers: options.headers\n    })\n    await res.text()\n  }\n\n  return mv\n})\n"]},"metadata":{},"sourceType":"script"}