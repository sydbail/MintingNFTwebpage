{"ast":null,"code":"'use strict';\n\nconst createPublishAPI = require('./publish');\n\nconst createResolveAPI = require('./resolve');\n\nconst PubSubAPI = require('./pubsub');\n\nclass NameAPI {\n  /**\n   * @param {Object} config\n   * @param {import('../ipns')} config.ipns\n   * @param {import('peer-id')} config.peerId\n   * @param {import('../../types').Options} config.options\n   * @param {import('ipfs-repo').IPFSRepo} config.repo\n   * @param {import('ipfs-core-utils/src/multicodecs')} config.codecs\n   * @param {import('ipfs-core-types/src/root').API[\"isOnline\"]} config.isOnline\n   * @param {import('libp2p/src/keychain')} config.keychain\n   * @param {import('ipfs-core-types/src/root').API[\"dns\"]} config.dns\n   */\n  constructor({\n    dns,\n    ipns,\n    repo,\n    codecs,\n    peerId,\n    isOnline,\n    keychain,\n    options\n  }) {\n    this.publish = createPublishAPI({\n      ipns,\n      repo,\n      codecs,\n      peerId,\n      isOnline,\n      keychain\n    });\n    this.resolve = createResolveAPI({\n      dns,\n      ipns,\n      peerId,\n      isOnline,\n      options\n    });\n    this.pubsub = new PubSubAPI({\n      ipns,\n      options\n    });\n  }\n\n}\n\nmodule.exports = NameAPI;","map":null,"metadata":{},"sourceType":"script"}