{"ast":null,"code":"'use strict';\n\nvar _asyncToGenerator = require(\"/Users/sydneybailey/Internship/contract-testing/node_modules/@babel/runtime/helpers/asyncToGenerator\").default;\n\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option');\n/**\n * @param {Object} config\n * @param {import('libp2p/src/keychain')} config.keychain\n */\n\n\nmodule.exports = ({\n  keychain\n}) => {\n  /**\n   * @type {import('ipfs-core-types/src/key').API[\"rename\"]}\n   */\n  const rename = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator(function* (oldName, newName) {\n      const key = yield keychain.renameKey(oldName, newName);\n      return {\n        was: oldName,\n        now: key.name,\n        id: key.id,\n        overwrite: false\n      };\n    });\n\n    return function rename(_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return withTimeoutOption(rename);\n};","map":null,"metadata":{},"sourceType":"script"}