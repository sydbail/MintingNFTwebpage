{"ast":null,"code":"'use strict';\n\nvar _asyncToGenerator = require(\"/Users/sydneybailey/Internship/Dapp/node_modules/@babel/runtime/helpers/asyncToGenerator\").default;\n\nconst toCamel = require('../lib/object-to-camel');\n\nconst configure = require('../lib/configure');\n\nconst toUrlSearchParams = require('../lib/to-url-search-params');\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/log').API<HTTPClientExtraOptions>} LogAPI\n */\n\n\nmodule.exports = configure(api => {\n  /**\n   * @type {LogAPI[\"level\"]}\n   */\n  function level(_x, _x2) {\n    return _level.apply(this, arguments);\n  }\n\n  function _level() {\n    _level = _asyncToGenerator(function* (subsystem, level, options = {}) {\n      const res = yield api.post('log/level', {\n        timeout: options.timeout,\n        signal: options.signal,\n        searchParams: toUrlSearchParams({\n          arg: [subsystem, level],\n          ...options\n        }),\n        headers: options.headers\n      });\n      return toCamel(yield res.json());\n    });\n    return _level.apply(this, arguments);\n  }\n\n  return level;\n});","map":{"version":3,"sources":["/Users/sydneybailey/Internship/Dapp/node_modules/ipfs-http-client/src/log/level.js"],"names":["toCamel","require","configure","toUrlSearchParams","module","exports","api","level","subsystem","options","res","post","timeout","signal","searchParams","arg","headers","json"],"mappings":"AAAA;;;;AAEA,MAAMA,OAAO,GAAGC,OAAO,CAAC,wBAAD,CAAvB;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,kBAAD,CAAzB;;AACA,MAAME,iBAAiB,GAAGF,OAAO,CAAC,6BAAD,CAAjC;AAEA;AACA;AACA;AACA;;;AAEAG,MAAM,CAACC,OAAP,GAAiBH,SAAS,CAACI,GAAG,IAAI;AAChC;AACF;AACA;AAHkC,WAIjBC,KAJiB;AAAA;AAAA;;AAAA;AAAA,+BAIhC,WAAsBC,SAAtB,EAAiCD,KAAjC,EAAwCE,OAAO,GAAG,EAAlD,EAAsD;AACpD,YAAMC,GAAG,SAASJ,GAAG,CAACK,IAAJ,CAAS,WAAT,EAAsB;AACtCC,QAAAA,OAAO,EAAEH,OAAO,CAACG,OADqB;AAEtCC,QAAAA,MAAM,EAAEJ,OAAO,CAACI,MAFsB;AAGtCC,QAAAA,YAAY,EAAEX,iBAAiB,CAAC;AAC9BY,UAAAA,GAAG,EAAE,CACHP,SADG,EAEHD,KAFG,CADyB;AAK9B,aAAGE;AAL2B,SAAD,CAHO;AAUtCO,QAAAA,OAAO,EAAEP,OAAO,CAACO;AAVqB,OAAtB,CAAlB;AAaA,aAAOhB,OAAO,OAAOU,GAAG,CAACO,IAAJ,EAAP,CAAd;AACD,KAnB+B;AAAA;AAAA;;AAoBhC,SAAOV,KAAP;AACD,CArByB,CAA1B","sourcesContent":["'use strict'\n\nconst toCamel = require('../lib/object-to-camel')\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/log').API<HTTPClientExtraOptions>} LogAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {LogAPI[\"level\"]}\n   */\n  async function level (subsystem, level, options = {}) {\n    const res = await api.post('log/level', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: [\n          subsystem,\n          level\n        ],\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    return toCamel(await res.json())\n  }\n  return level\n})\n"]},"metadata":{},"sourceType":"script"}