{"ast":null,"code":"'use strict';\n\nvar _asyncToGenerator = require(\"/Users/sydneybailey/Internship/Demo/node_modules/@babel/runtime/helpers/asyncToGenerator\").default;\n\nconst {\n  CID\n} = require('multiformats/cid');\n\nconst configure = require('../lib/configure');\n\nconst toUrlSearchParams = require('../lib/to-url-search-params');\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/object').API<HTTPClientExtraOptions>} ObjectAPI\n */\n\n\nmodule.exports = configure(api => {\n  /**\n   * @type {ObjectAPI[\"links\"]}\n   */\n  function links(_x) {\n    return _links.apply(this, arguments);\n  }\n\n  function _links() {\n    _links = _asyncToGenerator(function* (cid, options = {}) {\n      const res = yield api.post('object/links', {\n        timeout: options.timeout,\n        signal: options.signal,\n        searchParams: toUrlSearchParams({\n          arg: `${cid instanceof Uint8Array ? CID.decode(cid) : cid}`,\n          ...options\n        }),\n        headers: options.headers\n      });\n      const data = yield res.json();\n      return (data.Links || []).map((\n      /** @type {any} */\n      l) => ({\n        Name: l.Name,\n        Tsize: l.Size,\n        Hash: CID.parse(l.Hash)\n      }));\n    });\n    return _links.apply(this, arguments);\n  }\n\n  return links;\n});","map":{"version":3,"sources":["/Users/sydneybailey/Internship/Demo/node_modules/ipfs-http-client/src/object/links.js"],"names":["CID","require","configure","toUrlSearchParams","module","exports","api","links","cid","options","res","post","timeout","signal","searchParams","arg","Uint8Array","decode","headers","data","json","Links","map","l","Name","Tsize","Size","Hash","parse"],"mappings":"AAAA;;;;AAEA,MAAM;AAAEA,EAAAA;AAAF,IAAUC,OAAO,CAAC,kBAAD,CAAvB;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,kBAAD,CAAzB;;AACA,MAAME,iBAAiB,GAAGF,OAAO,CAAC,6BAAD,CAAjC;AAEA;AACA;AACA;AACA;;;AAEAG,MAAM,CAACC,OAAP,GAAiBH,SAAS,CAACI,GAAG,IAAI;AAChC;AACF;AACA;AAHkC,WAIjBC,KAJiB;AAAA;AAAA;;AAAA;AAAA,+BAIhC,WAAsBC,GAAtB,EAA2BC,OAAO,GAAG,EAArC,EAAyC;AACvC,YAAMC,GAAG,SAASJ,GAAG,CAACK,IAAJ,CAAS,cAAT,EAAyB;AACzCC,QAAAA,OAAO,EAAEH,OAAO,CAACG,OADwB;AAEzCC,QAAAA,MAAM,EAAEJ,OAAO,CAACI,MAFyB;AAGzCC,QAAAA,YAAY,EAAEX,iBAAiB,CAAC;AAC9BY,UAAAA,GAAG,EAAG,GAAEP,GAAG,YAAYQ,UAAf,GAA4BhB,GAAG,CAACiB,MAAJ,CAAWT,GAAX,CAA5B,GAA8CA,GAAI,EAD5B;AAE9B,aAAGC;AAF2B,SAAD,CAHU;AAOzCS,QAAAA,OAAO,EAAET,OAAO,CAACS;AAPwB,OAAzB,CAAlB;AASA,YAAMC,IAAI,SAAST,GAAG,CAACU,IAAJ,EAAnB;AAEA,aAAO,CAACD,IAAI,CAACE,KAAL,IAAc,EAAf,EAAmBC,GAAnB,CAAuB;AAAC;AAAmBC,MAAAA,CAApB,MAA2B;AACvDC,QAAAA,IAAI,EAAED,CAAC,CAACC,IAD+C;AAEvDC,QAAAA,KAAK,EAAEF,CAAC,CAACG,IAF8C;AAGvDC,QAAAA,IAAI,EAAE3B,GAAG,CAAC4B,KAAJ,CAAUL,CAAC,CAACI,IAAZ;AAHiD,OAA3B,CAAvB,CAAP;AAKD,KArB+B;AAAA;AAAA;;AAsBhC,SAAOpB,KAAP;AACD,CAvByB,CAA1B","sourcesContent":["'use strict'\n\nconst { CID } = require('multiformats/cid')\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/object').API<HTTPClientExtraOptions>} ObjectAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {ObjectAPI[\"links\"]}\n   */\n  async function links (cid, options = {}) {\n    const res = await api.post('object/links', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${cid instanceof Uint8Array ? CID.decode(cid) : cid}`,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return (data.Links || []).map((/** @type {any} */ l) => ({\n      Name: l.Name,\n      Tsize: l.Size,\n      Hash: CID.parse(l.Hash)\n    }))\n  }\n  return links\n})\n"]},"metadata":{},"sourceType":"script"}