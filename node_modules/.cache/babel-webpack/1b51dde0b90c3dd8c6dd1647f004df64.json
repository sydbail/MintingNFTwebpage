{"ast":null,"code":"'use strict';\n\nvar _asyncToGenerator = require(\"/Users/sydneybailey/Internship/contract-testing/node_modules/@babel/runtime/helpers/asyncToGenerator\").default;\n\nconst log = require('debug')('ipfs:mfs:utils:update-mfs-root');\n\nconst {\n  MFS_ROOT_KEY\n} = require('../../../utils');\n\nconst errCode = require('err-code');\n/**\n * @typedef {import('../').MfsContext} MfsContext\n */\n\n/**\n * @param {MfsContext} context\n * @param {import('multiformats/cid').CID} cid\n * @param {import('ipfs-core-types/src/utils').AbortOptions} options\n */\n\n\nconst updateMfsRoot = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (context, cid, options) {\n    if (options && options.signal && options.signal.aborted) {\n      throw errCode(new Error('Request aborted'), 'ERR_ABORTED', {\n        name: 'Aborted'\n      });\n    }\n\n    log(`New MFS root will be ${cid}`);\n    yield context.repo.datastore.put(MFS_ROOT_KEY, cid.bytes);\n    return cid;\n  });\n\n  return function updateMfsRoot(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nmodule.exports = updateMfsRoot;","map":null,"metadata":{},"sourceType":"script"}