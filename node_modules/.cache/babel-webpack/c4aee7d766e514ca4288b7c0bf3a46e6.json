{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"/Users/sydneybailey/Internship/contract-testing/node_modules/@babel/runtime/helpers/asyncToGenerator\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AsyncProperty = void 0;\n\nconst PreconditionFailure_1 = require(\"../precondition/PreconditionFailure\");\n\nconst IRawProperty_1 = require(\"./IRawProperty\");\n\nconst GlobalParameters_1 = require(\"../runner/configuration/GlobalParameters\");\n\nconst ConverterFromNext_1 = require(\"../arbitrary/definition/ConverterFromNext\");\n\nclass AsyncProperty {\n  constructor(arb, predicate) {\n    this.arb = arb;\n    this.predicate = predicate;\n\n    this.isAsync = () => true;\n\n    const {\n      asyncBeforeEach,\n      asyncAfterEach,\n      beforeEach,\n      afterEach\n    } = GlobalParameters_1.readConfigureGlobal() || {};\n\n    if (asyncBeforeEach !== undefined && beforeEach !== undefined) {\n      throw Error('Global \"asyncBeforeEach\" and \"beforeEach\" parameters can\\'t be set at the same time when running async properties');\n    }\n\n    if (asyncAfterEach !== undefined && afterEach !== undefined) {\n      throw Error('Global \"asyncAfterEach\" and \"afterEach\" parameters can\\'t be set at the same time when running async properties');\n    }\n\n    this.beforeEachHook = asyncBeforeEach || beforeEach || AsyncProperty.dummyHook;\n    this.afterEachHook = asyncAfterEach || afterEach || AsyncProperty.dummyHook;\n  }\n\n  generate(mrng, runId) {\n    if (ConverterFromNext_1.ConverterFromNext.isConverterFromNext(this.arb)) {\n      return this.arb.toShrinkable(this.arb.arb.generate(mrng, runId != null ? IRawProperty_1.runIdToFrequency(runId) : undefined));\n    }\n\n    return runId != null ? this.arb.withBias(IRawProperty_1.runIdToFrequency(runId)).generate(mrng) : this.arb.generate(mrng);\n  }\n\n  run(v) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this.beforeEachHook();\n\n      try {\n        const output = yield _this.predicate(v);\n        return output == null || output === true ? null : 'Property failed by returning false';\n      } catch (err) {\n        if (PreconditionFailure_1.PreconditionFailure.isFailure(err)) return err;\n        if (err instanceof Error && err.stack) return `${err}\\n\\nStack trace: ${err.stack}`;\n        return `${err}`;\n      } finally {\n        yield _this.afterEachHook();\n      }\n    })();\n  }\n\n  beforeEach(hookFunction) {\n    const previousBeforeEachHook = this.beforeEachHook;\n\n    this.beforeEachHook = () => hookFunction(previousBeforeEachHook);\n\n    return this;\n  }\n\n  afterEach(hookFunction) {\n    const previousAfterEachHook = this.afterEachHook;\n\n    this.afterEachHook = () => hookFunction(previousAfterEachHook);\n\n    return this;\n  }\n\n}\n\nexports.AsyncProperty = AsyncProperty;\n\nAsyncProperty.dummyHook = () => {};","map":{"version":3,"sources":["/Users/sydneybailey/Internship/contract-testing/node_modules/fast-check/lib/check/property/AsyncProperty.generic.js"],"names":["Object","defineProperty","exports","value","AsyncProperty","PreconditionFailure_1","require","IRawProperty_1","GlobalParameters_1","ConverterFromNext_1","constructor","arb","predicate","isAsync","asyncBeforeEach","asyncAfterEach","beforeEach","afterEach","readConfigureGlobal","undefined","Error","beforeEachHook","dummyHook","afterEachHook","generate","mrng","runId","ConverterFromNext","isConverterFromNext","toShrinkable","runIdToFrequency","withBias","run","v","output","err","PreconditionFailure","isFailure","stack","hookFunction","previousBeforeEachHook","previousAfterEachHook"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AsyncProperty = void 0;\nconst PreconditionFailure_1 = require(\"../precondition/PreconditionFailure\");\nconst IRawProperty_1 = require(\"./IRawProperty\");\nconst GlobalParameters_1 = require(\"../runner/configuration/GlobalParameters\");\nconst ConverterFromNext_1 = require(\"../arbitrary/definition/ConverterFromNext\");\nclass AsyncProperty {\n    constructor(arb, predicate) {\n        this.arb = arb;\n        this.predicate = predicate;\n        this.isAsync = () => true;\n        const { asyncBeforeEach, asyncAfterEach, beforeEach, afterEach } = GlobalParameters_1.readConfigureGlobal() || {};\n        if (asyncBeforeEach !== undefined && beforeEach !== undefined) {\n            throw Error('Global \"asyncBeforeEach\" and \"beforeEach\" parameters can\\'t be set at the same time when running async properties');\n        }\n        if (asyncAfterEach !== undefined && afterEach !== undefined) {\n            throw Error('Global \"asyncAfterEach\" and \"afterEach\" parameters can\\'t be set at the same time when running async properties');\n        }\n        this.beforeEachHook = asyncBeforeEach || beforeEach || AsyncProperty.dummyHook;\n        this.afterEachHook = asyncAfterEach || afterEach || AsyncProperty.dummyHook;\n    }\n    generate(mrng, runId) {\n        if (ConverterFromNext_1.ConverterFromNext.isConverterFromNext(this.arb)) {\n            return this.arb.toShrinkable(this.arb.arb.generate(mrng, runId != null ? IRawProperty_1.runIdToFrequency(runId) : undefined));\n        }\n        return runId != null ? this.arb.withBias(IRawProperty_1.runIdToFrequency(runId)).generate(mrng) : this.arb.generate(mrng);\n    }\n    async run(v) {\n        await this.beforeEachHook();\n        try {\n            const output = await this.predicate(v);\n            return output == null || output === true ? null : 'Property failed by returning false';\n        }\n        catch (err) {\n            if (PreconditionFailure_1.PreconditionFailure.isFailure(err))\n                return err;\n            if (err instanceof Error && err.stack)\n                return `${err}\\n\\nStack trace: ${err.stack}`;\n            return `${err}`;\n        }\n        finally {\n            await this.afterEachHook();\n        }\n    }\n    beforeEach(hookFunction) {\n        const previousBeforeEachHook = this.beforeEachHook;\n        this.beforeEachHook = () => hookFunction(previousBeforeEachHook);\n        return this;\n    }\n    afterEach(hookFunction) {\n        const previousAfterEachHook = this.afterEachHook;\n        this.afterEachHook = () => hookFunction(previousAfterEachHook);\n        return this;\n    }\n}\nexports.AsyncProperty = AsyncProperty;\nAsyncProperty.dummyHook = () => { };\n"]},"metadata":{},"sourceType":"script"}