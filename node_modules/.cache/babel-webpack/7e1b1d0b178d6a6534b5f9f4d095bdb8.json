{"ast":null,"code":"'use strict';\n\nvar _asyncToGenerator = require(\"/Users/sydneybailey/Internship/contract-testing/node_modules/@babel/runtime/helpers/asyncToGenerator\").default;\n\nconst {\n  CID\n} = require('multiformats/cid');\n\nconst configure = require('../lib/configure');\n\nconst toUrlSearchParams = require('../lib/to-url-search-params');\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\n\nmodule.exports = configure(api => {\n  /**\n   * @type {FilesAPI[\"cp\"]}\n   */\n  function cp(_x, _x2) {\n    return _cp.apply(this, arguments);\n  }\n\n  function _cp() {\n    _cp = _asyncToGenerator(function* (sources, destination, options = {}) {\n      /** @type {import('ipfs-core-types/src/utils').IPFSPath[]} */\n      const sourceArr = Array.isArray(sources) ? sources : [sources];\n      const res = yield api.post('files/cp', {\n        timeout: options.timeout,\n        signal: options.signal,\n        searchParams: toUrlSearchParams({\n          arg: sourceArr.concat(destination).map(src => src instanceof CID ? `/ipfs/${src}` : src),\n          ...options\n        }),\n        headers: options.headers\n      });\n      yield res.text();\n    });\n    return _cp.apply(this, arguments);\n  }\n\n  return cp;\n});","map":null,"metadata":{},"sourceType":"script"}