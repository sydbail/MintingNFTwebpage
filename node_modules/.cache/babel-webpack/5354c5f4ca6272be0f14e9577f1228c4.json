{"ast":null,"code":"'use strict';\n\nvar _asyncToGenerator = require(\"/Users/sydneybailey/Internship/contract-testing/node_modules/@babel/runtime/helpers/asyncToGenerator\").default;\n\nconst toCamel = require('../../lib/object-to-camel');\n\nconst configure = require('../../lib/configure');\n\nconst toUrlSearchParams = require('../../lib/to-url-search-params');\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/name/pubsub').API<HTTPClientExtraOptions>} NamePubsubAPI\n */\n\n\nmodule.exports = configure(api => {\n  /**\n   * @type {NamePubsubAPI[\"cancel\"]}\n   */\n  function cancel(_x) {\n    return _cancel.apply(this, arguments);\n  }\n\n  function _cancel() {\n    _cancel = _asyncToGenerator(function* (name, options = {}) {\n      const res = yield api.post('name/pubsub/cancel', {\n        timeout: options.timeout,\n        signal: options.signal,\n        searchParams: toUrlSearchParams({\n          arg: name,\n          ...options\n        }),\n        headers: options.headers\n      }); // @ts-ignore server output is not typed\n\n      return toCamel(yield res.json());\n    });\n    return _cancel.apply(this, arguments);\n  }\n\n  return cancel;\n});","map":{"version":3,"sources":["/Users/sydneybailey/Internship/contract-testing/node_modules/ipfs-http-client/src/name/pubsub/cancel.js"],"names":["toCamel","require","configure","toUrlSearchParams","module","exports","api","cancel","name","options","res","post","timeout","signal","searchParams","arg","headers","json"],"mappings":"AAAA;;;;AAEA,MAAMA,OAAO,GAAGC,OAAO,CAAC,2BAAD,CAAvB;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,qBAAD,CAAzB;;AACA,MAAME,iBAAiB,GAAGF,OAAO,CAAC,gCAAD,CAAjC;AAEA;AACA;AACA;AACA;;;AAEAG,MAAM,CAACC,OAAP,GAAiBH,SAAS,CAACI,GAAG,IAAI;AAChC;AACF;AACA;AAHkC,WAIjBC,MAJiB;AAAA;AAAA;;AAAA;AAAA,gCAIhC,WAAuBC,IAAvB,EAA6BC,OAAO,GAAG,EAAvC,EAA2C;AACzC,YAAMC,GAAG,SAASJ,GAAG,CAACK,IAAJ,CAAS,oBAAT,EAA+B;AAC/CC,QAAAA,OAAO,EAAEH,OAAO,CAACG,OAD8B;AAE/CC,QAAAA,MAAM,EAAEJ,OAAO,CAACI,MAF+B;AAG/CC,QAAAA,YAAY,EAAEX,iBAAiB,CAAC;AAC9BY,UAAAA,GAAG,EAAEP,IADyB;AAE9B,aAAGC;AAF2B,SAAD,CAHgB;AAO/CO,QAAAA,OAAO,EAAEP,OAAO,CAACO;AAP8B,OAA/B,CAAlB,CADyC,CAWzC;;AACA,aAAOhB,OAAO,OAAOU,GAAG,CAACO,IAAJ,EAAP,CAAd;AACD,KAjB+B;AAAA;AAAA;;AAkBhC,SAAOV,MAAP;AACD,CAnByB,CAA1B","sourcesContent":["'use strict'\n\nconst toCamel = require('../../lib/object-to-camel')\nconst configure = require('../../lib/configure')\nconst toUrlSearchParams = require('../../lib/to-url-search-params')\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/name/pubsub').API<HTTPClientExtraOptions>} NamePubsubAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {NamePubsubAPI[\"cancel\"]}\n   */\n  async function cancel (name, options = {}) {\n    const res = await api.post('name/pubsub/cancel', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: name,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    // @ts-ignore server output is not typed\n    return toCamel(await res.json())\n  }\n  return cancel\n})\n"]},"metadata":{},"sourceType":"script"}