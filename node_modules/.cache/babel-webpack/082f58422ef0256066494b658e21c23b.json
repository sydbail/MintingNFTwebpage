{"ast":null,"code":"'use strict';\n\nlet NotInitializedError = /*#__PURE__*/(() => {\n  class NotInitializedError extends Error {\n    constructor(message = 'not initialized') {\n      super(message);\n      this.name = 'NotInitializedError';\n      this.code = NotInitializedError.code;\n    }\n\n  }\n\n  NotInitializedError.code = 'ERR_NOT_INITIALIZED';\n  return NotInitializedError;\n})();\nexports.NotInitializedError = NotInitializedError;\nlet AlreadyInitializingError = /*#__PURE__*/(() => {\n  class AlreadyInitializingError extends Error {\n    constructor(message = 'cannot initialize an initializing node') {\n      super(message);\n      this.name = 'AlreadyInitializingError';\n      this.code = AlreadyInitializedError.code;\n    }\n\n  }\n\n  AlreadyInitializingError.code = 'ERR_ALREADY_INITIALIZING';\n  return AlreadyInitializingError;\n})();\nexports.AlreadyInitializingError = AlreadyInitializingError;\nlet AlreadyInitializedError = /*#__PURE__*/(() => {\n  class AlreadyInitializedError extends Error {\n    constructor(message = 'cannot re-initialize an initialized node') {\n      super(message);\n      this.name = 'AlreadyInitializedError';\n      this.code = AlreadyInitializedError.code;\n    }\n\n  }\n\n  AlreadyInitializedError.code = 'ERR_ALREADY_INITIALIZED';\n  return AlreadyInitializedError;\n})();\nexports.AlreadyInitializedError = AlreadyInitializedError;\nlet NotStartedError = /*#__PURE__*/(() => {\n  class NotStartedError extends Error {\n    constructor(message = 'not started') {\n      super(message);\n      this.name = 'NotStartedError';\n      this.code = NotStartedError.code;\n    }\n\n  }\n\n  NotStartedError.code = 'ERR_NOT_STARTED';\n  return NotStartedError;\n})();\nexports.NotStartedError = NotStartedError;\nlet AlreadyStartingError = /*#__PURE__*/(() => {\n  class AlreadyStartingError extends Error {\n    constructor(message = 'cannot start, already startin') {\n      super(message);\n      this.name = 'AlreadyStartingError';\n      this.code = AlreadyStartingError.code;\n    }\n\n  }\n\n  AlreadyStartingError.code = 'ERR_ALREADY_STARTING';\n  return AlreadyStartingError;\n})();\nexports.AlreadyStartingError = AlreadyStartingError;\nlet AlreadyStartedError = /*#__PURE__*/(() => {\n  class AlreadyStartedError extends Error {\n    constructor(message = 'cannot start, already started') {\n      super(message);\n      this.name = 'AlreadyStartedError';\n      this.code = AlreadyStartedError.code;\n    }\n\n  }\n\n  AlreadyStartedError.code = 'ERR_ALREADY_STARTED';\n  return AlreadyStartedError;\n})();\nexports.AlreadyStartedError = AlreadyStartedError;\nlet NotEnabledError = /*#__PURE__*/(() => {\n  class NotEnabledError extends Error {\n    constructor(message = 'not enabled') {\n      super(message);\n      this.name = 'NotEnabledError';\n      this.code = NotEnabledError.code;\n    }\n\n  }\n\n  NotEnabledError.code = 'ERR_NOT_ENABLED';\n  return NotEnabledError;\n})();\nexports.NotEnabledError = NotEnabledError;","map":null,"metadata":{},"sourceType":"script"}